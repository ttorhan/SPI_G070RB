ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32g0xx_hal_adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
  18              		.align	1
  19              		.weak	HAL_ADC_MspInit
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	HAL_ADC_MspInit:
  25              	.LVL0:
  26              	.LFB442:
  27              		.file 1 "Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c"
   1:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
   2:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   ******************************************************************************
   3:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @file    stm32g0xx_hal_adc.c
   4:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @author  MCD Application Team
   5:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following
   6:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          functionalities of the Analog to Digital Converter (ADC)
   7:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          peripheral:
   8:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *           + Peripheral State functions
  11:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          Other functions (extended functions) are available in file
  12:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          "stm32g0xx_hal_adc_ex.c".
  13:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *
  14:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   ******************************************************************************
  15:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @attention
  16:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *
  17:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * Copyright (c) 2018 STMicroelectronics.
  18:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * All rights reserved.
  19:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *
  20:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * This software is licensed under terms that can be found in the LICENSE file
  21:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * in the root directory of this software component.
  22:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  23:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *
  24:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   ******************************************************************************
  25:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   @verbatim
  26:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   ==============================================================================
  27:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                      ##### ADC peripheral features #####
  28:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   ==============================================================================
  29:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   [..]
  30:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   (+) 12-bit, 10-bit, 8-bit or 6-bit configurable resolution.
  31:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 2


  32:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   (+) Interrupt generation at the end of regular conversion and in case of
  33:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       analog watchdog or overrun events.
  34:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  35:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   (+) Single and continuous conversion modes.
  36:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  37:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   (+) Scan mode for conversion of several channels sequentially.
  38:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  39:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   (+) Data alignment with in-built data coherency.
  40:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  41:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   (+) Programmable sampling time (common to group of channels)
  42:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  43:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   (+) External trigger (timer or EXTI) with configurable polarity
  44:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  45:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   (+) DMA request generation for transfer of conversions data of regular group.
  46:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  47:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   (+) ADC calibration
  48:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  49:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   (+) ADC conversion of regular group.
  50:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  51:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   (+) ADC supply requirements: 1.62 V to 3.6 V.
  52:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  53:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   (+) ADC input range: from Vref- (connected to Vssa) to Vref+ (connected to
  54:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       Vdda or to an external voltage reference).
  55:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  56:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  57:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                      ##### How to use this driver #####
  58:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   ==============================================================================
  59:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     [..]
  60:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  61:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      *** Configuration of top level parameters related to ADC ***
  62:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      ============================================================
  63:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      [..]
  64:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  65:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) Enable the ADC interface
  66:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         (++) As prerequisite, ADC clock must be configured at RCC top level.
  67:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****              Caution: On STM32G0, ADC clock frequency max is 35MHz (refer
  68:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       to device datasheet).
  69:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       Therefore, ADC clock source from RCC and ADC clock
  70:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       prescaler must be configured to remain below
  71:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       this maximum frequency.
  72:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  73:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         (++) Two clock settings are mandatory:
  74:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****              (+++) ADC clock (core clock, also possibly conversion clock).
  75:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  76:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****              (+++) ADC clock (conversions clock).
  77:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    Four possible clock sources: synchronous clock from APB clock (same as ADC core 
  78:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    or asynchronous clock from RCC level: SYSCLK, HSI16, PLLPCLK.
  79:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  80:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****              (+++) Example:
  81:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    Into HAL_ADC_MspInit() (recommended code location) or with
  82:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    other device clock parameters configuration:
  83:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                (+++) __HAL_RCC_ADC_CLK_ENABLE();                  (mandatory: core clock)
  84:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  85:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         (++) ADC clock source and clock prescaler are configured at ADC level with
  86:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****              parameter "ClockPrescaler" using function HAL_ADC_Init().
  87:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  88:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) ADC pins configuration
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 3


  89:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (++) Enable the clock for the ADC GPIOs
  90:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_ENABLE()
  91:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (++) Configure these ADC pins in analog mode
  92:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               using function HAL_GPIO_Init()
  93:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  94:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
  95:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (++) Configure the NVIC for ADC
  96:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
  97:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
  98:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               into the function of corresponding ADC interruption vector
  99:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               ADCx_IRQHandler().
 100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (++) Configure the DMA (DMA channel, mode normal or circular, ...)
 103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               using function HAL_DMA_Init().
 104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (++) Configure the NVIC for DMA
 105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
 107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               into the function of corresponding DMA interruption vector
 108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               DMAx_Channelx_IRQHandler().
 109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      *** Configuration of ADC, group regular, channels parameters ***
 111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      ================================================================
 112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      [..]
 113:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) Configure the ADC parameters (resolution, data alignment, ...)
 115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         and regular group parameters (conversion trigger, sequencer, ...)
 116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         using function HAL_ADC_Init().
 117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) Configure the channels for regular group parameters (channel number,
 119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         channel rank into sequencer, ..., into regular group)
 120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         using function HAL_ADC_ConfigChannel().
 121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) Optionally, configure the analog watchdog parameters (channels
 123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         monitored, thresholds, ...)
 124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         using function HAL_ADC_AnalogWDGConfig().
 125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      *** Execution of ADC conversions ***
 127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      ====================================
 128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      [..]
 129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 130:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) Optionally, perform an automatic ADC calibration to improve the
 131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         conversion accuracy
 132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         using function HAL_ADCEx_Calibration_Start().
 133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) ADC driver can be used among three modes: polling, interruption,
 135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         transfer by DMA.
 136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         (++) ADC conversion by polling:
 138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 using function HAL_ADC_Start()
 140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (+++) Wait for ADC conversion completion
 141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 using function HAL_ADC_PollForConversion()
 142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (+++) Retrieve conversion results
 143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 using function HAL_ADC_Stop()
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 4


 146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         (++) ADC conversion by interruption:
 148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 using function HAL_ADC_Start_IT()
 150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback()
 152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 (this function must be implemented in user program)
 153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (+++) Retrieve conversion results
 154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 155:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 using function HAL_ADC_Stop_IT()
 157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         (++) ADC conversion with transfer by DMA:
 159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 using function HAL_ADC_Start_DMA()
 161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback() or HAL_ADC_ConvHalfCpltCallback()
 163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 (these functions must be implemented in user program)
 164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (+++) Conversion results are automatically transferred by DMA into
 165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 destination variable address.
 166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 using function HAL_ADC_Stop_DMA()
 168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      [..]
 170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (@) Callback functions must be implemented in user program:
 172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+@) HAL_ADC_ErrorCallback()
 173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+@) HAL_ADC_LevelOutOfWindowCallback() (callback of analog watchdog)
 174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+@) HAL_ADC_ConvCpltCallback()
 175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+@) HAL_ADC_ConvHalfCpltCallback
 176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      *** Deinitialization of ADC ***
 178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      ============================================================
 179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      [..]
 180:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) Disable the ADC interface
 182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (++) ADC clock can be hard reset and disabled at RCC top level.
 183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         (++) Hard reset of ADC peripherals
 184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****              using macro __ADCx_FORCE_RESET(), __ADCx_RELEASE_RESET().
 185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         (++) ADC clock disable
 186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****              using the equivalent macro/functions as configuration step.
 187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****              (+++) Example:
 188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
 189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    other device clock parameters configuration:
 190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                (+++) RCC_OscInitStructure.OscillatorType = RCC_OSCILLATORTYPE_HSI14;
 191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                (+++) RCC_OscInitStructure.HSI14State = RCC_HSI14_OFF; (if not used for system clock
 192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                (+++) HAL_RCC_OscConfig(&RCC_OscInitStructure);
 193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) ADC pins configuration
 195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (++) Disable the clock for the ADC GPIOs
 196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_DISABLE()
 197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (++) Disable the NVIC for ADC
 200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 5


 203:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (++) Deinitialize the DMA
 204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               using function HAL_DMA_Init().
 205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (++) Disable the NVIC for DMA
 206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     [..]
 209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 210:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     *** Callback registration ***
 211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     =============================================
 212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     [..]
 213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      The compilation flag USE_HAL_ADC_REGISTER_CALLBACKS, when set to 1,
 215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      allows the user to configure dynamically the driver callbacks.
 216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      Use Functions HAL_ADC_RegisterCallback()
 217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      to register an interrupt callback.
 218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     [..]
 219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      Function HAL_ADC_RegisterCallback() allows to register following callbacks:
 221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 222:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      This function takes as parameters the HAL peripheral handle, the Callback ID
 231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      and a pointer to the user callback function.
 232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     [..]
 233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      Use function HAL_ADC_UnRegisterCallback to reset a callback to the default
 235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      weak function.
 236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     [..]
 237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      HAL_ADC_UnRegisterCallback takes as parameters the HAL peripheral handle,
 239:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      and the Callback ID.
 240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      This function allows to reset following callbacks:
 241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 245:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      [..]
 251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      By default, after the HAL_ADC_Init() and when the state is HAL_ADC_STATE_RESET
 253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      all callbacks are set to the corresponding weak functions:
 254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      examples HAL_ADC_ConvCpltCallback(), HAL_ADC_ErrorCallback().
 255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      Exception done for MspInit and MspDeInit functions that are
 256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      reset to the legacy weak functions in the HAL_ADC_Init()/ HAL_ADC_DeInit() only when
 257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      these callbacks are null (not registered beforehand).
 258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     [..]
 259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 6


 260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      If MspInit or MspDeInit are not null, the HAL_ADC_Init()/ HAL_ADC_DeInit()
 261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state.
 262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      [..]
 263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      Callbacks can be registered/unregistered in HAL_ADC_STATE_READY state only.
 265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      Exception done MspInit/MspDeInit functions that can be registered/unregistered
 266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      in HAL_ADC_STATE_READY or HAL_ADC_STATE_RESET state,
 267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     [..]
 269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      Then, the user first registers the MspInit/MspDeInit user callbacks
 271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      using HAL_ADC_RegisterCallback() before calling HAL_ADC_DeInit()
 272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      or HAL_ADC_Init() function.
 273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      [..]
 274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      When the compilation flag USE_HAL_ADC_REGISTER_CALLBACKS is set to 0 or
 276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      not defined, the callback registration feature is not available and all callbacks
 277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      are set to the corresponding weak functions.
 278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 279:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   @endverbatim
 280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   ******************************************************************************
 281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 284:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #include "stm32g0xx_hal.h"
 285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /** @addtogroup STM32G0xx_HAL_Driver
 287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @{
 288:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /** @defgroup ADC ADC
 291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief ADC HAL module driver
 292:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @{
 293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
 296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
 298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
 299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /** @defgroup ADC_Private_Constants ADC Private Constants
 301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @{
 302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 303:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* Fixed timeout values for ADC calibration, enable settling time, disable  */
 305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* settling time.                                                           */
 306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* Values defined to be higher than worst cases: low clock frequency,       */
 307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* maximum prescaler.                                                       */
 308:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* Ex of profile low frequency : Clock source at 0.1 MHz, ADC clock         */
 309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* prescaler 4, sampling time 7.5 ADC clock cycles, resolution 12 bits.     */
 310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* Unit: ms                                                                 */
 311:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #define ADC_ENABLE_TIMEOUT              (2UL)
 312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #define ADC_DISABLE_TIMEOUT             (2UL)
 313:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #define ADC_STOP_CONVERSION_TIMEOUT     (2UL)
 314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #define ADC_CHANNEL_CONF_RDY_TIMEOUT    (1UL)
 315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 316:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* Register CHSELR bits corresponding to ranks 2 to 8 .                     */
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 7


 317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #define ADC_CHSELR_SQ2_TO_SQ8           (ADC_CHSELR_SQ2 | ADC_CHSELR_SQ3 | ADC_CHSELR_SQ4 | \
 318:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                          ADC_CHSELR_SQ5 | ADC_CHSELR_SQ6 | ADC_CHSELR_SQ7 | ADC_CHS
 319:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 320:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
 321:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @}
 322:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 323:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 324:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 325:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
 326:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 327:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
 328:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @{
 329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 330:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma);
 331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma);
 332:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma);
 333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
 334:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @}
 335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* Exported functions ---------------------------------------------------------*/
 338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 340:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @{
 341:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 Initialization and de-initialization functions
 344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief    ADC Initialization and Configuration functions
 345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *
 346:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** @verbatim
 347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****  ===============================================================================
 348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               ##### Initialization and de-initialization functions #####
 349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****  ===============================================================================
 350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Initialize and configure the ADC.
 352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) De-initialize the ADC.
 353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** @endverbatim
 354:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @{
 355:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
 358:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Initialize the ADC peripheral and regular group according to
 359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         parameters specified in structure "ADC_InitTypeDef".
 360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   As prerequisite, ADC clock must be configured at RCC top level
 361:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         (refer to description of RCC configuration for ADC
 362:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         in header of this file).
 363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
 364:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         This function initializes the ADC MSP (HAL_ADC_MspInit()) only when
 365:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         coming from ADC state reset. Following calls to this function can
 366:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         be used to reconfigure some parameters of ADC_InitTypeDef
 367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         structure on the fly, without modifying MSP configuration. If ADC
 368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         MSP has to be modified again, HAL_ADC_DeInit() must be called
 369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         before HAL_ADC_Init().
 370:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
 371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         For parameters constraints, see comments of structure
 372:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         "ADC_InitTypeDef".
 373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   This function configures the ADC within 2 scopes: scope of entire
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 8


 374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         ADC and scope of regular group. For parameters details, see comments
 375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         of structure "ADC_InitTypeDef".
 376:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
 377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status
 378:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
 380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
 381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_cfgr1 = 0UL;
 383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_cfgr2 = 0UL;
 384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_conversion_on_going;
 385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 386:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check ADC handle */
 388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (hadc == NULL)
 389:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     return HAL_ERROR;
 391:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 392:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 393:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
 394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 398:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc->Init.ExternalTrigConv));
 402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 404:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
 405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
 406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoPowerOff));
 407:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon1));
 408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon2));
 409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));
 410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (hadc->Init.OversamplingMode == ENABLE)
 411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_OVERSAMPLING_RATIO(hadc->Init.Oversampling.Ratio));
 413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 414:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_TRIGGER_FREQ(hadc->Init.TriggerFrequencyMode));
 417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 423:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 424:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
 425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 426:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 427:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 428:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* ADC group regular discontinuous mode can be enabled only if              */
 429:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* continuous mode is disabled.                                             */
 430:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(!((hadc->Init.DiscontinuousConvMode == ENABLE) && (hadc->Init.ContinuousConvMode == 
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 9


 431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 432:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Actions performed only if ADC is coming from state reset:                */
 433:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* - Initialization of ADC MSP                                              */
 434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (hadc->State == HAL_ADC_STATE_RESET)
 435:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 436:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 437:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Init the ADC Callback settings */
 438:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->ConvCpltCallback              = HAL_ADC_ConvCpltCallback;                 /* Legacy weak 
 439:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->ConvHalfCpltCallback          = HAL_ADC_ConvHalfCpltCallback;             /* Legacy weak 
 440:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->LevelOutOfWindowCallback      = HAL_ADC_LevelOutOfWindowCallback;         /* Legacy weak 
 441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->ErrorCallback                 = HAL_ADC_ErrorCallback;                    /* Legacy weak 
 442:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback     = HAL_ADCEx_LevelOutOfWindow2Callback;      /* Legacy weak 
 443:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback     = HAL_ADCEx_LevelOutOfWindow3Callback;      /* Legacy weak 
 444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->EndOfSamplingCallback         = HAL_ADCEx_EndOfSamplingCallback;          /* Legacy weak 
 445:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 446:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (hadc->MspInitCallback == NULL)
 447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 448:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit  */
 449:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 451:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Init the low level hardware */
 452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->MspInitCallback(hadc);
 453:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #else
 454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Init the low level hardware */
 455:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     HAL_ADC_MspInit(hadc);
 456:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Set ADC error code to none */
 459:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 460:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Initialize Lock */
 462:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->Lock = HAL_UNLOCKED;
 463:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 465:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 467:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Enable ADC internal voltage regulator */
 468:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     LL_ADC_EnableInternalRegulator(hadc->Instance);
 469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 470:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Delay for ADC stabilization time */
 471:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Wait loop initialization and execution */
 472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Note: Variable divided by 2 to compensate partially              */
 473:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*       CPU processing cycles, scaling in us split to not          */
 474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*       exceed 32 bits register capacity and handle low frequency. */
 475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     wait_loop_index = ((LL_ADC_DELAY_INTERNAL_REGUL_STAB_US / 10UL) * ((SystemCoreClock / (100000UL
 476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       wait_loop_index--;
 479:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 481:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 482:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Verification that ADC voltage regulator is correctly enabled, whether    */
 483:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* or not ADC is coming from state reset (if any potential problem of       */
 484:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* clocking, voltage regulator would not be enabled).                       */
 485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 486:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Update ADC state machine to error */
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 10


 488:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 490:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Set ADC error code to ADC peripheral internal error */
 491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 492:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 494:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 496:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */
 497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* correctly completed and if there is no conversion on going on regular    */
 498:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* group (ADC may already be enabled at this point if HAL_ADC_Init() is     */
 499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* called to update a parameter on the fly).                                */
 500:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   tmp_adc_reg_is_conversion_on_going = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
 503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      )
 505:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 506:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Set ADC state */
 507:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 509:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 510:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 511:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Configuration of common ADC parameters                                 */
 512:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 513:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 514:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:              */
 515:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - Internal voltage regulator (no parameter in HAL ADC init structure) */
 516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - Clock configuration                                                 */
 517:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - ADC resolution                                                      */
 518:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - Oversampling                                                        */
 519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - discontinuous mode                                                  */
 520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - LowPowerAutoWait mode                                               */
 521:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - LowPowerAutoPowerOff mode                                           */
 522:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - continuous conversion mode                                          */
 523:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - overrun                                                             */
 524:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - external trigger to start conversion                                */
 525:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - external trigger polarity                                           */
 526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - data alignment                                                      */
 527:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - resolution                                                          */
 528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - scan direction                                                      */
 529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - DMA continuous request                                              */
 530:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - Trigger frequency mode                                              */
 531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Note: If low power mode AutoPowerOff is enabled, ADC enable            */
 532:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*       and disable phases are performed automatically by hardware       */
 533:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*       (in this case, flag ADC_FLAG_RDY is not set).                    */
 534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 535:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 536:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Some parameters of this register are not reset, since they are set   */
 537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* by other functions and must be kept in case of usage of this         */
 538:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* function on the fly (update of a parameter of ADC_InitTypeDef        */
 539:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* without needing to reconfigure all other ADC groups/channels         */
 540:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* parameters):                                                         */
 541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*   - internal measurement paths (VrefInt, ...)                        */
 542:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*     (set into HAL_ADC_ConfigChannel() )                              */
 543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       tmp_cfgr1 |= (hadc->Init.Resolution                                          |
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 11


 545:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                     ADC_CFGR1_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)      |
 546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                     ADC_CFGR1_AUTOOFF((uint32_t)hadc->Init.LowPowerAutoPowerOff)   |
 547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                     ADC_CFGR1_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)  |
 548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                     ADC_CFGR1_OVERRUN(hadc->Init.Overrun)                          |
 549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                     hadc->Init.DataAlign                                           |
 550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                     ADC_SCAN_SEQ_MODE(hadc->Init.ScanConvMode)                     |
 551:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                     ADC_CFGR1_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 552:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 553:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Update setting of discontinuous mode only if continuous mode is disabled */
 554:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (hadc->Init.DiscontinuousConvMode == ENABLE)
 555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if (hadc->Init.ContinuousConvMode == DISABLE)
 557:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Enable the selected ADC group regular discontinuous mode */
 559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           tmp_cfgr1 |= ADC_CFGR1_DISCEN;
 560:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 561:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         else
 562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 563:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* ADC regular group discontinuous was intended to be enabled,        */
 564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* but ADC regular group modes continuous and sequencer discontinuous */
 565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* cannot be enabled simultaneously.                                  */
 566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Update ADC state machine to error */
 568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
 571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 572:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 573:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 574:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Enable external trigger if trigger selection is different of software  */
 576:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* start.                                                                 */
 577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Note: This configuration keeps the hardware feature of parameter       */
 578:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
 579:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       software start.                                                  */
 580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 581:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         tmp_cfgr1 |= ((hadc->Init.ExternalTrigConv & ADC_CFGR1_EXTSEL) |
 583:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       hadc->Init.ExternalTrigConvEdge);
 584:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 585:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Update ADC configuration register with previous settings */
 587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR1,
 588:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_RES       |
 589:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_DISCEN    |
 590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_CHSELRMOD |
 591:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_AUTOFF    |
 592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_WAIT      |
 593:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_CONT      |
 594:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_OVRMOD    |
 595:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_EXTSEL    |
 596:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_EXTEN     |
 597:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_ALIGN     |
 598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_SCANDIR   |
 599:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_DMACFG,
 600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  tmp_cfgr1);
 601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 12


 602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       tmp_cfgr2 |= ((hadc->Init.ClockPrescaler & ADC_CFGR2_CKMODE) |
 603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                     hadc->Init.TriggerFrequencyMode
 604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    );
 605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (hadc->Init.OversamplingMode == ENABLE)
 607:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         tmp_cfgr2 |= (ADC_CFGR2_OVSE |
 609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       (hadc->Init.ClockPrescaler & ADC_CFGR2_CKMODE) |
 610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       hadc->Init.Oversampling.Ratio         |
 611:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       hadc->Init.Oversampling.RightBitShift |
 612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       hadc->Init.Oversampling.TriggeredMode
 613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                      );
 614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR2,
 617:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR2_CKMODE |
 618:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR2_LFTRIG |
 619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR2_OVSE   |
 620:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR2_OVSR   |
 621:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR2_OVSS   |
 622:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR2_TOVS,
 623:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  tmp_cfgr2);
 624:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Configuration of ADC clock mode: asynchronous clock source           */
 626:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* with selectable prescaler.                                           */
 627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV1) &&
 628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV2) &&
 629:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV4))
 630:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 631:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         MODIFY_REG(ADC1_COMMON->CCR,
 632:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CCR_PRESC,
 633:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    hadc->Init.ClockPrescaler & ADC_CCR_PRESC);
 634:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 635:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 636:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 637:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Channel sampling time configuration */
 638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     LL_ADC_SetSamplingTimeCommonChannels(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_1, hadc->Init.S
 639:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     LL_ADC_SetSamplingTimeCommonChannels(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_2, hadc->Init.S
 640:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Configuration of regular group sequencer:                              */
 642:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* - if scan mode is disabled, regular channels sequence length is set to */
 643:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*   0x00: 1 channel converted (channel on regular rank 1)                */
 644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*   Parameter "NbrOfConversion" is discarded.                            */
 645:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*   Note: Scan mode is not present by hardware on this device, but       */
 646:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*   emulated by software for alignment over all STM32 devices.           */
 647:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* - if scan mode is enabled, regular channels sequence length is set to  */
 648:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*   parameter "NbrOfConversion".                                         */
 649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*   Channels must be configured into each rank using function            */
 650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*   "HAL_ADC_ConfigChannel()".                                           */
 651:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (hadc->Init.ScanConvMode == ADC_SCAN_DISABLE)
 652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set sequencer scan length by clearing ranks above rank 1             */
 654:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* and do not modify rank 1 value.                                      */
 655:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->Instance->CHSELR,
 656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               ADC_CHSELR_SQ2_TO_SQ8);
 657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 658:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     else if (hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 13


 659:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 660:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC group regular sequencer:                                   */
 661:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*  - Set ADC group regular sequencer to value memorized              */
 662:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*    in HAL ADC handle                                               */
 663:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*    Note: This value maybe be initialized at a unknown value,       */
 664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*          therefore after the first call of "HAL_ADC_Init()",       */
 665:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*          each rank corresponding to parameter "NbrOfConversion"    */
 666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*          must be set using "HAL_ADC_ConfigChannel()".              */
 667:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*  - Set sequencer scan length by clearing ranks above maximum rank  */
 668:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*    and do not modify other ranks value.                            */
 669:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CHSELR,
 670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CHSELR_SQ_ALL,
 671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  (ADC_CHSELR_SQ2_TO_SQ8 << (((hadc->Init.NbrOfConversion - 1UL) * ADC_REGULAR_RANK_
 672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  | (hadc->ADCGroupRegularSequencerRanks)
 673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 );
 674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     else
 676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Nothing to do */
 678:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 679:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Check back that ADC registers have effectively been configured to      */
 681:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* ensure of no potential problem of ADC core peripheral clocking.        */
 682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (LL_ADC_GetSamplingTimeCommonChannels(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_1)
 683:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         == hadc->Init.SamplingTimeCommon1)
 684:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 685:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC error code to none */
 686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set the ADC state */
 689:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 690:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 691:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
 692:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 693:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     else
 694:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 695:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Update ADC state machine to error */
 696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_ERROR_INTERNAL);
 699:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
 701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 702:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 703:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       tmp_hal_status = HAL_ERROR;
 704:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 705:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 707:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else
 708:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Update ADC state machine to error */
 710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 711:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 712:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 714:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 715:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return tmp_hal_status;
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 14


 716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 717:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 718:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
 719:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Deinitialize the ADC peripheral registers to their default reset
 720:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         values, with deinitialization of the ADC MSP.
 721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   For devices with several ADCs: reset of ADC common registers is done
 722:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         only if all ADCs sharing the same common group are disabled.
 723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         (function "HAL_ADC_MspDeInit()" is also called under the same conditions:
 724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         all ADC instances use the same core clock at RCC level, disabling
 725:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         the core clock reset all ADC instances).
 726:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         If this is not the case, reset of these common parameters reset is
 727:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         bypassed without error reporting: it can be the intended behavior in
 728:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         case of reset of a single ADC while the other ADCs sharing the same
 729:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         common group is still running.
 730:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
 731:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status
 732:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 733:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef *hadc)
 734:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
 735:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 736:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 737:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check ADC handle */
 738:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (hadc == NULL)
 739:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 740:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     return HAL_ERROR;
 741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 742:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 743:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
 744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 745:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 746:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Set ADC state */
 747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 748:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 749:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Stop potential conversion on going, on regular group */
 750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc);
 751:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 752:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
 753:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 754:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 755:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Disable the ADC peripheral */
 756:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
 757:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 758:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
 759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
 760:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 761:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Change ADC state */
 762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       hadc->State = HAL_ADC_STATE_READY;
 763:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 764:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 765:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Disable ADC internal voltage regulator */
 766:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     LL_ADC_DisableInternalRegulator(hadc->Instance);
 767:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 768:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 769:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Note: HAL ADC deInit is done independently of ADC conversion stop        */
 770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*       and disable return status. In case of status fail, attempt to      */
 771:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*       perform deinitialization anyway and it is up user code in          */
 772:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*       in HAL_ADC_MspDeInit() to reset the ADC peripheral using           */
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 15


 773:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*       system RCC hard reset.                                             */
 774:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 775:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* ========== Reset ADC registers ========== */
 776:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Reset register IER */
 777:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_AWD3  | ADC_IT_AWD2 |
 778:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                               ADC_IT_AWD1  | ADC_IT_OVR  |
 779:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                               ADC_IT_EOS   | ADC_IT_EOC  |
 780:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                               ADC_IT_EOSMP | ADC_IT_RDY));
 781:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 782:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Reset register ISR */
 783:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_AWD3  | ADC_FLAG_AWD2 |
 784:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                               ADC_FLAG_AWD1  | ADC_FLAG_OVR  |
 785:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                               ADC_FLAG_EOS   | ADC_FLAG_EOC  |
 786:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                               ADC_FLAG_EOSMP | ADC_FLAG_RDY));
 787:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 788:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Reset register CR */
 789:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Bits ADC_CR_ADCAL, ADC_CR_ADSTP, ADC_CR_ADSTART are in access mode     */
 790:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* "read-set": no direct reset applicable.                                */
 791:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 792:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Reset register CFGR1 */
 793:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->Instance->CFGR1 &= ~(ADC_CFGR1_AWD1CH   | ADC_CFGR1_AWD1EN  | ADC_CFGR1_AWD1SGL | ADC_CFGR1
 794:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                              ADC_CFGR1_CHSELRMOD | ADC_CFGR1_AUTOFF |
 795:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                              ADC_CFGR1_WAIT | ADC_CFGR1_CONT | ADC_CFGR1_OVRMOD |
 796:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                              ADC_CFGR1_EXTEN   | ADC_CFGR1_EXTSEL | ADC_CFGR1_ALIGN  | ADC_CFGR1_RE
 797:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                              ADC_CFGR1_SCANDIR | ADC_CFGR1_DMACFG | ADC_CFGR1_DMAEN);
 798:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 799:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Reset register SMPR */
 800:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->Instance->SMPR &= ~ADC_SMPR_SMP1;
 801:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 802:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Reset register CHSELR */
 803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->Instance->CHSELR &= ~(ADC_CHSELR_SQ_ALL);
 804:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 805:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Reset register DR */
 806:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable */
 807:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 808:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Reset registers AWDxTR */
 809:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->Instance->AWD1TR &= ~(ADC_AWD1TR_HT1 | ADC_AWD1TR_LT1);
 810:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->Instance->AWD2TR &= ~(ADC_AWD2TR_HT2 | ADC_AWD2TR_LT2);
 811:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->Instance->AWD3TR &= ~(ADC_AWD3TR_HT3 | ADC_AWD3TR_LT3);
 812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 813:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Reset register CFGR2 */
 814:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Note: CFGR2 reset done at the end of de-initialization due to          */
 815:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*       clock source reset                                               */
 816:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Note: Update of ADC clock mode is conditioned to ADC state disabled:   */
 817:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*       already done above.                                              */
 818:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->Instance->CFGR2 &= ~ADC_CFGR2_CKMODE;
 819:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 820:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Reset register CCR */
 821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   ADC1_COMMON->CCR &= ~(ADC_CCR_VBATEN | ADC_CCR_TSEN | ADC_CCR_VREFEN | ADC_CCR_PRESC);
 822:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 823:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* ========== Hard reset ADC peripheral ========== */
 824:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Performs a global reset of the entire ADC peripheral: ADC state is     */
 825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* forced to a similar state after device power-on.                       */
 826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Note: A possible implementation is to add RCC bus reset of ADC         */
 827:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* (for example, using macro                                              */
 828:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*  __HAL_RCC_ADC..._FORCE_RESET()/..._RELEASE_RESET()/..._CLK_DISABLE()) */
 829:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* in function "void HAL_ADC_MspDeInit(ADC_HandleTypeDef *hadc)":         */
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 16


 830:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 831:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (hadc->MspDeInitCallback == NULL)
 832:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 833:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit  */
 834:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 835:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 836:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* DeInit the low level hardware */
 837:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->MspDeInitCallback(hadc);
 838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #else
 839:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* DeInit the low level hardware */
 840:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_ADC_MspDeInit(hadc);
 841:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 842:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 843:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Reset HAL ADC handle variable */
 844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->ADCGroupRegularSequencerRanks = 0x00000000UL;
 845:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 846:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Set ADC error code to none */
 847:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   ADC_CLEAR_ERRORCODE(hadc);
 848:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 849:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Set ADC state */
 850:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->State = HAL_ADC_STATE_RESET;
 851:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 852:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 853:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 854:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return tmp_hal_status;
 855:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 856:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 857:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
 858:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Initialize the ADC MSP.
 859:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
 860:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval None
 861:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 862:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef *hadc)
 863:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
  28              		.loc 1 863 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 864:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 865:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   UNUSED(hadc);
  33              		.loc 1 865 3 view .LVU1
 866:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 868:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             function HAL_ADC_MspInit must be implemented in the user file.
 869:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****    */
 870:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
  34              		.loc 1 870 1 is_stmt 0 view .LVU2
  35              		@ sp needed
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE442:
  40              		.global	__aeabi_uidiv
  41              		.section	.text.HAL_ADC_Init,"ax",%progbits
  42              		.align	1
  43              		.global	HAL_ADC_Init
  44              		.syntax unified
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 17


  45              		.code	16
  46              		.thumb_func
  48              	HAL_ADC_Init:
  49              	.LVL1:
  50              	.LFB440:
 380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  51              		.loc 1 380 1 is_stmt 1 view -0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 8
  54              		@ frame_needed = 0, uses_anonymous_args = 0
 380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  55              		.loc 1 380 1 is_stmt 0 view .LVU4
  56 0000 30B5     		push	{r4, r5, lr}
  57              	.LCFI0:
  58              		.cfi_def_cfa_offset 12
  59              		.cfi_offset 4, -12
  60              		.cfi_offset 5, -8
  61              		.cfi_offset 14, -4
  62 0002 83B0     		sub	sp, sp, #12
  63              	.LCFI1:
  64              		.cfi_def_cfa_offset 24
  65 0004 0400     		movs	r4, r0
 381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_cfgr1 = 0UL;
  66              		.loc 1 381 3 is_stmt 1 view .LVU5
  67              	.LVL2:
 382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_cfgr2 = 0UL;
  68              		.loc 1 382 3 view .LVU6
 383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_conversion_on_going;
  69              		.loc 1 383 3 view .LVU7
 384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
  70              		.loc 1 384 3 view .LVU8
 385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  71              		.loc 1 385 3 view .LVU9
 385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  72              		.loc 1 385 17 is_stmt 0 view .LVU10
  73 0006 0023     		movs	r3, #0
  74 0008 0193     		str	r3, [sp, #4]
 388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
  75              		.loc 1 388 3 is_stmt 1 view .LVU11
 388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
  76              		.loc 1 388 6 is_stmt 0 view .LVU12
  77 000a 0028     		cmp	r0, #0
  78 000c 00D1     		bne	.LCB39
  79 000e 06E1     		b	.L21	@long jump
  80              	.LCB39:
 394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
  81              		.loc 1 394 3 is_stmt 1 view .LVU13
 395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
  82              		.loc 1 395 3 view .LVU14
 396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
  83              		.loc 1 396 3 view .LVU15
 397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
  84              		.loc 1 397 3 view .LVU16
 398:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
  85              		.loc 1 398 3 view .LVU17
 399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  86              		.loc 1 399 3 view .LVU18
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 18


 400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc->Init.ExternalTrigConv));
  87              		.loc 1 400 3 view .LVU19
 401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
  88              		.loc 1 401 3 view .LVU20
 402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
  89              		.loc 1 402 3 view .LVU21
 403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
  90              		.loc 1 403 3 view .LVU22
 404:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
  91              		.loc 1 404 3 view .LVU23
 405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoPowerOff));
  92              		.loc 1 405 3 view .LVU24
 406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon1));
  93              		.loc 1 406 3 view .LVU25
 407:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon2));
  94              		.loc 1 407 3 view .LVU26
 408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));
  95              		.loc 1 408 3 view .LVU27
 409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (hadc->Init.OversamplingMode == ENABLE)
  96              		.loc 1 409 3 view .LVU28
 410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
  97              		.loc 1 410 3 view .LVU29
 412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
  98              		.loc 1 412 5 view .LVU30
 413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
  99              		.loc 1 413 5 view .LVU31
 414:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 100              		.loc 1 414 5 view .LVU32
 416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 101              		.loc 1 416 3 view .LVU33
 418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 102              		.loc 1 418 3 view .LVU34
 424:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 103              		.loc 1 424 7 view .LVU35
 430:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 104              		.loc 1 430 3 view .LVU36
 434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 105              		.loc 1 434 3 view .LVU37
 434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 106              		.loc 1 434 11 is_stmt 0 view .LVU38
 107 0010 836D     		ldr	r3, [r0, #88]
 434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 108              		.loc 1 434 6 view .LVU39
 109 0012 002B     		cmp	r3, #0
 110 0014 13D0     		beq	.L24
 111              	.LVL3:
 112              	.L4:
 465:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 113              		.loc 1 465 3 is_stmt 1 view .LVU40
 465:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 114              		.loc 1 465 45 is_stmt 0 view .LVU41
 115 0016 2368     		ldr	r3, [r4]
 116              	.LVL4:
 117              	.LBB126:
 118              	.LBI126:
 119              		.file 2 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h"
   1:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 19


   2:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   ******************************************************************************
   3:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @file    stm32g0xx_ll_adc.h
   4:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @author  MCD Application Team
   5:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   ******************************************************************************
   7:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @attention
   8:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
   9:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * Copyright (c) 2018 STMicroelectronics.
  10:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * All rights reserved.
  11:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
  12:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * in the root directory of this software component.
  14:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
  16:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   ******************************************************************************
  17:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
  18:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  19:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #ifndef STM32G0xx_LL_ADC_H
  21:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define STM32G0xx_LL_ADC_H
  22:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  23:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #ifdef __cplusplus
  24:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** extern "C" {
  25:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #endif
  26:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  27:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #include "stm32g0xx.h"
  29:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  30:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @addtogroup STM32G0xx_LL_Driver
  31:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
  32:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
  33:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  34:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #if defined (ADC1)
  35:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  36:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL ADC
  37:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
  38:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
  39:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  40:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  43:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  45:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
  46:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
  47:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  48:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Internal mask for ADC group regular sequencer:                             */
  49:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* To select into literal LL_ADC_REG_RANK_x the relevant bits for:            */
  50:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  51:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  52:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_RANK_ID_SQRX_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
  53:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  54:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Definition of ADC group regular sequencer bits information to be inserted  */
  55:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* into ADC group regular sequencer ranks literals definition.                */
  56:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  ( 0UL) /* Equivalent to bitfield "ADC_CHSELR_SQ1" positi
  57:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  ( 4UL) /* Equivalent to bitfield "ADC_CHSELR_SQ2" positi
  58:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  ( 8UL) /* Equivalent to bitfield "ADC_CHSELR_SQ3" positi
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 20


  59:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (12UL) /* Equivalent to bitfield "ADC_CHSELR_SQ4" positi
  60:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  (16UL) /* Equivalent to bitfield "ADC_CHSELR_SQ5" positi
  61:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  (20UL) /* Equivalent to bitfield "ADC_CHSELR_SQ6" positi
  62:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  (24UL) /* Equivalent to bitfield "ADC_CHSELR_SQ7" positi
  63:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  (28UL) /* Equivalent to bitfield "ADC_CHSELR_SQ8" positi
  64:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  65:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  66:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  67:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
  68:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
  69:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* - regular trigger source                                                   */
  70:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* - regular trigger edge                                                     */
  71:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT      (ADC_CFGR1_EXTEN_0) /* Trigger edge set to rising edge (
  72:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                   compatibility with some ADC on ot
  73:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                   having this setting set by HW def
  74:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  75:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
  76:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
  77:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
  78:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK           (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTSEL) << (4U *
  79:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             ((ADC_CFGR1_EXTSEL)                            << (4U *
  80:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             ((ADC_CFGR1_EXTSEL)                            << (4U *
  81:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             ((ADC_CFGR1_EXTSEL)                            << (4U *
  82:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  83:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
  84:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
  85:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
  86:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK             (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTEN) << (4U * 
  87:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U * 
  88:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U * 
  89:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U * 
  90:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  91:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
  92:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  ( 6UL) /* Equivalent to bitfield "ADC_CFGR1_EXTSEL" posi
  93:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (10UL) /* Equivalent to bitfield "ADC_CFGR1_EXTEN" posit
  94:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  95:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  96:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  97:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
  98:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
  99:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* - channel identifier defined by number                                     */
 100:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
 101:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
 102:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
 103:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR1_AWD1CH)
 104:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_CHSELR_CHSEL)
 105:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_SEQ     (ADC_CHSELR_SQ1 << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) 
 106:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   ADC_CHANNEL_ID_NUMBER_MASK with reduced range: on this STM32 series, ADC group regular sequencer,
 107:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   if set to mode "fully configurable", can contain channels with a restricted channel number.
 108:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   Refer to function @ref LL_ADC_REG_SetSequencerConfigurable(). */
 109:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (26UL)              /* Equivalent to bitfield "ADC_CHAN
 110:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                    position in register */
 111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
 112:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             ADC_CHANNEL_ID_INTERNAL_CH_MASK)
 113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
 114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (0x0000001FUL) /* Equivalent to shift: (ADC_CHANNEL_NUMB
 115:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   >> [Position of bitfield "ADC_CHANNEL_NUMBER_MASK" in register]) */
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 21


 116:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 117:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Channel differentiation between external and internal channels */
 118:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000UL) /* Marker of internal channel */
 119:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH)
 120:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 121:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
 122:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* channels literals definition.                                              */
 123:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000UL)
 124:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (ADC_CFGR1_AWD1CH_0)
 125:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (ADC_CFGR1_AWD1CH_1)
 126:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD1CH_0)
 127:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (ADC_CFGR1_AWD1CH_2)
 128:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD1CH_0)
 129:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD1CH_1)
 130:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD
 131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (ADC_CFGR1_AWD1CH_3)
 132:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_0)
 133:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_1)
 134:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD
 135:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_2)
 136:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD
 137:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD
 138:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_2 | \
 139:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD1CH_0)
 140:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR1_AWD1CH_4)
 141:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR1_AWD1CH_4 | ADC_CFGR1_AWD1CH_0)
 142:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR1_AWD1CH_4 | ADC_CFGR1_AWD1CH_1)
 143:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 144:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
 145:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* channels literals definition.                                              */
 146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_CHSELR_CHSEL0)
 147:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_CHSELR_CHSEL1)
 148:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_CHSELR_CHSEL2)
 149:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_CHSELR_CHSEL3)
 150:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_CHSELR_CHSEL4)
 151:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_CHSELR_CHSEL5)
 152:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_CHSELR_CHSEL6)
 153:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_CHSELR_CHSEL7)
 154:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_CHSELR_CHSEL8)
 155:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_CHSELR_CHSEL9)
 156:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_CHSELR_CHSEL10)
 157:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_CHSELR_CHSEL11)
 158:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_CHSELR_CHSEL12)
 159:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_CHSELR_CHSEL13)
 160:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_CHSELR_CHSEL14)
 161:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_CHSELR_CHSEL15)
 162:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_CHSELR_CHSEL16)
 163:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_CHSELR_CHSEL17)
 164:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_18_BITFIELD            (ADC_CHSELR_CHSEL18)
 165:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 166:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Internal mask for ADC channel sampling time:                               */
 167:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* To select into literals LL_ADC_SAMPLINGTIME_x                              */
 168:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* the relevant bits for:                                                     */
 169:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* (concatenation of multiple bits used in register SMPR)                     */
 170:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* - ADC channels sampling time: setting channel wise, to map each channel    */
 171:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*   on one of the common sampling time available.                            */
 172:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* - ADC channels common sampling time: set a sampling time into one of the   */
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 22


 173:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*   common sampling time available.                                          */
 174:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_SAMPLING_TIME_CH_MASK          (ADC_CHANNEL_ID_BITFIELD_MASK << ADC_SMPR_SMPSEL0_BITOFF
 175:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_SAMPLING_TIME_SMP_MASK         (ADC_SMPR_SMP2 | ADC_SMPR_SMP1)
 176:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_SAMPLING_TIME_SMP_SHIFT_MASK   (ADC_SMPR_SMP2_BITOFFSET_POS | ADC_SMPR_SMP1_BITOFFSET_P
 177:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 178:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 179:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 180:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 181:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 series)).         */
 182:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 183:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*   selection of ADC group (ADC group regular).                              */
 184:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* - analog watchdog 2 and 3: monitored channel defined by bitfield, no       */
 185:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*   selection on groups.                                                     */
 186:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 187:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 188:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000UL)
 189:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_CR2_REGOFFSET              (0x00100000UL)
 190:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_CR3_REGOFFSET              (0x00200000UL)
 191:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 192:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Register offset gap between AWD1 and AWD2-AWD3 configuration registers */
 193:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* (Set separately as ADC_AWD_CRX_REGOFFSET to spare 32 bits space */
 194:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_MASK     (ADC_AWD2CR_AWD2CH_0)
 195:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_VAL      (0x00000024UL)
 196:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 197:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET | ADC_AWD_CR2_REGOFFSET | ADC_AWD
 198:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_BITOFFSET_POS (20UL)
 199:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 200:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR1_AWD1CH | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL
 201:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_CR23_CHANNEL_MASK          (ADC_AWD2CR_AWD2CH)
 202:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK | ADC_AWD_CR23_CHANNEL_MASK)
 203:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 204:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_POS          (20UL)                      /* Position of bits ADC_AWD_
 205:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                           in ADC_AWD_CRX_REGOFFSET_
 206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 208:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 209:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_TR2_REGOFFSET              (ADC_AWD_CR2_REGOFFSET)
 210:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_TR3_REGOFFSET              (ADC_AWD_CR3_REGOFFSET + (1UL << ADC_AWD_CRX_REGOFFSET_B
 211:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET | ADC_AWD_TR2_REGOFFSET | ADC_AWD
 212:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_POS          (ADC_AWD_CRX_REGOFFSET_POS)      /* Position of bits ADC
 213:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                                in ADC_AWD_TRX_REGOF
 214:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_MASK          (0x00010000UL)                   /* Selection of 1 bit t
 215:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                                threshold high: mask
 216:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_POS           (16UL)                           /* Selection of 1 bit t
 217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                                threshold high: posi
 218:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_SHIFT4        (ADC_AWD_TRX_BIT_HIGH_POS - 4UL) /* Shift of bit ADC_AWD
 219:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                                position to perform 
 220:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_BITOFFSET_POS (20UL)
 221:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 222:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 223:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 224:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* ADC registers bits positions */
 225:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CFGR1_RES_BITOFFSET_POS        ( 3UL) /* Equivalent to bitfield "ADC_CFGR1_RES" positio
 226:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CFGR1_AWDSGL_BITOFFSET_POS     (22UL) /* Equivalent to bitfield "ADC_CFGR1_AWDSGL" posi
 227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_TR1_HT1_BITOFFSET_POS          (16UL) /* Equivalent to bitfield "ADC_TR1_HT1" position 
 228:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL0_BITOFFSET_POS    ( 0UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL0" pos
 229:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL1_BITOFFSET_POS    ( 1UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL1" pos
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 23


 230:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL2_BITOFFSET_POS    ( 2UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL2" pos
 231:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL3_BITOFFSET_POS    ( 3UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL3" pos
 232:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL4_BITOFFSET_POS    ( 4UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL4" pos
 233:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL5_BITOFFSET_POS    ( 5UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL5" pos
 234:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL6_BITOFFSET_POS    ( 6UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL6" pos
 235:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL7_BITOFFSET_POS    ( 7UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL7" pos
 236:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL8_BITOFFSET_POS    ( 8UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL8" pos
 237:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL9_BITOFFSET_POS    ( 9UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL9" pos
 238:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL10_BITOFFSET_POS   (10UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL10" po
 239:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL11_BITOFFSET_POS   (11UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL11" po
 240:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL12_BITOFFSET_POS   (12UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL12" po
 241:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL13_BITOFFSET_POS   (13UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL13" po
 242:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL14_BITOFFSET_POS   (14UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL14" po
 243:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL15_BITOFFSET_POS   (15UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL15" po
 244:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL16_BITOFFSET_POS   (16UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL16" po
 245:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL17_BITOFFSET_POS   (17UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL17" po
 246:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL18_BITOFFSET_POS   (18UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL18" po
 247:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_SMPR_SMP1_BITOFFSET_POS        ( 0UL) /* Equivalent to bitfield "ADC_SMPR_SMP1" positio
 248:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_SMPR_SMP2_BITOFFSET_POS        ( 4UL) /* Equivalent to bitfield "ADC_SMPR_SMP2" positio
 249:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_SMPR_SMPSEL0_BITOFFSET_POS     ( 8UL) /* Equivalent to bitfield "ADC_SMPR_SMPSEL0" posi
 250:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 251:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 252:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* ADC registers bits groups */
 253:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_ADEN | ADC_CR_ADDIS \
 254:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CR_ADSTART | ADC_CR_ADSTP)            /* ADC regi
 255:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            HW property "rs": Software can read as well as set this 
 256:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            Writing '0' has no effect on the bit value. */
 257:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 258:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 259:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* ADC internal channels related definitions */
 260:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Internal voltage reference VrefInt */
 261:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x1FFF75AAUL)) /* Internal voltage referen
 262:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            parameter VREFINT_CAL: VrefInt ADC raw data acquired at 
 263:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (tolerance: +-5 DegC), Vref+ = 3.0 V (tolerance: +-10 mV
 264:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define VREFINT_CAL_VREF                   ( 3000UL)                    /* Analog voltage reference
 265:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            with which VrefInt has been calibrated in production
 266:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (tolerance: +-10 mV) (unit: mV). */
 267:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Temperature sensor */
 268:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x1FFF75A8UL)) /* Address of parameter TS_
 269:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            temperature sensor ADC raw data acquired at temperature 
 270:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (tolerance: +-5 DegC), Vref+ = 3.0 V (tolerance: +-10 mV
 271:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x1FFF75CAUL)) /* Address of parameter TS_
 272:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            temperature sensor ADC raw data acquired at temperature 
 273:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (tolerance: +-5 DegC), Vref+ = 3.0 V (tolerance: +-10 mV
 274:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (( int32_t)   30)            /* Temperature at which tem
 275:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            has been calibrated in production for data into TEMPSENS
 276:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (tolerance: +-5 DegC) (unit: DegC). */
 277:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (( int32_t)  130)            /* Temperature at which tem
 278:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            has been calibrated in production for data into TEMPSENS
 279:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (tolerance: +-5 DegC) (unit: DegC). */
 280:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          ( 3000UL)                    /* Analog voltage reference
 281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            with which temperature sensor has been calibrated in pro
 282:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (tolerance: +-10 mV) (unit: mV). */
 283:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 284:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 285:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 286:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 24


 287:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 288:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 289:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
 290:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 291:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 292:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 293:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 294:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 295:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
 296:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         a register from a register basis from which an offset
 297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is applied.
 298:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __REG__ Register basis from which the offset is applied.
 299:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __REG_OFFFSET__ Offset to be applied (unit: number of registers).
 300:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Pointer to register address
 301:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 302:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __ADC_PTR_REG_OFFSET(__REG__, __REG_OFFFSET__)                         \
 303:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFFSET__) << 2UL))))
 304:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 305:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 306:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 307:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 308:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 309:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 310:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 311:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 312:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 313:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 314:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 315:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 316:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 317:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 318:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and multimode
 319:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 320:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 321:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 322:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         sharing the same ADC common instance):
 323:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 324:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         disabled.
 325:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 326:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** typedef struct
 327:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 328:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t CommonClock;                 /*!< Set parameter common to several ADC: Clock source and 
 329:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_COMMON
 330:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 331:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              @ref LL_ADC_SetCommonClock(). */
 332:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 333:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 334:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 335:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 336:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 337:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 338:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 339:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 340:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 341:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is conditioned to ADC state:
 342:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC instance must be disabled.
 343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 25


 344:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and compatibility over all STM32 series. However, the different
 345:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 346:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 347:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 348:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 349:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 350:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         refer to description of each function for setting
 351:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         conditioned to ADC state.
 352:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 353:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** typedef struct
 354:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 355:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t Clock;                       /*!< Set ADC instance clock source and prescaler.
 356:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_CLOCK_
 357:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             @note On this STM32 series, this parameter has some clo
 358:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                   ADC clock synchronous (from PCLK) with prescaler 
 359:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                   only if PCLK has a 50% duty clock cycle (APB pres
 360:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                   inside the RCC must be bypassed and the system cl
 361:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                   cycle).
 362:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 363:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              @ref LL_ADC_SetClock().
 364:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              For more details, refer to description of this functio
 365:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 366:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 367:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 368:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 369:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              @ref LL_ADC_SetResolution(). */
 370:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 371:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t DataAlignment;               /*!< Set ADC conversion data alignment.
 372:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_DATA_A
 373:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 374:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              @ref LL_ADC_SetDataAlignment(). */
 375:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 376:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
 377:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
 378:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 379:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              @ref LL_ADC_SetLowPowerMode(). */
 380:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 381:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** } LL_ADC_InitTypeDef;
 382:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 383:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 384:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
 385:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 386:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 387:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 388:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (functions with prefix "REG").
 389:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 390:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is conditioned to ADC state:
 391:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC instance must be disabled.
 392:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 393:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and compatibility over all STM32 series. However, the different
 394:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 395:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 396:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 397:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 398:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 399:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         refer to description of each function for setting
 400:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         conditioned to ADC state.
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 26


 401:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 402:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** typedef struct
 403:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 404:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 405:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              from external peripheral (timer event, external interr
 406:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 407:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 408:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                    set trigger polarity to rising edge(default sett
 409:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                    with some ADC on other STM32 series having this 
 410:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                    default value).
 411:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 412:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                    @ref LL_ADC_REG_SetTriggerEdge().
 413:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 414:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetTriggerSource(). */
 415:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 416:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group regular sequencer length.
 417:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 418:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                     to mode "fully configurable". Refer to function
 419:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                     @ref LL_ADC_REG_SetSequencerConfigurable().
 420:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 421:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 422:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetSequencerLength(). */
 423:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 424:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 425:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              and scan conversions interrupted every selected number
 426:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 427:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 428:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                    enabled (depending on the sequencer mode: scan l
 429:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                    more, or several ADC channels enabled in group r
 430:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                    Refer to function @ref LL_ADC_REG_SetSequencerCo
 431:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 432:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetSequencerDiscont(). */
 433:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 434:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 435:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              conversions are performed in single mode (one conversi
 436:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              continuous mode (after the first trigger, following co
 437:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              successively automatically).
 438:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 439:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 440:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                    and discontinuous mode.
 441:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 442:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetContinuousMode(). */
 443:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 444:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t DMATransfer;                 /*!< Set ADC group regular conversion data transfer: no tra
 445:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              by DMA, and DMA requests mode.
 446:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DM
 447:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 448:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetDMATransfer(). */
 449:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 450:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 451:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              data preserved or overwritten.
 452:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
 453:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 454:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetOverrun(). */
 455:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 456:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 457:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 27


 458:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 459:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 460:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 461:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 462:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 463:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 464:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 465:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 466:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 467:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 468:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
 469:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 470:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 471:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 472:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 473:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_FLAG_CCRDY                  ADC_ISR_CCRDY      /*!< ADC flag ADC channel configurati
 474:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 475:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            conversion */
 476:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
 477:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            conversions */
 478:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
 479:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
 480:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD1       /*!< ADC flag ADC analog watchdog 1 *
 481:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2                   ADC_ISR_AWD2       /*!< ADC flag ADC analog watchdog 2 *
 482:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3                   ADC_ISR_AWD3       /*!< ADC flag ADC analog watchdog 3 *
 483:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_FLAG_EOCAL                  ADC_ISR_EOCAL      /*!< ADC flag end of calibration */
 484:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 485:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 486:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 487:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 488:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 489:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 490:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 491:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 492:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
 493:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_IT_CCRDY                    ADC_IER_CCRDYIE    /*!< ADC interruption channel configu
 494:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 495:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                    conversion */
 496:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
 497:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                    conversions */
 498:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
 499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
 500:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                    phase */
 501:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWD1IE     /*!< ADC interruption ADC analog watc
 502:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_IT_AWD2                     ADC_IER_AWD2IE     /*!< ADC interruption ADC analog watc
 503:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_IT_AWD3                     ADC_IER_AWD3IE     /*!< ADC interruption ADC analog watc
 504:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_IT_EOCAL                    ADC_IER_EOCALIE    /*!< ADC interruption ADC end of cali
 505:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 506:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 507:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 508:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 509:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 510:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 511:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 512:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 513:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* DMA transfer.                                                              */
 514:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 28


 515:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA        (0x00000000UL)      /* ADC group regular conversion data
 516:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (corresponding to register DR) to be used with ADC confi
 517:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            mode. Without DMA transfer, register accessed by LL func
 518:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            @ref LL_ADC_REG_ReadConversionData32() and other
 519:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            functions @ref LL_ADC_REG_ReadConversionDatax() */
 520:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 521:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 522:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 523:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 524:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_SOURCE  ADC common - Clock source
 525:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 526:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 527:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV1            (0x00000000UL)                      /*!< ADC asynchronou
 528:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            prescaler */
 529:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV2            (ADC_CCR_PRESC_0)                   /*!< ADC asynchronou
 530:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            prescaler division by 2. Setting common to ADC instances
 531:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 532:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 533:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV4            (ADC_CCR_PRESC_1)                   /*!< ADC asynchronou
 534:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            prescaler division by 4. Setting common to ADC instances
 535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            group, applied ADC instance wise to each  instance clock
 536:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 537:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV6            (ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*!< ADC asynchronou
 538:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            prescaler division by 6. Setting common to ADC instances
 539:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 540:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 541:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV8            (ADC_CCR_PRESC_2)                   /*!< ADC asynchronou
 542:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            prescaler division by 8. Setting common to ADC instances
 543:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 544:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 545:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV10           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_0) /*!< ADC asynchronou
 546:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            prescaler division by 10. Setting common to ADC instance
 547:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 548:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 549:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV12           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1) /*!< ADC asynchronou
 550:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            prescaler division by 12. Setting common to ADC instance
 551:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 552:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 553:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV16           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1 \
 554:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CCR_PRESC_0)                  /*!< ADC asynchrono
 555:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            prescaler division by 16. Setting common to ADC instance
 556:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 557:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 558:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV32           (ADC_CCR_PRESC_3)                   /*!< ADC asynchronou
 559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            prescaler division by 32. Setting common to ADC instance
 560:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 561:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 562:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV64           (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_0) /*!< ADC asynchronou
 563:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            prescaler division by 64. Setting common to ADC instance
 564:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 565:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 566:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV128          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1) /*!< ADC asynchronou
 567:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            prescaler division by 128. Setting common to ADC instanc
 568:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 569:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 570:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV256          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1 \
 571:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CCR_PRESC_0)                  /*!< ADC asynchrono
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 29


 572:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            prescaler division by 256. Setting common to ADC instanc
 573:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 574:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 575:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 576:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 577:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 578:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 579:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_FREQ_MODE  ADC common - Clock frequency mode
 580:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 581:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 582:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_FREQ_MODE_HIGH        (0x00000000UL)     /*!< ADC clock mode to high frequency
 583:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            On STM32G0, ADC clock frequency above 3.5MHz.  */
 584:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_FREQ_MODE_LOW         (ADC_CCR_LFMEN)    /*!< ADC clock mode to low frequency.
 585:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            On STM32G0,ADC clock frequency below 3.5MHz. */
 586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 587:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 588:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 589:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 590:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 591:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 592:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 593:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 594:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 595:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 596:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 597:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 598:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000UL)       /*!< ADC measurement paths all disa
 599:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)     /*!< ADC measurement path to intern
 600:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_TSEN)       /*!< ADC measurement path to intern
 601:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                      temperature sensor */
 602:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VBAT          (ADC_CCR_VBATEN)     /*!< ADC measurement path to intern
 603:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 604:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 605:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 606:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 607:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CLOCK_SOURCE  ADC instance - Clock source
 608:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 609:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 610:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CFGR2_CKMODE_1) /*!< ADC synchronous clock derived 
 611:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            divided by 4 */
 612:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CFGR2_CKMODE_0) /*!< ADC synchronous clock derived 
 613:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            divided by 2 */
 614:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CFGR2_CKMODE_1 \
 615:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CFGR2_CKMODE_0) /*!< ADC synchronous clock derive
 616:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            not divided */
 617:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC                 (0x00000000UL)       /*!< ADC asynchronous clock. Asynch
 618:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            prescaler can be configured using function @ref LL_ADC_S
 619:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 620:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 621:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 622:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 623:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 624:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 625:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 626:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (0x00000000UL)                      /*!< ADC resolution 
 627:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                  ADC_CFGR1_RES_0) /*!< ADC resolution 
 628:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR1_RES_1                  ) /*!< ADC resolution 
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 30


 629:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC_CFGR1_RES_1 | ADC_CFGR1_RES_0) /*!< ADC resolution 
 630:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 631:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 632:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 633:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 634:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 635:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 637:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000UL)     /*!< ADC conversion data alignment: r
 638:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (alignment on data register LSB bit 0)*/
 639:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC_CFGR1_ALIGN)  /*!< ADC conversion data alignment: l
 640:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (alignment on data register MSB bit 15)*/
 641:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 644:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 645:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
 646:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 647:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 648:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000UL)     /*!< No ADC low power mode activated 
 649:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR1_WAIT)   /*!< ADC low power mode auto delay: D
 650:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            mode, ADC conversions are performed only when necessary
 651:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (when previous ADC conversion data is read).
 652:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            See description with function @ref LL_ADC_SetLowPowerMod
 653:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_LP_AUTOPOWEROFF             (ADC_CFGR1_AUTOFF) /*!< ADC low power mode auto power-of
 654:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            automatically powers-off after a ADC conversion and auto
 655:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            when a new ADC conversion is triggered (with startup tim
 656:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            and start of sampling). See description with function
 657:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            @ref LL_ADC_SetLowPowerMode(). */
 658:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF    (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF) /*!< ADC low power m
 659:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** and auto power-off combined. See description with function @ref LL_ADC_SetLowPowerMode(). */
 660:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 661:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 662:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 663:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 664:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_FREQ  ADC group regular - Trigger frequency mode
 665:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 666:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 667:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_TRIGGER_FREQ_HIGH           (0x00000000UL)     /*!< ADC trigger frequency mode set t
 668:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            Note: ADC trigger frequency mode must be set to low freq
 669:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            is exceeded before ADC conversion start trigger event (b
 670:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            and ADC conversion start trigger event or between two AD
 671:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            trigger event).
 672:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            Duration value: Refer to device datasheet, parameter "tI
 673:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_TRIGGER_FREQ_LOW            (ADC_CFGR2_LFTRIG) /*!< ADC trigger frequency mode set t
 674:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            Note: ADC trigger frequency mode must be set to low freq
 675:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            is exceeded before ADC conversion start trigger event (b
 676:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            and ADC conversion start trigger event or between two AD
 677:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            trigger event).
 678:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            Duration value: Refer to device datasheet, parameter "tI
 679:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 680:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 681:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 682:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 683:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_SAMPLINGTIME_COMMON  ADC instance - Sampling time common to a group of chan
 684:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 685:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 31


 686:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_1       (ADC_SMPR_SMP1_BITOFFSET_POS) /*!< Set sampling time com
 687:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            of channels: sampling time nb 1 */
 688:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_2       (ADC_SMPR_SMP2_BITOFFSET_POS \
 689:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_SAMPLING_TIME_CH_MASK)  /*!< Set sampling time co
 690:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            of channels: sampling time nb 2 */
 691:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 692:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 693:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 694:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 695:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 696:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 697:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 698:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001UL)     /*!< ADC group regular (available on 
 699:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 700:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 701:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 702:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 703:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 704:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 705:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 706:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER \
 707:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CHANNEL_0_BITFIELD ) /*!< ADC channel ADCx_IN0  *
 708:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER \
 709:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CHANNEL_1_BITFIELD ) /*!< ADC channel ADCx_IN1  *
 710:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER \
 711:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CHANNEL_2_BITFIELD ) /*!< ADC channel ADCx_IN2  *
 712:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER \
 713:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CHANNEL_3_BITFIELD ) /*!< ADC channel ADCx_IN3  *
 714:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER \
 715:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CHANNEL_4_BITFIELD ) /*!< ADC channel ADCx_IN4  *
 716:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER \
 717:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CHANNEL_5_BITFIELD ) /*!< ADC channel ADCx_IN5  *
 718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER \
 719:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CHANNEL_6_BITFIELD ) /*!< ADC channel ADCx_IN6  *
 720:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER \
 721:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CHANNEL_7_BITFIELD ) /*!< ADC channel ADCx_IN7  *
 722:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER \
 723:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CHANNEL_8_BITFIELD ) /*!< ADC channel ADCx_IN8  *
 724:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER \
 725:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CHANNEL_9_BITFIELD ) /*!< ADC channel ADCx_IN9  *
 726:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER \
 727:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CHANNEL_10_BITFIELD) /*!< ADC channel ADCx_IN10 *
 728:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER \
 729:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CHANNEL_11_BITFIELD) /*!< ADC channel ADCx_IN11 *
 730:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER \
 731:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CHANNEL_12_BITFIELD) /*!< ADC channel ADCx_IN12 *
 732:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER \
 733:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CHANNEL_13_BITFIELD) /*!< ADC channel ADCx_IN13 *
 734:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER \
 735:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CHANNEL_14_BITFIELD) /*!< ADC channel ADCx_IN14 *
 736:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER \
 737:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CHANNEL_15_BITFIELD) /*!< ADC channel ADCx_IN15 *
 738:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER \
 739:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CHANNEL_16_BITFIELD) /*!< ADC channel ADCx_IN16 *
 740:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER \
 741:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CHANNEL_17_BITFIELD) /*!< ADC channel ADCx_IN17 *
 742:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_18                  (ADC_CHANNEL_18_NUMBER \
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 32


 743:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CHANNEL_18_BITFIELD) /*!< ADC channel ADCx_IN18 *
 744:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_13 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 745:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            connected to VrefInt: Internal voltage reference. */
 746:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_12 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 747:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            connected to Temperature sensor. */
 748:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_14 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 749:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            connected to Vbat/4: Vbat voltage through a divider ladd
 750:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            to have channel voltage always below Vdda. */
 751:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 752:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 753:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 754:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 755:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 756:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 757:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 758:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE           (0x00000000UL)                                        /*
 759:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            conversion trigger internal: SW start. */
 760:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO2     (ADC_REG_TRIG_EXT_EDGE_DEFAULT)                       /*
 761:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 TRGO.
 762:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
 763:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH4       (ADC_CFGR1_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)  /*
 764:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 channe
 765:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (capture compare: input capture or output capture).
 766:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
 767:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #if defined(TIM2)
 768:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO      (ADC_CFGR1_EXTSEL_1\
 769:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_REG_TRIG_EXT_EDGE_DEFAULT)  /*!< ADC group regula
 770:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM2 TRGO.
 771:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
 772:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #endif /* TIM2 */
 773:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_TRGO      (ADC_CFGR1_EXTSEL_1 | ADC_CFGR1_EXTSEL_0 | \
 774:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             ADC_REG_TRIG_EXT_EDGE_DEFAULT)                       /*
 775:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM3 TRGO.
 776:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
 777:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #if defined(TIM4)
 778:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_TRGO      (ADC_CFGR1_EXTSEL_2 | ADC_CFGR1_EXTSEL_1 | \
 779:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             ADC_REG_TRIG_EXT_EDGE_DEFAULT)                       /*
 780:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM4 TRGO.
 781:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
 782:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #endif /* TIM4 */
 783:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #if defined(TIM6)
 784:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM6_TRGO      (ADC_CFGR1_EXTSEL_2 | ADC_CFGR1_EXTSEL_0 | \
 785:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             ADC_REG_TRIG_EXT_EDGE_DEFAULT)                       /*
 786:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM6 TRGO.
 787:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
 788:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #endif /* TIM6 */
 789:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #if defined(TIM15)
 790:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM15_TRGO     (ADC_CFGR1_EXTSEL_2 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)  /*
 791:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM15 TRGO.
 792:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
 793:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #endif /* TIM15 */
 794:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (ADC_CFGR1_EXTSEL_2 | ADC_CFGR1_EXTSEL_1 | \
 795:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             ADC_CFGR1_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)  /*
 796:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            conversion trigger from external peripheral: external in
 797:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
 798:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 799:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 33


 800:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 801:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 802:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
 803:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 804:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 805:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (ADC_CFGR1_EXTEN_0)                     /*!< ADC group r
 806:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            trigger polarity set to rising edge */
 807:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR1_EXTEN_1)                     /*!< ADC group r
 808:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            trigger polarity set to falling edge */
 809:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR1_EXTEN_1 | ADC_CFGR1_EXTEN_0) /*!< ADC group r
 810:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            trigger polarity set to both rising and falling edges */
 811:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 813:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 814:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 815:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
 816:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 817:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 818:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000UL)     /*!< ADC conversions performed in sin
 819:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            one conversion per trigger */
 820:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR1_CONT)   /*!< ADC conversions performed in con
 821:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            after the first trigger, following conversions launched 
 822:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            automatically */
 823:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 824:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 825:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 826:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 827:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
 828:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 829:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 830:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_NONE       (0x00000000UL)     /*!< ADC conversions are not transfer
 831:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (ADC_CFGR1_DMAEN)  /*!< ADC conversion data are transfer
 832:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            in limited mode (one shot mode): DMA transfer requests a
 833:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            number of DMA data transfers (number of ADC conversions)
 834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            This ADC mode is intended to be used with DMA mode non-c
 835:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR1_DMACFG | ADC_CFGR1_DMAEN)  /*!< ADC conversio
 836:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            transferred by DMA, in unlimited mode: DMA transfer requ
 837:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            whatever number of DMA data transferred (number of ADC c
 838:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            This ADC mode is intended to be used with DMA mode circu
 839:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 840:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 841:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 842:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 843:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
 844:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 845:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 846:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000UL)     /*!< ADC group regular behavior in ca
 847:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                    data preserved */
 848:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR1_OVRMOD) /*!< ADC group regular behavior in ca
 849:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                    data overwritten */
 850:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 851:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 852:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 853:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 854:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_MODE  ADC group regular - Sequencer configuration flexibility
 855:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 856:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 34


 857:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_FIXED               (0x00000000UL)        /*!< Sequencer configured to not f
 858:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            sequencer length and each rank affectation to a channel 
 859:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            by channel HW number. Refer to description of function
 860:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            @ref LL_ADC_REG_SetSequencerChannels(). */
 861:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_CONFIGURABLE        (ADC_CFGR1_CHSELRMOD) /*!< Sequencer configured to fully
 862:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            sequencer length and each rank affectation to a channel 
 863:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            Refer to description of function @ref LL_ADC_REG_SetSequ
 864:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 865:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 866:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 867:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 868:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_LENGTH  ADC group regular - Sequencer scan length
 869:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 870:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 871:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        (ADC_CHSELR_SQ2)               /*!< ADC group regular se
 872:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (equivalent to sequencer of 1 rank: ADC conversion on on
 873:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (ADC_CHSELR_SQ3)               /*!< ADC group regular se
 874:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            with 2 ranks in the sequence */
 875:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (ADC_CHSELR_SQ4)               /*!< ADC group regular se
 876:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            with 3 ranks in the sequence */
 877:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (ADC_CHSELR_SQ5)               /*!< ADC group regular se
 878:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            with 4 ranks in the sequence */
 879:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (ADC_CHSELR_SQ6)               /*!< ADC group regular se
 880:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            with 5 ranks in the sequence */
 881:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (ADC_CHSELR_SQ7)               /*!< ADC group regular se
 882:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            with 6 ranks in the sequence */
 883:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (ADC_CHSELR_SQ8)               /*!< ADC group regular se
 884:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            with 7 ranks in the sequence */
 885:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (0x00000000UL)                 /*!< ADC group regular se
 886:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            with 8 ranks in the sequence */
 887:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 888:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 889:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 890:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 891:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_DIRECTION  ADC group regular - Sequencer scan direction
 892:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 893:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 894:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DIR_FORWARD    (0x00000000UL)      /*!< On this STM32 series, parameter
 895:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            sequencer set to mode not fully configurable, refer to f
 896:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            @ref LL_ADC_REG_SetSequencerConfigurable(). ADC group re
 897:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            direction forward: from lowest channel number to highest
 898:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (scan of all ranks, ADC conversion of ranks with channel
 899:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            sequencer). On some other STM32 series, this setting is 
 900:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            and the default scan direction is forward. */
 901:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD   (ADC_CFGR1_SCANDIR) /*!< On this STM32 series, parameter
 902:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            sequencer set to mode not fully configurable, refer to f
 903:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            @ref LL_ADC_REG_SetSequencerConfigurable(). ADC group re
 904:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            direction backward: from highest channel number to lowes
 905:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (scan of all ranks, ADC conversion of ranks with channel
 906:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            sequencer) */
 907:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 908:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 909:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 910:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 911:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
 912:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 913:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 35


 914:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000UL)                          /*!< ADC group r
 915:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            discontinuous mode disable */
 916:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (ADC_CFGR1_DISCEN)                      /*!< ADC group r
 917:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
 918:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 919:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 920:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 921:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 922:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_RANKS  ADC group regular - Sequencer ranks
 923:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 924:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 925:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_REG_RANK_1_SQRX_BITOFFSET_POS) /*!< ADC group regul
 926:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_REG_RANK_2_SQRX_BITOFFSET_POS) /*!< ADC group regul
 927:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_REG_RANK_3_SQRX_BITOFFSET_POS) /*!< ADC group regul
 928:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_REG_RANK_4_SQRX_BITOFFSET_POS) /*!< ADC group regul
 929:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_REG_RANK_5_SQRX_BITOFFSET_POS) /*!< ADC group regul
 930:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_REG_RANK_6_SQRX_BITOFFSET_POS) /*!< ADC group regul
 931:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_REG_RANK_7_SQRX_BITOFFSET_POS) /*!< ADC group regul
 932:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_REG_RANK_8_SQRX_BITOFFSET_POS) /*!< ADC group regul
 933:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 934:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 935:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 936:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 937:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
 938:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 939:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 940:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_1CYCLE_5       (0x00000000UL)     /*!< Sampling time 1.5 ADC clock cycl
 941:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_3CYCLES_5      (ADC_SMPR_SMP1_0)  /*!< Sampling time 3.5 ADC clock cycl
 942:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_7CYCLES_5      (ADC_SMPR_SMP1_1)  /*!< Sampling time 7.5 ADC clock cycl
 943:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_12CYCLES_5     (ADC_SMPR_SMP1_1 \
 944:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_SMPR_SMP1_0) /*!< Sampling time 12.5 ADC clock cy
 945:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_19CYCLES_5     (ADC_SMPR_SMP1_2)  /*!< Sampling time 19.5 ADC clock cyc
 946:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_39CYCLES_5     (ADC_SMPR_SMP1_2 \
 947:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_SMPR_SMP1_0) /*!< Sampling time 39.5 ADC clock cy
 948:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_79CYCLES_5     (ADC_SMPR_SMP1_2 \
 949:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_SMPR_SMP1_1) /*!< Sampling time 79.5 ADC clock cy
 950:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_160CYCLES_5    (ADC_SMPR_SMP1_2 \
 951:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_SMPR_SMP1_1 \
 952:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_SMPR_SMP1_0) /*!< Sampling time 160.5 ADC clock c
 953:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 954:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 955:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 956:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 957:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
 958:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 959:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 960:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK \
 961:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_AWD_CR1_REGOFFSET) /*!< ADC analog watchdog numbe
 962:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD2                        (ADC_AWD_CR23_CHANNEL_MASK \
 963:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_AWD_CR2_REGOFFSET) /*!< ADC analog watchdog numbe
 964:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD3                        (ADC_AWD_CR23_CHANNEL_MASK \
 965:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_AWD_CR3_REGOFFSET) /*!< ADC analog watchdog numbe
 966:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 967:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 968:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 969:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 970:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 36


 971:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 972:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 973:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000UL)                           /*!< ADC analog
 974:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            disabled */
 975:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (ADC_AWD_CR23_CHANNEL_MASK \
 976:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN)                     /*!< ADC analog
 977:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            of all channels, converted by group regular only */
 978:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) \
 979:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
 980:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            of ADC channel ADCx_IN0, converted by group regular only
 981:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) \
 982:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
 983:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            of ADC channel ADCx_IN1, converted by group regular only
 984:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) \
 985:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
 986:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            of ADC channel ADCx_IN2, converted by group regular only
 987:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) \
 988:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
 989:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            of ADC channel ADCx_IN3, converted by group regular only
 990:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) \
 991:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
 992:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            of ADC channel ADCx_IN4, converted by group regular only
 993:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) \
 994:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
 995:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            of ADC channel ADCx_IN5, converted by group regular only
 996:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) \
 997:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
 998:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            of ADC channel ADCx_IN6, converted by group regular only
 999:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) \
1000:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
1001:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            of ADC channel ADCx_IN7, converted by group regular only
1002:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) \
1003:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
1004:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            of ADC channel ADCx_IN8, converted by group regular only
1005:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) \
1006:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
1007:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            of ADC channel ADCx_IN9, converted by group regular only
1008:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) \
1009:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
1010:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            of ADC channel ADCx_IN10, converted by group regular onl
1011:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) \
1012:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
1013:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            of ADC channel ADCx_IN11, converted by group regular onl
1014:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) \
1015:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
1016:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            of ADC channel ADCx_IN12, converted by group regular onl
1017:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) \
1018:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
1019:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            of ADC channel ADCx_IN13, converted by group regular onl
1020:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) \
1021:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
1022:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            of ADC channel ADCx_IN14, converted by group regular onl
1023:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) \
1024:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
1025:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            of ADC channel ADCx_IN15, converted by group regular onl
1026:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) \
1027:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 37


1028:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            of ADC channel ADCx_IN16, converted by group regular onl
1029:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) \
1030:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog
1031:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            of ADC channel ADCx_IN17, converted by group regular onl
1032:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) \
1033:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog
1034:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            of ADC channel ADCx_IN18, converted by group regular onl
1035:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT    & ADC_CHANNEL_ID_MASK) \
1036:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog
1037:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            of ADC internal channel connected to VrefInt: Internal
1038:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            voltage reference, converted by group regular only */
1039:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR & ADC_CHANNEL_ID_MASK) \
1040:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog
1041:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            of ADC internal channel connected to internal temperatur
1042:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            converted by group regular only */
1043:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG             ((LL_ADC_CHANNEL_VBAT       & ADC_CHANNEL_ID_MASK) \
1044:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog
1045:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            of ADC internal channel connected to Vbat/3: Vbat
1046:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            voltage through a divider ladder of factor 1/3 to have c
1047:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            below Vdda, converted by group regular only */
1048:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1049:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
1050:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1051:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1052:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
1053:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
1054:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1055:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_AWD1TR_HT1)   /*!< ADC analog watchdog threshold hi
1056:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (ADC_AWD1TR_LT1)   /*!< ADC analog watchdog threshold lo
1057:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLDS_HIGH_LOW     (ADC_AWD1TR_HT1 \
1058:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_AWD1TR_LT1)  /*!< ADC analog watchdog both thresh
1059:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                    concatenated into the same data 
1060:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1061:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
1062:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1063:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1064:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SCOPE  Oversampling - Oversampling scope
1065:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
1066:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1067:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000UL)                      /*!< ADC oversamplin
1068:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (ADC_CFGR2_OVSE)                    /*!< ADC oversamplin
1069:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            ADC group regular. Literal suffix "continued" is kept fo
1070:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            with other STM32 devices featuring ADC group injected, i
1071:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            oversampling scope parameters are available. */
1072:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1073:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
1074:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1075:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1076:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_DISCONT_MODE  Oversampling - Discontinuous mode
1077:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
1078:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1079:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_REG_CONT                (0x00000000UL)     /*!< ADC oversampling discontinuous m
1080:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** (all conversions of oversampling ratio are done from 1 trigger) */
1081:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TOVS)   /*!< ADC oversampling discontinuous m
1082:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            mode (each conversion of oversampling ratio needs a trig
1083:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1084:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 38


1085:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1086:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1087:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_RATIO  Oversampling - Ratio
1088:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
1089:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1090:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_2                 (0x00000000UL)                        /*!< ADC oversampl
1091:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1092:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (before potential shift) */
1093:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_4                 (ADC_CFGR2_OVSR_0)                    /*!< ADC oversampl
1094:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1095:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (before potential shift) */
1096:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_8                 (ADC_CFGR2_OVSR_1)                    /*!< ADC oversampl
1097:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1098:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (before potential shift) */
1099:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_16                (ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0) /*!< ADC oversampl
1100:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1101:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (before potential shift) */
1102:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_32                (ADC_CFGR2_OVSR_2)                    /*!< ADC oversampl
1103:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1104:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (before potential shift) */
1105:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_64                (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_0) /*!< ADC oversampl
1106:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1107:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (before potential shift) */
1108:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_128               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1) /*!< ADC oversampl
1109:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1110:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (before potential shift) */
1111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_256               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1 \
1112:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CFGR2_OVSR_0)                   /*!< ADC oversamp
1113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (before potential shift) */
1115:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1116:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
1117:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1118:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1119:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SHIFT  Oversampling - Data right shift
1120:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
1121:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1122:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_NONE              (0x00000000UL)                        /*!< ADC oversampl
1123:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (sum of the ADC conversions data is not divided to resul
1124:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            conversion data) */
1125:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_1           (ADC_CFGR2_OVSS_0)                    /*!< ADC oversampl
1126:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1127:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1128:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_2           (ADC_CFGR2_OVSS_1)                    /*!< ADC oversampl
1129:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1130:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_3           (ADC_CFGR2_OVSS_1 | ADC_CFGR2_OVSS_0) /*!< ADC oversampl
1132:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1133:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1134:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_4           (ADC_CFGR2_OVSS_2)                    /*!< ADC oversampl
1135:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1136:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1137:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_5           (ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_0) /*!< ADC oversampl
1138:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1139:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1140:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_6           (ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1) /*!< ADC oversampl
1141:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 39


1142:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1143:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_7           (ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 \
1144:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             | ADC_CFGR2_OVSS_0)                   /*!< ADC oversamp
1145:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1147:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_8           (ADC_CFGR2_OVSS_3)                    /*!< ADC oversampl
1148:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1149:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1150:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1151:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
1152:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1153:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1154:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HELPER_MACRO  Definitions of constants used by helper macro
1155:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
1156:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1157:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_TEMPERATURE_CALC_ERROR      ((int16_t)0x7FFF)  /* Temperature calculation error usin
1158:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                  @ref __LL_ADC_CALC_TEMPERATURE(), 
1159:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                  calibration parameters. This value
1160:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                  (to fit on signed word or double w
1161:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                  to an inconsistent temperature val
1162:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1163:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
1164:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1165:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1166:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
1167:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,
1168:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         not timeout values.
1169:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
1170:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         above each literal definition.
1171:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
1172:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1173:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1174:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
1175:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       not timeout values.                                                  */
1176:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
1177:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
1178:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
1179:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
1180:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       STM32 series:                                                        */
1181:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 82/fADC.                    */
1182:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
1183:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
1184:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
1185:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
1186:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
1187:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*         cycles                                                             */
1188:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
1189:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*         configuration.                                                     */
1190:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
1191:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1192:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Delay for ADC stabilization time (ADC voltage regulator start-up time)     */
1193:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1194:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* parameter "tADCVREG_STUP").                                                */
1195:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Unit: us                                                                   */
1196:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_DELAY_INTERNAL_REGUL_STAB_US ( 20UL)           /*!< Delay for ADC stabilization time
1197:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                               regulator start-up time) */
1198:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 40


1199:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
1200:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1201:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* parameter "tstart_vrefint").                                               */
1202:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Unit: us                                                                   */
1203:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US           ( 12UL)        /*!< Delay for internal voltage refer
1204:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                    time */
1205:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
1207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
1208:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* parameter "tSTART").                                                       */
1209:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Unit: us                                                                   */
1210:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US        (120UL)        /*!< Delay for temperature sensor sta
1211:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                    (starting from temperature senso
1212:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                    @ref LL_ADC_SetCommonPathInterna
1213:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US ( 15UL)        /*!< Delay for temperature sensor buf
1214:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                    time (starting from ADC enable, 
1215:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                    @ref LL_ADC_Enable()) */
1216:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
1218:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Note: On this STM32 series, a minimum number of ADC clock cycles           */
1219:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
1220:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
1221:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
1222:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
1223:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
1224:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES   (  2UL)        /*!< Delay required between ADC end o
1225:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                    and ADC enable */
1226:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1228:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
1229:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1230:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1231:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1232:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
1233:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1234:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1235:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1236:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
1237:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
1238:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
1239:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1240:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1241:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
1242:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
1243:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1244:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1245:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1246:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Write a value in ADC register
1247:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1248:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __REG__ Register to be written
1249:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
1250:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
1251:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1252:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
1253:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1254:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1255:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Read a value in ADC register
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 41


1256:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1257:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __REG__ Register to be read
1258:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Register value
1259:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1260:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
1261:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1262:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
1263:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1264:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1265:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
1266:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
1267:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1268:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1269:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1270:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
1271:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
1272:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Example:
1273:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
1274:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           will return decimal number "4".
1275:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
1276:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         number is returned, either defined with number
1277:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
1278:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1279:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1280:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1282:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1283:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1284:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1285:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1286:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1287:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1288:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1289:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1290:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1291:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1292:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1293:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1294:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
1295:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1296:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
1297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1298:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1299:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1300:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1301:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
1302:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
1303:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1304:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
1305:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
1306:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1307:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                                
1308:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL) ?                                       
1309:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****    (                                                                                               
1310:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS         
1311:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****    )                                                                                               
1312:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****    :                                                                                               
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 42


1313:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****    ((((__CHANNEL__) & ADC_CHANNEL_0_BITFIELD) == ADC_CHANNEL_0_BITFIELD) ? (0UL) :                 
1314:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     ((((__CHANNEL__) & ADC_CHANNEL_1_BITFIELD) == ADC_CHANNEL_1_BITFIELD) ? (1UL) :                
1315:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****      ((((__CHANNEL__) & ADC_CHANNEL_2_BITFIELD) == ADC_CHANNEL_2_BITFIELD) ? (2UL) :               
1316:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       ((((__CHANNEL__) & ADC_CHANNEL_3_BITFIELD) == ADC_CHANNEL_3_BITFIELD) ? (3UL) :              
1317:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****        ((((__CHANNEL__) & ADC_CHANNEL_4_BITFIELD) == ADC_CHANNEL_4_BITFIELD) ? (4UL) :             
1318:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****         ((((__CHANNEL__) & ADC_CHANNEL_5_BITFIELD) == ADC_CHANNEL_5_BITFIELD) ? (5UL) :            
1319:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****          ((((__CHANNEL__) & ADC_CHANNEL_6_BITFIELD) == ADC_CHANNEL_6_BITFIELD) ? (6UL) :           
1320:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           ((((__CHANNEL__) & ADC_CHANNEL_7_BITFIELD) == ADC_CHANNEL_7_BITFIELD) ? (7UL) :          
1321:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****            ((((__CHANNEL__) & ADC_CHANNEL_8_BITFIELD) == ADC_CHANNEL_8_BITFIELD) ? (8UL) :         
1322:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****             ((((__CHANNEL__) & ADC_CHANNEL_9_BITFIELD) == ADC_CHANNEL_9_BITFIELD) ? (9UL) :        
1323:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ((((__CHANNEL__) & ADC_CHANNEL_10_BITFIELD) == ADC_CHANNEL_10_BITFIELD) ? (10UL) :    
1324:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****               ((((__CHANNEL__) & ADC_CHANNEL_11_BITFIELD) == ADC_CHANNEL_11_BITFIELD) ? (11UL) :   
1325:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                ((((__CHANNEL__) & ADC_CHANNEL_12_BITFIELD) == ADC_CHANNEL_12_BITFIELD) ? (12UL) :  
1326:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                 ((((__CHANNEL__) & ADC_CHANNEL_13_BITFIELD) == ADC_CHANNEL_13_BITFIELD) ? (13UL) : 
1327:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                  ((((__CHANNEL__) & ADC_CHANNEL_14_BITFIELD) == ADC_CHANNEL_14_BITFIELD) ? (14UL) :
1328:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                   ((((__CHANNEL__) & ADC_CHANNEL_15_BITFIELD) == ADC_CHANNEL_15_BITFIELD) ? (15UL) 
1329:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                    ((((__CHANNEL__) & ADC_CHANNEL_16_BITFIELD) == ADC_CHANNEL_16_BITFIELD) ? (16UL)
1330:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                     ((((__CHANNEL__) & ADC_CHANNEL_17_BITFIELD) == ADC_CHANNEL_17_BITFIELD) ? (17UL
1331:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                      ((((__CHANNEL__) & ADC_CHANNEL_18_BITFIELD) == ADC_CHANNEL_18_BITFIELD) ? (18U
1332:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                       (0UL)))))))))))))))))))))
1333:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1334:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1335:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
1336:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         from number in decimal format.
1337:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Example:
1338:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
1339:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
1340:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
1341:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1342:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1344:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1345:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1346:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1347:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1348:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1349:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1350:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1351:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1352:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1353:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1354:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1355:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1356:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1357:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
1358:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1359:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
1360:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1361:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT    (2)
1362:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR (2)
1363:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT       (2)
1364:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
1365:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
1366:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1367:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
1368:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
1369:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 43


1370:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1371:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1372:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                         \
1373:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   (((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) |                 \
1374:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****    (ADC_CHSELR_CHSEL0 << (__DECIMAL_NB__)))
1375:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1376:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1377:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
1378:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         corresponds to literal definitions of driver.
1379:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
1380:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - ADC internal channel:
1381:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
1382:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
1383:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
1384:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
1385:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1386:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1387:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
1388:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         must not be a value from functions where a channel number is
1389:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         returned from ADC registers,
1390:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         because internal and external channels share the same channel
1391:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1392:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         parameters definitions of driver.
1393:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1394:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1395:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1396:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1397:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1398:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1399:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1400:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1401:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1402:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1403:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1404:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1405:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1406:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1407:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1408:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1409:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
1410:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1411:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
1412:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1413:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1414:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1415:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1416:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
1417:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
1418:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1419:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
1420:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
1421:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                       connected to a GPIO pin).
1422:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
1423:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1424:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
1425:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0UL)
1426:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 44


1427:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1428:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
1429:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1430:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1431:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
1432:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
1433:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
1434:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
1435:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
1436:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         a value defined from parameter definition of
1437:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1438:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or a value from functions where a channel number is returned
1439:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         from ADC registers.
1440:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1441:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1442:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1443:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1444:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1445:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1446:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1447:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1448:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1449:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1450:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1451:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1452:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1453:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1454:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1455:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1456:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
1457:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1458:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
1459:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1460:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1461:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1462:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1463:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
1464:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
1465:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1466:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
1467:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1468:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1469:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1470:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1471:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1472:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1473:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1474:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1475:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1476:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1477:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1478:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1479:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1480:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1481:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1482:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1483:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 45


1484:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1485:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1486:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1487:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1488:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
1489:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
1490:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1491:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1492:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
1493:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         selected is available on the ADC instance selected.
1494:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
1495:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1496:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1497:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         must not be a value defined from parameter definition of
1498:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or a value from functions where a channel number is
1500:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         returned from ADC registers,
1501:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         because internal and external channels share the same channel
1502:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1503:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         parameters definitions of driver.
1504:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
1505:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1506:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1507:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1508:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1509:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
1510:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
1511:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1512:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1513:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   (((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                             \
1514:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****    ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                             \
1515:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****    ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT))
1516:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1517:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1518:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
1519:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
1520:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         from sequencer channel and groups definition.
1521:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
1522:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Example:
1523:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
1524:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
1525:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
1526:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1527:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1528:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1529:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1530:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1531:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1532:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1533:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1534:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1536:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1537:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1538:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1539:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1540:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 46


1541:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1542:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
1543:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1544:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
1545:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1546:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT    (2)
1547:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR (2)
1548:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT       (2)
1549:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
1550:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
1551:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1552:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
1553:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
1554:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1555:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1556:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
1557:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
1558:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
1560:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
1561:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG
1562:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG
1563:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG
1564:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG
1565:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG
1566:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG
1567:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG
1568:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG
1569:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG
1570:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG
1571:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
1572:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
1573:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
1574:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
1575:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
1576:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
1577:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
1578:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
1579:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG
1580:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG
1581:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG
1582:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG
1583:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1584:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
1585:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)
1586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1587:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1588:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
1589:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1590:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         different of 12 bits.
1591:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_ConfigAnalogWDThresholds()
1592:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or @ref LL_ADC_SetAnalogWDThresholds().
1593:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
1594:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1595:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
1596:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *            (< ADCx param >,
1597:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_8
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 47


1598:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *            );
1599:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1600:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1601:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1602:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1603:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1604:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000 and Max_Data=0xFFF
1605:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1606:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1607:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
1608:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U )))
1609:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1610:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1611:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
1612:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1613:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         different of 12 bits.
1614:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1615:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
1616:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1617:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           < threshold_value_6_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
1618:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
1619:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
1620:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *            );
1621:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1622:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1623:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1624:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1625:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1626:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_12_BITS__ Value between Min_Data=0x000 and Max_Data=0xFFF
1627:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1628:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1629:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_12_BITS__) \
1630:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   ((__AWD_THRESHOLD_12_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U )))
1631:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1632:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1633:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to get the ADC analog watchdog threshold high
1634:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or low from raw value containing both thresholds concatenated.
1635:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Example, to get analog watchdog threshold high from the register raw value:
1637:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(LL_ADC_AWD_THRESHOLD_HIGH, <raw_value_with_both
1638:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_TYPE__ This parameter can be one of the following values:
1639:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
1640:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
1641:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __AWD_THRESHOLDS__ Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
1642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1644:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(__AWD_THRESHOLD_TYPE__, __AWD_THRESHOLDS__)          
1645:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   (((__AWD_THRESHOLDS__) >> (((__AWD_THRESHOLD_TYPE__) & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_
1646:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****    & LL_ADC_AWD_THRESHOLD_LOW)
1647:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1648:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1649:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
1650:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
1651:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   ADC common register instance can be used for:
1652:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Set parameters common to several ADC instances
1653:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
1654:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 48


1655:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
1656:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval ADC common register instance
1657:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1658:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
1659:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   (ADC1_COMMON)
1660:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1661:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1662:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
1663:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC common instance are disabled.
1664:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
1665:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
1666:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1667:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
1668:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
1669:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
1670:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         with devices featuring several ADC common instances).
1671:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
1672:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1673:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
1674:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         are disabled.
1675:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
1676:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is enabled.
1677:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1678:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
1679:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   LL_ADC_IsEnabled(ADC1)
1680:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1681:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1682:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
1683:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
1684:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
1685:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
1686:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (refer to reference manual).
1687:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1688:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1689:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1690:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1691:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1692:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval ADC conversion data full-scale digital value (unit: digital value of ADC conversion dat
1693:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1694:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
1695:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   (0xFFFUL >> ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1UL)))
1696:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1697:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1698:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
1699:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         a resolution to another resolution.
1700:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted
1701:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of the data to be converted
1702:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1703:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1704:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1705:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1706:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1707:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
1708:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1709:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1710:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1711:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 49


1712:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1713:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
1714:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1715:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__,\
1716:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
1717:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__)          \
1718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** (((__DATA__)                                                                 \
1719:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1UL)))  \
1720:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****  >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1UL))     \
1721:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** )
1722:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1723:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1724:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
1725:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
1726:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1727:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1728:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1729:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
1730:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 12 bits)
1731:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                       (unit: digital value).
1732:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1733:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1734:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1735:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1736:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1737:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
1738:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1739:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
1740:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                       __ADC_DATA__,\
1741:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                       __ADC_RESOLUTION__)                    \
1742:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
1743:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****  / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
1744:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** )
1745:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1746:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1747:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
1748:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
1749:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         reference VrefInt.
1750:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
1751:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         stored in system memory for each device during production.
1752:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
1753:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         connected to pin Vref+.
1754:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
1755:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and internally bonded to pin Vdda.
1756:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of internal voltage reference
1757:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 12 bits,
1758:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
1759:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         internal voltage reference VrefInt.
1760:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
1761:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
1762:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 12 bits)
1763:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
1764:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1765:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1766:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1767:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1768:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 50


1769:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
1770:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1771:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
1772:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                          __ADC_RESOLUTION__)                 \
1773:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
1774:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****  / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                  \
1775:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                     (__ADC_RESOLUTION__),                    \
1776:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                     LL_ADC_RESOLUTION_12B)                   \
1777:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** )
1778:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1779:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1780:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
1781:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
1782:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Computation is using temperature sensor calibration values
1783:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         stored in system memory for each device during production.
1784:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Calculation formula:
1785:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Temperature = ((TS_ADC_DATA - TS_CAL1)
1786:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                           * (TS_CAL2_TEMP - TS_CAL1_TEMP))
1787:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                         / (TS_CAL2 - TS_CAL1) + TS_CAL1_TEMP
1788:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           with TS_ADC_DATA = temperature sensor raw data measured by ADC
1789:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                Avg_Slope = (TS_CAL2 - TS_CAL1)
1790:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                            / (TS_CAL2_TEMP - TS_CAL1_TEMP)
1791:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                TS_CAL1   = equivalent TS_ADC_DATA at temperature
1792:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                            TEMP_DEGC_CAL1 (calibrated in factory)
1793:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                TS_CAL2   = equivalent TS_ADC_DATA at temperature
1794:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                            TEMP_DEGC_CAL2 (calibrated in factory)
1795:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve that calibration
1796:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                  parameters are correct (address and data).
1797:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                  To calculate temperature using temperature sensor
1798:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                  datasheet typical values (generic values less, therefore
1799:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                  less accurate than calibrated values),
1800:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                  use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().
1801:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
1802:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
1803:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1804:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1805:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1806:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of temperature sensor
1807:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         corresponds to a resolution of 12 bits,
1808:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
1809:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         temperature sensor.
1810:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
1811:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
1812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__  Analog reference voltage (unit: mV)
1813:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__ ADC conversion data of internal
1814:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                                 temperature sensor (unit: digital value).
1815:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__      ADC resolution at which internal temperature
1816:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                                 sensor voltage has been measured.
1817:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1818:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1819:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1820:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1821:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1822:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
1823:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         In case or error, value LL_ADC_TEMPERATURE_CALC_ERROR is returned (inconsistent tempera
1824:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1825:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE(__VREFANALOG_VOLTAGE__,\
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 51


1826:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                   __TEMPSENSOR_ADC_DATA__,\
1827:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                   __ADC_RESOLUTION__)\
1828:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** ((((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) != 0) ?       \
1829:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****  (((( ((int32_t)((__LL_ADC_CONVERT_DATA_RESOLUTION((__TEMPSENSOR_ADC_DATA__),     \
1830:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                    (__ADC_RESOLUTION__),          \
1831:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                    LL_ADC_RESOLUTION_12B)         \
1832:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                   * (__VREFANALOG_VOLTAGE__))                                     \
1833:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                  / TEMPSENSOR_CAL_VREFANALOG)                                     \
1834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****        - (int32_t) *TEMPSENSOR_CAL1_ADDR)                                         \
1835:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     ) * (int32_t)(TEMPSENSOR_CAL2_TEMP - TEMPSENSOR_CAL1_TEMP)                    \
1836:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****    ) / (int32_t)((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) \
1837:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   ) + TEMPSENSOR_CAL1_TEMP                                                        \
1838:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****  )                                                                                \
1839:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****  :                                                                                \
1840:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****  ((int32_t)LL_ADC_TEMPERATURE_CALC_ERROR)                                         \
1841:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** )
1842:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1843:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1844:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
1845:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
1846:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
1847:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (refer to device datasheet).
1848:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Calculation formula:
1849:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
1850:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
1851:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
1852:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                                   (unit: digital value)
1853:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
1854:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
1855:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
1856:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
1857:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
1858:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                  of the current device has characteristics in line with
1859:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                  datasheet typical values.
1860:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
1861:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
1862:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                  temperature calculation will be more accurate using
1863:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
1864:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
1865:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
1866:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1867:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1868:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1869:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 12 bits
1870:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
1871:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 12 bits.
1872:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
1873:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                           (unit: uV/DegCelsius).
1874:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                                       On STM32G0, refer to device datasheet parameter "Avg_Slop
1875:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
1876:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                           (at temperature and Vref+ defined in parameters below) (u
1877:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                                       On STM32G0, refer to datasheet parameter "V30" (correspon
1878:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
1879:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                           (see parameter above) is corresponding (unit: degree Cels
1880:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) value (unit: mV)
1881:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
1882:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 52


1883:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1884:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1885:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1886:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1887:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1888:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
1889:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1890:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
1891:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
1892:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
1893:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
1894:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
1895:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              __ADC_RESOLUTION__)            \
1896:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** (((((int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
1897:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
1898:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****               * 1000UL)                                                     \
1899:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     -                                                                       \
1900:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
1901:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****               * 1000UL)                                                     \
1902:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****    )                                                                        \
1903:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   ) / (int32_t)(__TEMPSENSOR_TYP_AVGSLOPE__)                                \
1904:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****  ) + (int32_t)(__TEMPSENSOR_CALX_TEMP__)                                    \
1905:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** )
1906:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1907:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1908:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
1909:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1910:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1911:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1912:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
1913:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1914:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1915:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1916:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
1917:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
1918:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
1919:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1920:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1921:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
1922:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
1923:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1924:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Note: LL ADC functions to set DMA transfer are located into sections of    */
1925:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       configuration of ADC instance, groups and multimode (if available):  */
1926:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       @ref LL_ADC_REG_SetDMATransfer(), ...                                */
1927:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1928:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1929:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
1930:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
1931:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
1932:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   These ADC registers are data registers:
1933:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
1934:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC generates a DMA transfer request.
1935:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
1936:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
1937:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Example:
1938:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
1939:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 53


1940:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
1941:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
1942:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
1943:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
1944:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
1945:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
1946:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
1947:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_DMA_GetRegAddr
1948:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
1949:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
1950:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
1951:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval ADC register address
1952:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1953:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(const ADC_TypeDef *ADCx, uint32_t Register)
1954:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
1955:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
1956:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   (void)(Register);
1957:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1958:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Retrieve address of register DR */
1959:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t) &(ADCx->DR);
1960:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
1961:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1962:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1963:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
1964:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1965:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1966:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
1967:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC instances
1968:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
1969:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1970:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1971:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1972:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock source and prescaler.
1973:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1974:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
1975:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1976:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
1977:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
1978:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
1979:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CCR      PRESC          LL_ADC_SetCommonClock
1980:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1981:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1982:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  CommonClock This parameter can be one of the following values:
1983:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1   (1)
1984:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2   (1)
1985:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4   (1)
1986:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6   (1)
1987:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8   (1)
1988:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10  (1)
1989:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12  (1)
1990:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16  (1)
1991:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32  (1)
1992:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64  (1)
1993:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128 (1)
1994:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256 (1)
1995:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
1996:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) ADC common clock asynchronous prescaler is applied to
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 54


1997:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             each ADC instance if the corresponding ADC instance clock
1998:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             is set to clock source asynchronous.
1999:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             (refer to function @ref LL_ADC_SetClock() ).
2000:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2001:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2002:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
2003:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2004:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_PRESC, CommonClock);
2005:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2006:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2007:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2008:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock source and prescaler.
2009:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CCR      PRESC          LL_ADC_GetCommonClock
2010:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2011:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2012:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2013:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1   (1)
2014:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2   (1)
2015:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4   (1)
2016:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6   (1)
2017:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8   (1)
2018:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10  (1)
2019:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12  (1)
2020:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16  (1)
2021:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32  (1)
2022:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64  (1)
2023:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128 (1)
2024:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256 (1)
2025:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
2026:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) ADC common clock asynchronous prescaler is applied to
2027:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             each ADC instance if the corresponding ADC instance clock
2028:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             is set to clock source asynchronous.
2029:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             (refer to function @ref LL_ADC_SetClock() ).
2030:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2031:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonClock(const ADC_Common_TypeDef *ADCxy_COMMON)
2032:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2033:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_PRESC));
2034:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2035:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2036:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2037:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Legacy feature, useless on STM32G0 (ADC common clock low frequency
2038:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****             mode is automatically managed by ADC peripheral on STM32G0).
2039:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****             Function kept for legacy purpose.
2040:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2041:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2042:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2043:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
2044:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CCR      LFMEN          LL_ADC_SetCommonFrequencyMode
2045:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2046:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2047:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  CommonFrequencyMode This parameter can be one of the following values:
2048:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_FREQ_MODE_HIGH
2049:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_FREQ_MODE_LOW
2050:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2051:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2052:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonFrequencyMode(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Commo
2053:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 55


2054:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_LFMEN, CommonFrequencyMode);
2055:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2056:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2057:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2058:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Legacy feature, useless on STM32G0 (ADC common clock low frequency
2059:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****             mode is automatically managed by ADC peripheral on STM32G0).
2060:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****             Function kept for legacy purpose.
2061:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CCR      LFMEN          LL_ADC_GetCommonFrequencyMode
2062:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2063:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2064:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2065:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_FREQ_MODE_HIGH
2066:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_FREQ_MODE_LOW
2067:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2068:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonFrequencyMode(const ADC_Common_TypeDef *ADCxy_COMMON)
2069:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2070:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_LFMEN));
2071:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2072:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2073:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2074:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2075:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2076:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Configure all paths (overwrite current configuration).
2077:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   One or several values can be selected.
2078:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2079:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2080:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         The values not selected are removed from configuration.
2081:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2082:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2083:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2084:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         temperature sensor stabilization time.
2085:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet.
2086:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2087:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to literals @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US,
2088:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US.
2089:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2090:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         For ADC conversion of internal channels,
2091:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         a sampling time minimum value is required.
2092:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet.
2093:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2094:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2095:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2096:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2097:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2098:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2099:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
2100:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalCh\n
2101:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalCh
2102:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2103:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2104:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2105:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2106:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2107:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2108:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2109:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2110:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 56


2111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
2112:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN, PathInternal);
2114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2115:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2116:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2117:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2118:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2119:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Add paths to the current configuration.
2120:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   One or several values can be selected.
2121:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2122:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2123:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2124:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2125:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2126:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         temperature sensor stabilization time.
2127:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet.
2128:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2129:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to literals @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US,
2130:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US.
2131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2132:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         For ADC conversion of internal channels,
2133:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         a sampling time minimum value is required.
2134:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet.
2135:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2136:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2137:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2138:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2139:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2140:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2141:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChAdd\n
2142:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChAdd\n
2143:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChAdd
2144:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2145:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2147:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2148:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2149:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2150:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2151:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2152:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2153:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChAdd(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2154:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2155:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCxy_COMMON->CCR, PathInternal);
2156:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2157:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2158:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2159:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2160:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2161:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Remove paths to the current configuration.
2162:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   One or several values can be selected.
2163:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2164:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2165:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2166:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2167:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 57


2168:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2169:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2170:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2171:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChRem\n
2172:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChRem\n
2173:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChRem
2174:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2175:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2176:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2177:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2178:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2179:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2180:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2181:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2182:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2183:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChRem(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2184:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2185:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   CLEAR_BIT(ADCxy_COMMON->CCR, PathInternal);
2186:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2187:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2188:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2189:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
2190:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
2191:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   One or several values can be selected.
2192:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2193:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2194:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
2195:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_GetCommonPathInternalCh\n
2196:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_GetCommonPathInternalCh
2197:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2198:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2199:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
2200:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2201:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2202:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2203:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2204:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2205:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(const ADC_Common_TypeDef *ADCxy_COMMON)
2206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
2208:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2209:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2210:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2211:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
2212:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2213:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2214:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
2215:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
2216:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2218:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2219:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC instance clock source and prescaler.
2220:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2221:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2222:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled.
2223:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR2    CKMODE         LL_ADC_SetClock
2224:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 58


2225:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ClockSource This parameter can be one of the following values:
2226:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2228:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (2)
2229:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC (1)
2230:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
2231:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) Asynchronous clock prescaler can be configured using
2232:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             function @ref LL_ADC_SetCommonClock().\n
2233:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (2) Caution: This parameter has some clock ratio constraints:
2234:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             This configuration must be enabled only if PCLK has a 50%
2235:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             duty clock cycle (APB prescaler configured inside the RCC
2236:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             must be bypassed and the system clock must by 50% duty
2237:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             cycle).
2238:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             Refer to reference manual.
2239:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2240:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2241:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetClock(ADC_TypeDef *ADCx, uint32_t ClockSource)
2242:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2243:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_CKMODE, ClockSource);
2244:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2245:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2246:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2247:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC instance clock source and prescaler.
2248:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR2    CKMODE         LL_ADC_GetClock
2249:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2250:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2251:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2252:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2253:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (2)
2254:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC (1)
2255:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
2256:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) Asynchronous clock prescaler can be retrieved using
2257:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             function @ref LL_ADC_GetCommonClock().\n
2258:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (2) Caution: This parameter has some clock ratio constraints:
2259:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             This configuration must be enabled only if PCLK has a 50%
2260:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             duty clock cycle (APB prescaler configured inside the RCC
2261:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             must be bypassed and the system clock must by 50% duty
2262:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             cycle).
2263:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             Refer to reference manual.
2264:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2265:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetClock(const ADC_TypeDef *ADCx)
2266:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2267:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_CKMODE));
2268:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2269:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2270:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2271:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
2272:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2273:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
2274:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         without having to perform a new calibration using
2275:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
2276:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2277:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2278:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
2279:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on going on group regular.
2280:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT        LL_ADC_SetCalibrationFactor
2281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 59


2282:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
2283:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2284:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2285:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t CalibrationFactor)
2286:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2287:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
2288:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CALFACT_CALFACT,
2289:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              CalibrationFactor);
2290:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2291:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2292:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2293:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
2294:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2295:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
2296:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
2297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT        LL_ADC_GetCalibrationFactor
2298:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2299:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
2300:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2301:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationFactor(const ADC_TypeDef *ADCx)
2302:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2303:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT, ADC_CALFACT_CALFACT));
2304:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2305:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2306:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2307:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC resolution.
2308:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2309:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2310:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2311:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2312:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled.
2313:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    RES            LL_ADC_SetResolution
2314:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2315:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
2316:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2317:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2318:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2319:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2320:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2321:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2322:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
2323:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2324:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_RES, Resolution);
2325:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2326:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2327:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2328:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC resolution.
2329:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2330:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2331:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    RES            LL_ADC_GetResolution
2332:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2333:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2334:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2335:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2336:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2337:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2338:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 60


2339:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(const ADC_TypeDef *ADCx)
2340:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2341:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_RES));
2342:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2344:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2345:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC conversion data alignment.
2346:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2347:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2348:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2349:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2350:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled.
2351:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    ALIGN          LL_ADC_SetDataAlignment
2352:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2353:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  DataAlignment This parameter can be one of the following values:
2354:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2355:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2356:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2357:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2358:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataAlignment(ADC_TypeDef *ADCx, uint32_t DataAlignment)
2359:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2360:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_ALIGN, DataAlignment);
2361:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2362:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2363:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2364:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC conversion data alignment.
2365:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2366:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2367:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    ALIGN          LL_ADC_GetDataAlignment
2368:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2369:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2370:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2371:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2372:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2373:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataAlignment(const ADC_TypeDef *ADCx)
2374:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2375:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_ALIGN));
2376:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2377:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2378:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2379:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC low power mode.
2380:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Description of ADC low power modes:
2381:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2382:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2383:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           in order to reduce power consumption.
2384:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2385:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2386:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           has been retrieved by user software.
2387:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2388:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           other conversion.
2389:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2390:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2391:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2392:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           applications.
2393:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           How to use this low power mode:
2394:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
2395:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 61


2396:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
2397:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
2398:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
2399:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
2400:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2401:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2402:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2403:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2404:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             ADC conversion start.
2405:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2406:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2407:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2408:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2409:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2410:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2411:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2412:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2413:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         of delay during which ADC was idle.
2414:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2415:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2416:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC channel.
2417:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2418:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2419:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled.
2420:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    WAIT           LL_ADC_SetLowPowerMode\n
2421:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CFGR1    AUTOFF         LL_ADC_SetLowPowerMode
2422:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2423:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
2424:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2425:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2426:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOPOWEROFF
2427:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF
2428:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2429:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2430:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
2431:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2432:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF), LowPowerMode);
2433:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2434:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2435:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2436:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC low power mode:
2437:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Description of ADC low power modes:
2438:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2439:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2440:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           in order to reduce power consumption.
2441:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2442:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2443:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           has been retrieved by user software.
2444:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2445:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           other conversion.
2446:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2447:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2448:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2449:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           applications.
2450:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           How to use this low power mode:
2451:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
2452:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 62


2453:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
2454:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
2455:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
2456:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
2457:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2458:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2459:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2460:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2461:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             ADC conversion start.
2462:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2463:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2464:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2465:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2466:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2467:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2468:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2469:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2470:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         of delay during which ADC was idle.
2471:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2472:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2473:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC channel.
2474:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    WAIT           LL_ADC_GetLowPowerMode\n
2475:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CFGR1    AUTOFF         LL_ADC_GetLowPowerMode
2476:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2477:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2478:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2479:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2480:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOPOWEROFF
2481:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF
2482:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2483:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(const ADC_TypeDef *ADCx)
2484:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2485:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF)));
2486:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2487:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2488:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2489:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC trigger frequency mode.
2490:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   ADC trigger frequency mode must be set to low frequency when
2491:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         a duration is exceeded before ADC conversion start trigger event
2492:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (between ADC enable and ADC conversion start trigger event
2493:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or between two ADC conversion start trigger event).
2494:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Duration value: Refer to device datasheet, parameter "tIdle".
2495:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   When ADC trigger frequency mode is set to low frequency,
2496:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         some rearm cycles are inserted before performing ADC conversion
2497:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         start, inducing a delay of 2 ADC clock cycles.
2498:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Usage of ADC trigger frequency mode with ADC low power mode:
2499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Low power mode auto wait: Only the first ADC conversion
2500:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           start trigger inserts the rearm delay.
2501:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Low power mode auto power-off: ADC trigger frequency mode
2502:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           is discarded.
2503:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2504:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2505:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled.
2506:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR2    LFTRIG         LL_ADC_SetTriggerFrequencyMode
2507:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2508:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  TriggerFrequencyMode This parameter can be one of the following values:
2509:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_HIGH
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 63


2510:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_LOW
2511:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2512:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2513:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetTriggerFrequencyMode(ADC_TypeDef *ADCx, uint32_t TriggerFrequencyMod
2514:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2515:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_LFTRIG, TriggerFrequencyMode);
2516:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2517:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2518:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2519:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC trigger frequency mode.
2520:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR2    LFTRIG         LL_ADC_GetTriggerFrequencyMode
2521:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2522:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2523:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_HIGH
2524:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_LOW
2525:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2526:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetTriggerFrequencyMode(const ADC_TypeDef *ADCx)
2527:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2528:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_LFTRIG));
2529:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2530:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2531:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2532:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set sampling time common to a group of channels.
2533:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Unit: ADC clock cycles.
2534:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, sampling time scope is on ADC instance:
2535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Sampling time common to all channels.
2536:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (on some other STM32 series, sampling time is channel wise)
2537:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
2538:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         converted:
2539:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
2540:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
2541:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         setting).
2542:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
2543:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         TS_temp, ...).
2544:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
2545:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
2546:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
2547:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
2548:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
2549:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
2550:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
2551:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
2552:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is required.
2553:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet.
2554:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2555:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2556:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2557:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
2558:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll SMPR     SMP1           LL_ADC_SetSamplingTimeCommonChannels\n
2559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll SMPR     SMP2           LL_ADC_SetSamplingTimeCommonChannels
2560:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2561:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
2562:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
2563:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
2564:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
2565:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
2566:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_3CYCLES_5
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 64


2567:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
2568:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
2569:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_19CYCLES_5
2570:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_39CYCLES_5
2571:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_79CYCLES_5
2572:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_160CYCLES_5
2573:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2574:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2575:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetSamplingTimeCommonChannels(ADC_TypeDef *ADCx, uint32_t SamplingTimeY
2576:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                           uint32_t SamplingTime)
2577:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2578:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR,
2579:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
2580:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              SamplingTime << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
2581:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2582:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2583:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2584:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get sampling time common to a group of channels.
2585:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Unit: ADC clock cycles.
2586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, sampling time scope is on ADC instance:
2587:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Sampling time common to all channels.
2588:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (on some other STM32 series, sampling time is channel wise)
2589:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
2590:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
2591:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         this STM32 series.
2592:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll SMPR     SMP1           LL_ADC_GetSamplingTimeCommonChannels\n
2593:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll SMPR     SMP2           LL_ADC_GetSamplingTimeCommonChannels
2594:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2595:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
2596:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
2597:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
2598:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2599:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
2600:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_3CYCLES_5
2601:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
2602:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
2603:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_19CYCLES_5
2604:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_39CYCLES_5
2605:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_79CYCLES_5
2606:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_160CYCLES_5
2607:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2608:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetSamplingTimeCommonChannels(const ADC_TypeDef *ADCx, uint32_t Sam
2609:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2610:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->SMPR, ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_S
2611:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                     >> (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
2612:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2613:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2614:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2615:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
2616:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2617:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2618:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
2619:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
2620:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2621:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2622:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2623:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 65


2624:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
2625:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         external interrupt line).
2626:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
2627:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         also set trigger polarity to rising edge
2628:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
2629:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         STM32 series having this setting set by HW default value).
2630:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
2631:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
2632:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, ADC trigger frequency mode must be set
2633:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         in function of frequency of ADC group regular conversion trigger.
2634:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to description of function
2635:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_SetTriggerFrequencyMode().
2636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
2637:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         depends on timers availability on the selected device.
2638:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2639:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2640:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled.
2641:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTSEL         LL_ADC_REG_SetTriggerSource\n
2642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CFGR1    EXTEN          LL_ADC_REG_SetTriggerSource
2643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2644:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
2645:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
2646:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
2647:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH4
2648:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO   (1)
2649:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
2650:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO   (1)
2651:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO  (1)
2652:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
2653:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
2654:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter not available on all devices
2655:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2656:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2657:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
2658:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2659:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_EXTEN | ADC_CFGR1_EXTSEL, TriggerSource);
2660:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2661:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2662:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2663:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
2664:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
2665:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         external interrupt line).
2666:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
2667:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         internal (SW start) or external, without detail
2668:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
2669:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (equivalent to
2670:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
2671:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
2672:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
2673:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         depends on timers availability on the selected device.
2674:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTSEL         LL_ADC_REG_GetTriggerSource\n
2675:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CFGR1    EXTEN          LL_ADC_REG_GetTriggerSource
2676:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2677:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2678:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
2679:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
2680:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH4
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 66


2681:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO   (1)
2682:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
2683:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO   (1)
2684:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO  (1)
2685:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
2686:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
2687:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter not available on all devices
2688:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2689:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(const ADC_TypeDef *ADCx)
2690:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2691:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   __IO uint32_t trigger_source = READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTSEL | ADC_CFGR1_EXTEN);
2692:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2693:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
2694:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* corresponding to ADC_CFGR1_EXTEN {0; 1; 2; 3}.                           */
2695:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t shift_exten = ((trigger_source & ADC_CFGR1_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS -
2696:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2697:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR1_EXTEN and ADC_CFGR1_EXTSEL       */
2698:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
2699:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((trigger_source
2700:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> shift_exten) & ADC_CFGR1_EXTSEL)
2701:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> shift_exten) & ADC_CFGR1_EXTEN)
2702:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****          );
2703:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2704:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2705:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2706:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
2707:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or external.
2708:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
2709:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
2710:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
2711:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
2712:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2713:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
2714:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
2715:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2716:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(const ADC_TypeDef *ADCx)
2717:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTEN)) 
2719:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2720:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2721:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2722:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
2723:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
2724:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2725:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2726:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled.
2727:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_SetTriggerEdge
2728:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2729:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
2730:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
2731:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
2732:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
2733:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2734:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2735:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
2736:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2737:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_EXTEN, ExternalTriggerEdge);
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 67


2738:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2739:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2740:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2741:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
2742:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
2743:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_GetTriggerEdge
2744:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2745:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2746:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
2747:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
2748:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
2749:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2750:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(const ADC_TypeDef *ADCx)
2751:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2752:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTEN));
2753:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2754:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2755:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2756:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer configuration flexibility.
2757:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2758:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable" are
2759:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         available:
2760:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - sequencer configured to fully configurable:
2761:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           sequencer length and each rank
2762:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           affectation to a channel are configurable.
2763:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Refer to description of function
2764:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerLength().
2765:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - sequencer configured to not fully configurable:
2766:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2767:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           are fixed by channel HW number.
2768:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Refer to description of function
2769:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerChannels().
2770:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
2771:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2772:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
2773:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2774:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2775:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2776:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         for more details.
2777:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2778:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2779:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled.
2780:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR     CHSELRMOD      LL_ADC_REG_SetSequencerConfigurable
2781:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2782:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Configurability This parameter can be one of the following values:
2783:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_FIXED
2784:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_CONFIGURABLE
2785:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2786:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2787:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerConfigurable(ADC_TypeDef *ADCx, uint32_t Configurabilit
2788:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2789:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_CHSELRMOD, Configurability);
2790:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2791:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2792:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2793:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer configuration flexibility.
2794:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 68


2795:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable" are
2796:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         available:
2797:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - sequencer configured to fully configurable:
2798:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           sequencer length and each rank
2799:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           affectation to a channel are configurable.
2800:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Refer to description of function
2801:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerLength().
2802:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - sequencer configured to not fully configurable:
2803:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2804:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           are fixed by channel HW number.
2805:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Refer to description of function
2806:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerChannels().
2807:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR     CHSELRMOD      LL_ADC_REG_SetSequencerConfigurable
2808:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2809:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2810:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_FIXED
2811:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_CONFIGURABLE
2812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2813:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerConfigurable(const ADC_TypeDef *ADCx)
2814:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2815:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_CHSELRMOD));
2816:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2817:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2818:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2819:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer length and scan direction.
2820:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
2821:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
2822:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
2823:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2824:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           are configurable.
2825:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           This function performs configuration of:
2826:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
2827:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2828:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
2829:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Sequencer ranks are selected using
2830:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
2831:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
2832:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
2833:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           are defined by channel number.
2835:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           This function performs configuration of:
2836:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
2837:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
2838:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
2839:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2840:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2841:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
2842:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             highest channel number).
2843:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Sequencer ranks are selected using
2844:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
2845:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           To set scan direction differently, refer to function
2846:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerScanDirection().
2847:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2848:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
2849:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         are available, they can be chosen using
2850:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
2851:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 69


2852:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2853:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
2854:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2855:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
2856:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2857:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2858:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         for more details.
2859:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
2860:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
2861:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2862:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2863:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2864:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
2865:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_SetSequencerLength\n
2866:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_SetSequencerLength\n
2867:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_SetSequencerLength\n
2868:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_SetSequencerLength\n
2869:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_SetSequencerLength\n
2870:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_SetSequencerLength\n
2871:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_SetSequencerLength\n
2872:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_SetSequencerLength
2873:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2874:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
2875:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
2876:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
2877:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
2878:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
2879:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
2880:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
2881:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
2882:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
2883:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2884:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2885:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
2886:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2887:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCx->CHSELR, SequencerNbRanks);
2888:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2889:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2890:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2891:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer length and scan direction.
2892:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
2893:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
2894:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
2895:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2896:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           are configurable.
2897:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           This function retrieves:
2898:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
2899:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2900:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
2901:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Sequencer ranks are selected using
2902:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
2903:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
2904:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
2905:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2906:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           are defined by channel number.
2907:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           This function retrieves:
2908:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 70


2909:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
2910:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
2911:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2912:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2913:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
2914:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             highest channel number).
2915:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Sequencer ranks are selected using
2916:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
2917:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *          To set scan direction differently, refer to function
2918:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *          @ref LL_ADC_REG_SetSequencerScanDirection().
2919:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2920:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
2921:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         are available, they can be chosen using
2922:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
2923:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
2924:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
2925:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_GetSequencerLength\n
2926:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_GetSequencerLength\n
2927:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_GetSequencerLength\n
2928:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_GetSequencerLength\n
2929:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_GetSequencerLength\n
2930:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_GetSequencerLength\n
2931:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_GetSequencerLength\n
2932:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_GetSequencerLength
2933:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2934:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2935:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
2936:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
2937:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
2938:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
2939:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
2940:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
2941:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
2942:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
2943:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2944:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerLength(const ADC_TypeDef *ADCx)
2945:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2946:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   __IO uint32_t channels_ranks = READ_BIT(ADCx->CHSELR, ADC_CHSELR_SQ_ALL);
2947:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t sequencer_length = LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS;
2948:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t rank_index;
2949:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t rank_shifted;
2950:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2951:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Parse register for end of sequence identifier */
2952:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Note: Value "0xF0UL" corresponds to bitfield of sequencer 2nd rank
2953:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****            (ADC_CHSELR_SQ2), value "4" to length of end of sequence
2954:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****            identifier (0xF) */
2955:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   for (rank_index = 0U; rank_index <= (28U - 4U); rank_index += 4U)
2956:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   {
2957:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     rank_shifted = (uint32_t)(0xF0UL << rank_index);
2958:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     if ((channels_ranks & rank_shifted) == rank_shifted)
2959:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     {
2960:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       sequencer_length = rank_shifted;
2961:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       break;
2962:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     }
2963:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   }
2964:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2965:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return sequencer_length;
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 71


2966:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2967:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2968:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2969:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer scan direction.
2970:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, parameter relevant only is sequencer is set
2971:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         to mode not fully configurable,
2972:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
2973:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On some other STM32 series, this setting is not available and
2974:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         the default scan direction is forward.
2975:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
2976:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2977:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
2978:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2979:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
2980:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2981:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2982:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         for more details.
2983:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2984:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2985:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled.
2986:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    SCANDIR        LL_ADC_REG_SetSequencerScanDirection
2987:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2988:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ScanDirection This parameter can be one of the following values:
2989:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_FORWARD
2990:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD
2991:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2992:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2993:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerScanDirection(ADC_TypeDef *ADCx, uint32_t ScanDirection
2994:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2995:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_SCANDIR, ScanDirection);
2996:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2997:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2998:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2999:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer scan direction.
3000:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, parameter relevant only is sequencer is set
3001:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         to mode not fully configurable,
3002:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3003:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On some other STM32 series, this setting is not available and
3004:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         the default scan direction is forward.
3005:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    SCANDIR        LL_ADC_REG_GetSequencerScanDirection
3006:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3007:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3008:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_FORWARD
3009:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD
3010:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3011:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerScanDirection(const ADC_TypeDef *ADCx)
3012:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3013:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_SCANDIR));
3014:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3015:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3016:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3017:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
3018:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
3019:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         number of ranks.
3020:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
3021:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
3022:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 72


3023:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
3024:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled.
3025:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    DISCEN         LL_ADC_REG_SetSequencerDiscont\n
3026:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3027:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
3028:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
3029:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
3030:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
3031:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3032:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
3033:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3034:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DISCEN, SeqDiscont);
3035:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3036:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3037:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3038:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
3039:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
3040:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         number of ranks.
3041:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    DISCEN         LL_ADC_REG_GetSequencerDiscont\n
3042:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3043:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3044:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
3045:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
3046:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3047:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(const ADC_TypeDef *ADCx)
3048:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3049:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_DISCEN));
3050:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3051:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3052:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3053:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on the selected
3054:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         scan sequence rank.
3055:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   This function performs configuration of:
3056:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
3057:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           whatever channel can be placed into whatever rank.
3058:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
3059:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
3060:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         affectation to a channel are configurable.
3061:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
3062:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3063:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3064:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3065:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3066:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         enabled separately.
3067:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3068:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
3069:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
3070:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
3071:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
3072:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
3073:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
3074:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
3075:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         for more details.
3076:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3077:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
3078:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3079:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 73


3080:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_SetSequencerRanks\n
3081:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_SetSequencerRanks\n
3082:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_SetSequencerRanks\n
3083:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_SetSequencerRanks\n
3084:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_SetSequencerRanks\n
3085:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_SetSequencerRanks\n
3086:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_SetSequencerRanks\n
3087:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_SetSequencerRanks
3088:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3089:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
3090:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
3091:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
3092:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
3093:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
3094:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
3095:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
3096:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
3097:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
3098:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3099:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3100:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3101:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3102:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3103:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3104:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3105:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3106:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3107:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3108:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3109:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3110:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3112:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3115:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3116:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3117:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3118:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3119:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3120:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3121:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
3122:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
3123:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3124:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3125:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
3126:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3127:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
3128:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3129:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
3130:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
3131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
3132:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3133:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CHSELR,
3134:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
3135:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK_SEQ) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
3136:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              << (Rank & ADC_REG_RANK_ID_SQRX_MASK));
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 74


3137:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3138:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3139:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3140:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on the selected
3141:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         scan sequence rank.
3142:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
3143:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
3144:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         affectation to a channel are configurable.
3145:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
3146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3147:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3148:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Usage of the returned channel number:
3149:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3150:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
3151:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
3152:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3153:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3154:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
3155:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           as parameter for another function.
3156:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - To get the channel number in decimal format:
3157:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           process the returned value with the helper macro
3158:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3159:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_GetSequencerRanks\n
3160:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_GetSequencerRanks\n
3161:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_GetSequencerRanks\n
3162:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_GetSequencerRanks\n
3163:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_GetSequencerRanks\n
3164:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_GetSequencerRanks\n
3165:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_GetSequencerRanks\n
3166:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_GetSequencerRanks
3167:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3168:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
3169:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
3170:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
3171:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
3172:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
3173:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
3174:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
3175:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
3176:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
3177:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3178:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3179:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3180:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3181:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3182:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3183:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3184:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3185:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3186:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3187:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3188:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3189:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3190:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3191:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3192:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3193:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 75


3194:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3195:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3196:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3197:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT    (2)
3198:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR (2)
3199:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT       (2)
3200:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
3201:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
3202:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3203:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
3204:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
3205:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
3206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3208:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerRanks(const ADC_TypeDef *ADCx, uint32_t Rank)
3209:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3210:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->CHSELR,
3211:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                               ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK))
3212:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                      >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)
3213:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                     ) << (ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
3214:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                    );
3215:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3216:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3218:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on rank corresponding to
3219:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         channel number.
3220:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   This function performs:
3221:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
3222:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
3223:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3224:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Set channels selected by overwriting the current sequencer
3225:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           configuration.
3226:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
3227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
3228:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         are available, they can be chosen using
3229:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
3230:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
3231:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
3232:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
3233:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
3234:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
3235:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
3236:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
3237:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
3238:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
3239:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
3240:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         for more details.
3241:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3242:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3243:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3244:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3245:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         enabled separately.
3246:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3247:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3248:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
3249:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3250:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 76


3251:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   One or several values can be selected.
3252:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
3253:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChannels\n
3254:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChannels\n
3255:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChannels\n
3256:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChannels\n
3257:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChannels\n
3258:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChannels\n
3259:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChannels\n
3260:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChannels\n
3261:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChannels\n
3262:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChannels\n
3263:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChannels\n
3264:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChannels\n
3265:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChannels\n
3266:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChannels\n
3267:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChannels\n
3268:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChannels\n
3269:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChannels\n
3270:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChannels\n
3271:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChannels
3272:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3273:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
3274:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3275:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3276:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3277:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3278:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3279:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3280:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3282:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3283:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3284:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3285:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3286:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3287:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3288:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3289:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3290:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3291:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3292:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3293:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3294:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3295:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3296:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
3297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
3298:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3299:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3300:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
3301:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3302:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChannels(ADC_TypeDef *ADCx, uint32_t Channel)
3303:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3304:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
3305:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3306:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   WRITE_REG(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
3307:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 77


3308:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3309:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3310:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Add channel to ADC group regular sequence: channel on rank corresponding to
3311:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         channel number.
3312:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   This function performs:
3313:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
3314:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
3315:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3316:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Set channels selected by adding them to the current sequencer
3317:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           configuration.
3318:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
3319:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
3320:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         are available, they can be chosen using
3321:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
3322:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
3323:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
3324:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
3325:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
3326:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
3327:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
3328:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
3329:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
3330:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
3331:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
3332:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         for more details.
3333:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3334:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3335:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3336:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3337:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         enabled separately.
3338:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3339:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3340:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
3341:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3342:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
3343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   One or several values can be selected.
3344:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
3345:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChAdd\n
3346:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChAdd\n
3347:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChAdd\n
3348:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChAdd\n
3349:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChAdd\n
3350:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChAdd\n
3351:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChAdd\n
3352:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChAdd\n
3353:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChAdd\n
3354:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChAdd\n
3355:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChAdd\n
3356:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChAdd\n
3357:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChAdd\n
3358:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChAdd\n
3359:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChAdd\n
3360:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChAdd\n
3361:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChAdd\n
3362:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChAdd\n
3363:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChAdd
3364:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 78


3365:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
3366:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3367:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3368:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3369:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3370:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3371:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3372:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3373:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3374:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3375:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3376:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3377:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3378:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3379:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3380:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3381:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3382:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3383:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3384:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3385:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3386:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3387:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3388:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
3389:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
3390:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3391:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3392:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
3393:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3394:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChAdd(ADC_TypeDef *ADCx, uint32_t Channel)
3395:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3396:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
3397:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3398:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
3399:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3400:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3401:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3402:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Remove channel to ADC group regular sequence: channel on rank corresponding to
3403:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         channel number.
3404:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   This function performs:
3405:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
3406:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
3407:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3408:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Set channels selected by removing them to the current sequencer
3409:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           configuration.
3410:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
3411:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
3412:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         are available, they can be chosen using
3413:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
3414:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
3415:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
3416:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
3417:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
3418:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
3419:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
3420:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
3421:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 79


3422:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
3423:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
3424:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         for more details.
3425:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3426:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3427:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3428:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3429:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         enabled separately.
3430:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3431:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3432:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
3433:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3434:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
3435:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   One or several values can be selected.
3436:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
3437:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChRem\n
3438:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChRem\n
3439:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChRem\n
3440:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChRem\n
3441:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChRem\n
3442:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChRem\n
3443:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChRem\n
3444:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChRem\n
3445:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChRem\n
3446:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChRem\n
3447:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChRem\n
3448:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChRem\n
3449:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChRem\n
3450:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChRem\n
3451:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChRem\n
3452:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChRem\n
3453:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChRem\n
3454:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChRem\n
3455:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChRem
3456:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3457:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
3458:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3459:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3460:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3461:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3462:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3463:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3464:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3465:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3466:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3467:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3468:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3469:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3470:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3471:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3472:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3473:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3474:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3475:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3476:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3477:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3478:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 80


3479:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3480:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
3481:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
3482:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3483:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3484:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
3485:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3486:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChRem(ADC_TypeDef *ADCx, uint32_t Channel)
3487:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3488:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
3489:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3490:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   CLEAR_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
3491:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3492:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3493:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3494:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on rank corresponding to
3495:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         channel number.
3496:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   This function performs:
3497:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Channels order reading into each rank of scan sequence:
3498:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
3499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3500:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
3501:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
3502:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         are available, they can be chosen using
3503:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
3504:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
3505:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
3506:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
3507:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3508:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3509:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3510:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3511:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         enabled separately.
3512:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3513:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3514:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
3515:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3516:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
3517:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   One or several values can be retrieved.
3518:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
3519:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_GetSequencerChannels\n
3520:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_GetSequencerChannels\n
3521:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_GetSequencerChannels\n
3522:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_GetSequencerChannels\n
3523:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_GetSequencerChannels\n
3524:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_GetSequencerChannels\n
3525:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_GetSequencerChannels\n
3526:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_GetSequencerChannels\n
3527:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_GetSequencerChannels\n
3528:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_GetSequencerChannels\n
3529:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_GetSequencerChannels\n
3530:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_GetSequencerChannels\n
3531:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_GetSequencerChannels\n
3532:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_GetSequencerChannels\n
3533:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_GetSequencerChannels\n
3534:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_GetSequencerChannels\n
3535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_GetSequencerChannels\n
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 81


3536:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_GetSequencerChannels\n
3537:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_GetSequencerChannels
3538:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3539:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
3540:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3541:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3542:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3543:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3544:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3545:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3546:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3547:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3548:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3549:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3550:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3551:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3552:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3553:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3554:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3555:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3556:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3557:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3558:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3560:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3561:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3562:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
3563:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
3564:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3565:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3566:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3567:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerChannels(const ADC_TypeDef *ADCx)
3568:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3569:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t channels_bitfield = (uint32_t)READ_BIT(ADCx->CHSELR, ADC_CHSELR_CHSEL);
3570:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3571:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((((channels_bitfield & ADC_CHSELR_CHSEL0) >> ADC_CHSELR_CHSEL0_BITOFFSET_POS) * LL_ADC_CH
3572:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL1) >> ADC_CHSELR_CHSEL1_BITOFFSET_POS) * LL_ADC_
3573:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL2) >> ADC_CHSELR_CHSEL2_BITOFFSET_POS) * LL_ADC_
3574:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL3) >> ADC_CHSELR_CHSEL3_BITOFFSET_POS) * LL_ADC_
3575:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL4) >> ADC_CHSELR_CHSEL4_BITOFFSET_POS) * LL_ADC_
3576:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL5) >> ADC_CHSELR_CHSEL5_BITOFFSET_POS) * LL_ADC_
3577:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL6) >> ADC_CHSELR_CHSEL6_BITOFFSET_POS) * LL_ADC_
3578:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL7) >> ADC_CHSELR_CHSEL7_BITOFFSET_POS) * LL_ADC_
3579:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL8) >> ADC_CHSELR_CHSEL8_BITOFFSET_POS) * LL_ADC_
3580:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL9) >> ADC_CHSELR_CHSEL9_BITOFFSET_POS) * LL_ADC_
3581:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL10) >> ADC_CHSELR_CHSEL10_BITOFFSET_POS) * LL_AD
3582:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL11) >> ADC_CHSELR_CHSEL11_BITOFFSET_POS) * LL_AD
3583:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL12) >> ADC_CHSELR_CHSEL12_BITOFFSET_POS) * LL_AD
3584:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL13) >> ADC_CHSELR_CHSEL13_BITOFFSET_POS) * LL_AD
3585:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL14) >> ADC_CHSELR_CHSEL14_BITOFFSET_POS) * LL_AD
3586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL15) >> ADC_CHSELR_CHSEL15_BITOFFSET_POS) * LL_AD
3587:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL16) >> ADC_CHSELR_CHSEL16_BITOFFSET_POS) * LL_AD
3588:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL17) >> ADC_CHSELR_CHSEL17_BITOFFSET_POS) * LL_AD
3589:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #if defined(ADC_CCR_VBATEN)
3590:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL18) >> ADC_CHSELR_CHSEL18_BITOFFSET_POS) * LL_AD
3591:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #endif /* ADC_CCR_VBATEN */
3592:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****          );
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 82


3593:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3594:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3595:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3596:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
3597:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
3598:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - single mode: one conversion per trigger
3599:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
3600:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           conversions launched successively automatically.
3601:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
3602:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
3603:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3604:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
3605:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled.
3606:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    CONT           LL_ADC_REG_SetContinuousMode
3607:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3608:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
3609:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
3610:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
3611:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
3612:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3613:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
3614:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3615:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_CONT, Continuous);
3616:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3617:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3618:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3619:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
3620:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
3621:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - single mode: one conversion per trigger
3622:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
3623:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           conversions launched successively automatically.
3624:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    CONT           LL_ADC_REG_GetContinuousMode
3625:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3626:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3627:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
3628:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
3629:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3630:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(const ADC_TypeDef *ADCx)
3631:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3632:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_CONT));
3633:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3634:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3635:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
3637:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
3638:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
3639:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         mode:
3640:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
3641:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           when number of DMA data transfers (number of
3642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC conversions) is reached.
3643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
3644:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
3645:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
3646:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC conversions).
3647:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
3648:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
3649:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         mode non-circular:
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 83


3650:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
3651:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
3652:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
3653:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
3654:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
3655:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3656:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
3657:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled.
3658:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    DMAEN          LL_ADC_REG_SetDMATransfer\n
3659:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CFGR1    DMACFG         LL_ADC_REG_SetDMATransfer
3660:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3661:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
3662:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
3663:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
3664:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
3665:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
3666:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3667:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransfer(ADC_TypeDef *ADCx, uint32_t DMATransfer)
3668:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3669:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG, DMATransfer);
3670:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3671:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3672:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3673:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
3674:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
3675:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
3676:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         mode:
3677:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
3678:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           when number of DMA data transfers (number of
3679:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC conversions) is reached.
3680:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
3681:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
3682:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
3683:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC conversions).
3684:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
3685:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
3686:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         mode non-circular:
3687:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
3688:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
3689:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
3690:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
3691:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
3692:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    DMAEN          LL_ADC_REG_GetDMATransfer\n
3693:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CFGR1    DMACFG         LL_ADC_REG_GetDMATransfer
3694:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3695:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3696:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
3697:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
3698:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
3699:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3700:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransfer(const ADC_TypeDef *ADCx)
3701:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3702:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG));
3703:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3704:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3705:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3706:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 84


3707:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         data preserved or overwritten.
3708:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
3709:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         other devices without this feature have a behavior
3710:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         equivalent to data overwritten.
3711:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         The default setting of overrun is data preserved.
3712:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
3713:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         overrun should be set to data overwritten.
3714:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3715:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
3716:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled.
3717:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    OVRMOD         LL_ADC_REG_SetOverrun
3718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3719:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
3720:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
3721:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
3722:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
3723:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3724:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
3725:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3726:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_OVRMOD, Overrun);
3727:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3728:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3729:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3730:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
3731:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         data preserved or overwritten.
3732:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    OVRMOD         LL_ADC_REG_GetOverrun
3733:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3734:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3735:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
3736:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
3737:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3738:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(const ADC_TypeDef *ADCx)
3739:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3740:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_OVRMOD));
3741:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3742:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3743:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3744:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
3745:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3746:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3747:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Channels Configuration of ADC hierarchical scope: channels
3748:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
3749:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3750:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3751:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3752:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
3753:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Unit: ADC clock cycles.
3754:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
3755:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
3756:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
3757:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         converted:
3758:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
3759:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
3760:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         setting).
3761:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
3762:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         TS_temp, ...).
3763:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 85


3764:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
3765:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         this STM32 series.
3766:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
3767:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
3768:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is required.
3769:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet.
3770:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3771:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
3772:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3773:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
3774:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll SMPR     SMPSEL0        LL_ADC_SetChannelSamplingTime\n
3775:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL1        LL_ADC_SetChannelSamplingTime\n
3776:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL2        LL_ADC_SetChannelSamplingTime\n
3777:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL3        LL_ADC_SetChannelSamplingTime\n
3778:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL4        LL_ADC_SetChannelSamplingTime\n
3779:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL5        LL_ADC_SetChannelSamplingTime\n
3780:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL6        LL_ADC_SetChannelSamplingTime\n
3781:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL7        LL_ADC_SetChannelSamplingTime\n
3782:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL8        LL_ADC_SetChannelSamplingTime\n
3783:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL9        LL_ADC_SetChannelSamplingTime\n
3784:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL10       LL_ADC_SetChannelSamplingTime\n
3785:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL11       LL_ADC_SetChannelSamplingTime\n
3786:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL12       LL_ADC_SetChannelSamplingTime\n
3787:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL13       LL_ADC_SetChannelSamplingTime\n
3788:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL14       LL_ADC_SetChannelSamplingTime\n
3789:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL15       LL_ADC_SetChannelSamplingTime\n
3790:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL16       LL_ADC_SetChannelSamplingTime\n
3791:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL17       LL_ADC_SetChannelSamplingTime\n
3792:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL18       LL_ADC_SetChannelSamplingTime
3793:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3794:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
3795:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3796:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3797:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3798:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3799:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3800:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3801:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3802:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3803:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3804:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3805:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3806:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3807:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3808:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3809:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3810:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3811:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3813:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3814:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3815:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3816:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3817:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
3818:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
3819:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3820:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 86


3821:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
3822:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
3823:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
3824:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
3825:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3826:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
3827:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3828:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
3829:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3830:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR,
3831:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS),
3832:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS) & (SamplingTimeY & ADC_SAMPLING_TIME_CH_MA
3833:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****             );
3834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3835:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3836:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3837:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get sampling time of the selected ADC channel
3838:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Unit: ADC clock cycles.
3839:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
3840:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
3841:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
3842:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
3843:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         this STM32 series.
3844:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll SMPR     SMPSEL0        LL_ADC_GetChannelSamplingTime\n
3845:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL1        LL_ADC_GetChannelSamplingTime\n
3846:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL2        LL_ADC_GetChannelSamplingTime\n
3847:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL3        LL_ADC_GetChannelSamplingTime\n
3848:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL4        LL_ADC_GetChannelSamplingTime\n
3849:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL5        LL_ADC_GetChannelSamplingTime\n
3850:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL6        LL_ADC_GetChannelSamplingTime\n
3851:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL7        LL_ADC_GetChannelSamplingTime\n
3852:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL8        LL_ADC_GetChannelSamplingTime\n
3853:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL9        LL_ADC_GetChannelSamplingTime\n
3854:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL10       LL_ADC_GetChannelSamplingTime\n
3855:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL11       LL_ADC_GetChannelSamplingTime\n
3856:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL12       LL_ADC_GetChannelSamplingTime\n
3857:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL13       LL_ADC_GetChannelSamplingTime\n
3858:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL14       LL_ADC_GetChannelSamplingTime\n
3859:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL15       LL_ADC_GetChannelSamplingTime\n
3860:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL16       LL_ADC_GetChannelSamplingTime\n
3861:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL17       LL_ADC_GetChannelSamplingTime\n
3862:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL18       LL_ADC_GetChannelSamplingTime
3863:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3864:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3865:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3866:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3867:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3868:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3869:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3870:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3871:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3872:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3873:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3874:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3875:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3876:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3877:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 87


3878:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3879:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3880:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3881:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3882:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3883:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3884:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3885:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3886:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3887:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
3888:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
3889:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3890:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3891:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3892:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
3893:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
3894:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3895:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSamplingTime(const ADC_TypeDef *ADCx, uint32_t Channel)
3896:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3897:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   __IO uint32_t smpr = READ_REG(ADCx->SMPR);
3898:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3899:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Retrieve sampling time bit corresponding to the selected channel            */
3900:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* and shift it to position 0.                                                 */
3901:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t smp_channel_posbit0 = ((smpr & ADC_SAMPLING_TIME_CH_MASK)
3902:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                   >> ((((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NU
3903:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                        + ADC_SMPR_SMPSEL0_BITOFFSET_POS)
3904:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                       & 0x1FUL));
3905:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3906:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Select sampling time bitfield depending on sampling time bit value 0 or 1.  */
3907:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((~(smp_channel_posbit0) * LL_ADC_SAMPLINGTIME_COMMON_1)
3908:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | (smp_channel_posbit0 * LL_ADC_SAMPLINGTIME_COMMON_2));
3909:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3910:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3911:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3912:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
3913:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3914:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3915:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
3916:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
3917:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3918:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3919:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3920:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
3921:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         a single channel, multiple channels or all channels,
3922:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on ADC group regular.
3923:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
3924:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is enabled.
3925:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
3926:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
3927:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
3928:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
3929:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         instance:
3930:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
3931:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
3932:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
3933:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3934:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             ADC resolution configured).
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 88


3935:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
3936:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
3937:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
3938:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
3939:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             be selected. For example:
3940:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
3941:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
3942:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             groups regular and injected).
3943:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
3944:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
3945:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
3946:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3947:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             ADC resolution configured).
3948:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3949:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
3950:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled.
3951:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    AWD1CH         LL_ADC_SetAnalogWDMonitChannels\n
3952:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CFGR1    AWD1SGL        LL_ADC_SetAnalogWDMonitChannels\n
3953:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CFGR1    AWD1EN         LL_ADC_SetAnalogWDMonitChannels\n
3954:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_SetAnalogWDMonitChannels\n
3955:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_SetAnalogWDMonitChannels
3956:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3957:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
3958:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
3959:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
3960:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
3961:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
3962:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
3963:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
3964:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG
3965:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG
3966:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG
3967:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG
3968:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG
3969:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG
3970:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG
3971:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG
3972:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG
3973:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG
3974:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
3975:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
3976:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
3977:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
3978:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
3979:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
3980:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
3981:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
3982:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG
3983:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG
3984:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG
3985:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG
3986:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
3987:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3988:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
3989:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3990:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
3991:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* in register and register position depending on parameter "AWDy".         */
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 89


3992:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Parameters "AWDChannelGroup" and "AWDy" are used with masks because      */
3993:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
3994:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   __IO uint32_t *preg;
3995:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3996:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   if (AWDy == LL_ADC_AWD1)
3997:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   {
3998:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR1, 0UL);
3999:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   }
4000:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   else
4001:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   {
4002:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     preg = __ADC_PTR_REG_OFFSET(ADCx->AWD2CR,
4003:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                 ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK)) >> (ADC_AWD_CRX_REGOFFSET_BIT
4004:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   }
4005:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4006:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(*preg,
4007:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
4008:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              AWDChannelGroup & AWDy);
4009:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4010:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4011:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4012:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
4013:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Usage of the returned channel number:
4014:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4015:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
4016:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
4017:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
4018:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4019:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
4020:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           as parameter for another function.
4021:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - To get the channel number in decimal format:
4022:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           process the returned value with the helper macro
4023:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4024:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
4025:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           one channel.
4026:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
4027:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         instance:
4028:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
4029:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
4030:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
4031:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
4032:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             ADC resolution configured).
4033:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
4034:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
4035:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
4036:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
4037:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             be selected. For example:
4038:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
4039:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
4040:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             groups regular and injected).
4041:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
4042:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
4043:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
4044:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
4045:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             ADC resolution configured).
4046:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4047:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
4048:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 90


4049:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
4050:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    AWD1CH         LL_ADC_GetAnalogWDMonitChannels\n
4051:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CFGR1    AWD1SGL        LL_ADC_GetAnalogWDMonitChannels\n
4052:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CFGR1    AWD1EN         LL_ADC_GetAnalogWDMonitChannels\n
4053:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_GetAnalogWDMonitChannels\n
4054:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_GetAnalogWDMonitChannels
4055:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4056:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
4057:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
4058:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
4059:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
4060:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
4061:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On this AWD number, monitored channel can be retrieved
4062:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             if only 1 channel is programmed (or none or all channels).
4063:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             This function cannot retrieve monitored channel if
4064:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             multiple channels are programmed simultaneously
4065:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             by bitfield.
4066:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4067:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
4068:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
4069:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG
4070:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG
4071:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG
4072:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG
4073:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG
4074:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG
4075:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG
4076:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG
4077:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG
4078:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG
4079:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
4080:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
4081:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
4082:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
4083:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
4084:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
4085:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
4086:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
4087:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG
4088:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4089:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(const ADC_TypeDef *ADCx, uint32_t AWDy)
4090:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4091:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   __IO const uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR1,
4092:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                    ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> ADC_AWD_
4093:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                    + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK)
4094:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                       * ADC_AWD_CR12_REGOFFSETGAP_VAL));
4095:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4096:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t analog_wd_monit_channels = (READ_BIT(*preg, AWDy) & AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK);
4097:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4098:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* If "analog_wd_monit_channels" == 0, then the selected AWD is disabled       */
4099:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* (parameter value LL_ADC_AWD_DISABLE).                                    */
4100:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Else, the selected AWD is enabled and is monitoring a group of channels  */
4101:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* or a single channel.                                                     */
4102:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   if (analog_wd_monit_channels != 0UL)
4103:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   {
4104:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     if (AWDy == LL_ADC_AWD1)
4105:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     {
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 91


4106:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       if ((analog_wd_monit_channels & ADC_CFGR1_AWD1SGL) == 0UL)
4107:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       {
4108:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****         /* AWD monitoring a group of channels */
4109:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****         analog_wd_monit_channels = ((analog_wd_monit_channels
4110:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                      | (ADC_AWD_CR23_CHANNEL_MASK)
4111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                     )
4112:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                     & (~(ADC_CFGR1_AWD1CH))
4113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                    );
4114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       }
4115:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       else
4116:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       {
4117:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****         /* AWD monitoring a single channel */
4118:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****         analog_wd_monit_channels = (analog_wd_monit_channels
4119:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                     | (ADC_AWD2CR_AWD2CH_0 << (analog_wd_monit_channels >> ADC_CFGR
4120:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                    );
4121:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       }
4122:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     }
4123:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     else
4124:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     {
4125:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       if ((analog_wd_monit_channels & ADC_AWD_CR23_CHANNEL_MASK) == ADC_AWD_CR23_CHANNEL_MASK)
4126:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       {
4127:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****         /* AWD monitoring a group of channels */
4128:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****         analog_wd_monit_channels = (ADC_AWD_CR23_CHANNEL_MASK
4129:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                     | (ADC_CFGR1_AWD1EN)
4130:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                    );
4131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       }
4132:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       else
4133:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       {
4134:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****         /* AWD monitoring a single channel */
4135:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****         /* AWD monitoring a group of channels */
4136:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****         analog_wd_monit_channels = (analog_wd_monit_channels
4137:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                     | (ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)
4138:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                     | (__LL_ADC_CHANNEL_TO_DECIMAL_NB(analog_wd_monit_channels) << 
4139:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                    );
4140:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       }
4141:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     }
4142:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   }
4143:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4144:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return analog_wd_monit_channels;
4145:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4147:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4148:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
4149:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         high and low.
4150:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
4151:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
4152:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
4153:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
4154:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
4155:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
4156:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         instance:
4157:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
4158:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
4159:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
4160:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
4161:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             ADC resolution configured).
4162:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 92


4163:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
4164:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
4165:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
4166:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             be selected. For example:
4167:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
4168:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
4169:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             groups regular and injected).
4170:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
4171:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
4172:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
4173:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
4174:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             ADC resolution configured).
4175:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
4176:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
4177:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
4178:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
4179:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Examples:
4180:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
4181:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           on 12 bits (ratio 16 and shift 4, or ratio 32 and shift 5, ...):
4182:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 16.
4183:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
4184:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           on 14 bits (ratio 16 and shift 2, or ratio 32 and shift 3, ...):
4185:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 4.
4186:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
4187:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           on 16 bits (ratio 16 and shift none, or ratio 32 and shift 1, ...):
4188:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC analog watchdog thresholds match directly to ADC data register.
4189:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4190:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
4191:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4192:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
4193:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll AWD1TR   HT1            LL_ADC_ConfigAnalogWDThresholds\n
4194:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD2TR   HT2            LL_ADC_ConfigAnalogWDThresholds\n
4195:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD3TR   HT3            LL_ADC_ConfigAnalogWDThresholds\n
4196:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD1TR   LT1            LL_ADC_ConfigAnalogWDThresholds\n
4197:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD2TR   LT2            LL_ADC_ConfigAnalogWDThresholds\n
4198:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD3TR   LT3            LL_ADC_ConfigAnalogWDThresholds
4199:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4200:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
4201:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
4202:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
4203:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
4204:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
4205:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
4206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4208:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
4209:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
4210:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4211:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdxxxValue" with bits      */
4212:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* position in register and register position depending on parameter        */
4213:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* "AWDy".                                                                  */
4214:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdxxxValue" are used with masks because */
4215:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
4216:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->AWD1TR,
4217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK))
4218:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                               >> (ADC_AWD_TRX_REGOFFSET_BITOFFSET_POS))
4219:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              + ((ADC_AWD_CR3_REGOFFSET & AWDy)
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 93


4220:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                 >> (ADC_AWD_CRX_REGOFFSET_BITOFFSET_POS + 1UL))
4221:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             );
4222:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4223:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(*preg,
4224:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_AWD1TR_HT1 | ADC_AWD1TR_LT1,
4225:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (AWDThresholdHighValue << ADC_TR1_HT1_BITOFFSET_POS) | AWDThresholdLowValue);
4226:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4228:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4229:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
4230:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         high or low.
4231:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   If values of both thresholds high or low must be set,
4232:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         use function @ref LL_ADC_ConfigAnalogWDThresholds().
4233:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
4234:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
4235:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
4236:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
4237:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         instance:
4238:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
4239:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
4240:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
4241:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
4242:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             ADC resolution configured).
4243:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
4244:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
4245:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
4246:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
4247:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             be selected. For example:
4248:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
4249:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
4250:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             groups regular and injected).
4251:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
4252:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
4253:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
4254:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
4255:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             ADC resolution configured).
4256:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
4257:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
4258:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
4259:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
4260:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Examples:
4261:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
4262:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           on 12 bits (ratio 16 and shift 4, or ratio 32 and shift 5, ...):
4263:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 16.
4264:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
4265:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           on 14 bits (ratio 16 and shift 2, or ratio 32 and shift 3, ...):
4266:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 4.
4267:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
4268:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           on 16 bits (ratio 16 and shift none, or ratio 32 and shift 1, ...):
4269:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC analog watchdog thresholds match directly to ADC data register.
4270:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is not conditioned to
4271:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
4272:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC can be disabled, enabled with or without conversion on going
4273:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on ADC group regular.
4274:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll AWD1TR   HT1            LL_ADC_SetAnalogWDThresholds\n
4275:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD2TR   HT2            LL_ADC_SetAnalogWDThresholds\n
4276:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD3TR   HT3            LL_ADC_SetAnalogWDThresholds\n
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 94


4277:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD1TR   LT1            LL_ADC_SetAnalogWDThresholds\n
4278:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD2TR   LT2            LL_ADC_SetAnalogWDThresholds\n
4279:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD3TR   LT3            LL_ADC_SetAnalogWDThresholds
4280:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
4282:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
4283:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
4284:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
4285:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
4286:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
4287:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
4288:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
4289:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4290:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4291:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWDThr
4292:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                   uint32_t AWDThresholdValue)
4293:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4294:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
4295:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* position in register and register position depending on parameters       */
4296:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
4297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
4298:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
4299:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->AWD1TR,
4300:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK))
4301:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                               >> (ADC_AWD_TRX_REGOFFSET_BITOFFSET_POS))
4302:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              + ((ADC_AWD_CR3_REGOFFSET & AWDy)
4303:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                 >> (ADC_AWD_CRX_REGOFFSET_BITOFFSET_POS + 1UL)));
4304:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4305:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(*preg,
4306:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              AWDThresholdsHighLow,
4307:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              AWDThresholdValue << ((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TR
4308:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4309:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4310:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4311:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
4312:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
4313:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         concatenated.
4314:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   If raw data with ADC thresholds high and low is retrieved,
4315:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         the data of each threshold high or low can be isolated
4316:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         using helper macro:
4317:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW().
4318:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
4319:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
4320:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
4321:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll AWD1TR   HT1            LL_ADC_GetAnalogWDThresholds\n
4322:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD2TR   HT2            LL_ADC_GetAnalogWDThresholds\n
4323:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD3TR   HT3            LL_ADC_GetAnalogWDThresholds\n
4324:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD1TR   LT1            LL_ADC_GetAnalogWDThresholds\n
4325:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD2TR   LT2            LL_ADC_GetAnalogWDThresholds\n
4326:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD3TR   LT3            LL_ADC_GetAnalogWDThresholds
4327:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4328:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
4329:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
4330:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
4331:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
4332:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
4333:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 95


4334:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
4335:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLDS_HIGH_LOW
4336:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
4337:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4338:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(const ADC_TypeDef *ADCx,
4339:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                       uint32_t AWDy, uint32_t AWDThresholdsHighLow)
4340:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4341:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
4342:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* position in register and register position depending on parameters       */
4343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
4344:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
4345:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
4346:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->AWD1TR,
4347:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                    (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK))
4348:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                     >> (ADC_AWD_TRX_REGOFFSET_BITOFFSET_POS))
4349:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                    + ((ADC_AWD_CR3_REGOFFSET & AWDy)
4350:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                       >> (ADC_AWD_CRX_REGOFFSET_BITOFFSET_POS + 1UL
4351:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4352:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
4353:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                              (AWDThresholdsHighLow | ADC_AWD1TR_LT1))
4354:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                     >> (((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_BIT_HIGH
4355:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                         & ~(AWDThresholdsHighLow & ADC_AWD1TR_LT1)));
4356:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4357:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4358:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4359:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
4360:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4361:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4362:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_oversampling Configuration of ADC transversal scope: over
4363:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
4364:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4365:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4366:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4367:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC oversampling scope.
4368:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4369:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
4370:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled.
4371:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSE           LL_ADC_SetOverSamplingScope
4372:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4373:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  OvsScope This parameter can be one of the following values:
4374:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
4375:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
4376:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4377:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4378:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingScope(ADC_TypeDef *ADCx, uint32_t OvsScope)
4379:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4380:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_OVSE, OvsScope);
4381:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4382:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4383:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4384:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC oversampling scope.
4385:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSE           LL_ADC_GetOverSamplingScope
4386:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4387:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4388:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
4389:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
4390:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 96


4391:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingScope(const ADC_TypeDef *ADCx)
4392:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4393:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSE));
4394:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4395:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4396:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4397:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC oversampling discontinuous mode (triggered mode)
4398:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on the selected ADC group.
4399:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
4400:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
4401:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           are done from 1 trigger)
4402:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
4403:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           needs a trigger)
4404:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4405:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
4406:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled.
4407:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR2    TOVS           LL_ADC_SetOverSamplingDiscont
4408:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4409:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  OverSamplingDiscont This parameter can be one of the following values:
4410:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
4411:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
4412:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4413:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4414:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingDiscont(ADC_TypeDef *ADCx, uint32_t OverSamplingDiscont)
4415:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4416:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TOVS, OverSamplingDiscont);
4417:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4418:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4419:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4420:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC oversampling discontinuous mode (triggered mode)
4421:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on the selected ADC group.
4422:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
4423:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
4424:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           are done from 1 trigger)
4425:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
4426:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           needs a trigger)
4427:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR2    TOVS           LL_ADC_GetOverSamplingDiscont
4428:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4429:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4430:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
4431:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
4432:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4433:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingDiscont(const ADC_TypeDef *ADCx)
4434:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4435:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TOVS));
4436:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4437:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4438:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4439:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC oversampling
4440:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   This function set the 2 items of oversampling configuration:
4441:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - ratio
4442:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - shift
4443:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4444:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
4445:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled.
4446:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_ConfigOverSamplingRatioShift\n
4447:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CFGR2    OVSR           LL_ADC_ConfigOverSamplingRatioShift
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 97


4448:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4449:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Ratio This parameter can be one of the following values:
4450:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
4451:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
4452:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
4453:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
4454:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
4455:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
4456:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
4457:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
4458:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Shift This parameter can be one of the following values:
4459:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
4460:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
4461:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
4462:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
4463:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
4464:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
4465:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
4466:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
4467:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
4468:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4469:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4470:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigOverSamplingRatioShift(ADC_TypeDef *ADCx, uint32_t Ratio, uint32_
4471:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4472:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | Ratio));
4473:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4474:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4475:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4476:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC oversampling ratio
4477:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSR           LL_ADC_GetOverSamplingRatio
4478:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4479:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Ratio This parameter can be one of the following values:
4480:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
4481:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
4482:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
4483:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
4484:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
4485:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
4486:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
4487:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
4488:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4489:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingRatio(const ADC_TypeDef *ADCx)
4490:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4491:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR));
4492:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4493:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4494:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4495:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC oversampling shift
4496:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_GetOverSamplingShift
4497:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4498:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Shift This parameter can be one of the following values:
4499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
4500:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
4501:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
4502:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
4503:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
4504:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 98


4505:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
4506:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
4507:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
4508:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4509:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingShift(const ADC_TypeDef *ADCx)
4510:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4511:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSS));
4512:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4513:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4514:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4515:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
4516:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4517:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4518:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
4519:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
4520:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4521:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4522:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4523:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Enable ADC instance internal voltage regulator.
4524:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, there are three possibilities to enable
4525:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         the voltage regulator:
4526:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - by enabling it manually
4527:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           using function @ref LL_ADC_EnableInternalRegulator().
4528:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - by launching a calibration
4529:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           using function @ref LL_ADC_StartCalibration().
4530:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - by enabling the ADC
4531:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           using function @ref LL_ADC_Enable().
4532:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, after ADC internal voltage regulator enable,
4533:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         a delay for ADC internal voltage regulator stabilization
4534:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is required before performing a ADC calibration or ADC enable.
4535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet, parameter "tADCVREG_STUP".
4536:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_INTERNAL_REGUL_STAB_US.
4537:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4538:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
4539:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be ADC disabled.
4540:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
4541:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4542:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4543:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4544:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
4545:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4546:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4547:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4548:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4549:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4550:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4551:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_ADVREGEN);
4552:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4553:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4554:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4555:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Disable ADC internal voltage regulator.
4556:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4557:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
4558:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be ADC disabled.
4559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_DisableInternalRegulator
4560:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4561:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 99


4562:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4563:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableInternalRegulator(ADC_TypeDef *ADCx)
4564:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4565:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_ADVREGEN | ADC_CR_BITS_PROPERTY_RS));
4566:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4567:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4568:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4569:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get the selected ADC instance internal voltage regulator state.
4570:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
4571:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4572:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
4573:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4574:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(const ADC_TypeDef *ADCx)
 120              		.loc 2 4574 26 is_stmt 1 view .LVU42
 121              	.LBB127:
4575:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4576:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
 122              		.loc 2 4576 3 view .LVU43
 123              		.loc 2 4576 12 is_stmt 0 view .LVU44
 124 0018 9A68     		ldr	r2, [r3, #8]
 125              		.loc 2 4576 76 view .LVU45
 126 001a D200     		lsls	r2, r2, #3
 127 001c 1CD4     		bmi	.L5
 128              	.LVL5:
 129              		.loc 2 4576 76 view .LVU46
 130              	.LBE127:
 131              	.LBE126:
 468:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 132              		.loc 1 468 5 is_stmt 1 view .LVU47
 133              	.LBB128:
 134              	.LBI128:
4544:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 135              		.loc 2 4544 22 view .LVU48
 136              	.LBB129:
4549:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 137              		.loc 2 4549 3 view .LVU49
 138 001e 9A68     		ldr	r2, [r3, #8]
 139 0020 8049     		ldr	r1, .L29
 140 0022 1140     		ands	r1, r2
 141 0024 8022     		movs	r2, #128
 142 0026 5205     		lsls	r2, r2, #21
 143 0028 0A43     		orrs	r2, r1
 144 002a 9A60     		str	r2, [r3, #8]
 145              	.LVL6:
4549:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 146              		.loc 2 4549 3 is_stmt 0 view .LVU50
 147              	.LBE129:
 148              	.LBE128:
 475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 149              		.loc 1 475 5 is_stmt 1 view .LVU51
 475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 150              		.loc 1 475 89 is_stmt 0 view .LVU52
 151 002c 7E4B     		ldr	r3, .L29+4
 152 002e 1868     		ldr	r0, [r3]
 153 0030 7E49     		ldr	r1, .L29+8
 154 0032 FFF7FEFF 		bl	__aeabi_uidiv
 155              	.LVL7:
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 100


 475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 156              		.loc 1 475 109 view .LVU53
 157 0036 0130     		adds	r0, r0, #1
 475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 158              		.loc 1 475 69 view .LVU54
 159 0038 4000     		lsls	r0, r0, #1
 475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 160              		.loc 1 475 21 view .LVU55
 161 003a 0190     		str	r0, [sp, #4]
 476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 162              		.loc 1 476 5 is_stmt 1 view .LVU56
 476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 163              		.loc 1 476 11 is_stmt 0 view .LVU57
 164 003c 09E0     		b	.L6
 165              	.LVL8:
 166              	.L24:
 455:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 167              		.loc 1 455 5 is_stmt 1 view .LVU58
 168 003e FFF7FEFF 		bl	HAL_ADC_MspInit
 169              	.LVL9:
 459:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 170              		.loc 1 459 5 view .LVU59
 171 0042 0023     		movs	r3, #0
 172 0044 E365     		str	r3, [r4, #92]
 462:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 173              		.loc 1 462 5 view .LVU60
 462:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 174              		.loc 1 462 16 is_stmt 0 view .LVU61
 175 0046 5422     		movs	r2, #84
 176 0048 A354     		strb	r3, [r4, r2]
 177 004a E4E7     		b	.L4
 178              	.L7:
 478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 179              		.loc 1 478 7 is_stmt 1 view .LVU62
 478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 180              		.loc 1 478 22 is_stmt 0 view .LVU63
 181 004c 019B     		ldr	r3, [sp, #4]
 182 004e 013B     		subs	r3, r3, #1
 183 0050 0193     		str	r3, [sp, #4]
 184              	.L6:
 476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 185              		.loc 1 476 11 is_stmt 1 view .LVU64
 476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 186              		.loc 1 476 28 is_stmt 0 view .LVU65
 187 0052 019B     		ldr	r3, [sp, #4]
 476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 188              		.loc 1 476 11 view .LVU66
 189 0054 002B     		cmp	r3, #0
 190 0056 F9D1     		bne	.L7
 191              	.L5:
 485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 192              		.loc 1 485 3 is_stmt 1 view .LVU67
 485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 193              		.loc 1 485 45 is_stmt 0 view .LVU68
 194 0058 2368     		ldr	r3, [r4]
 195              	.LVL10:
 196              	.LBB130:
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 101


 197              	.LBI130:
4574:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 198              		.loc 2 4574 26 is_stmt 1 view .LVU69
 199              	.LBB131:
 200              		.loc 2 4576 3 view .LVU70
 201              		.loc 2 4576 12 is_stmt 0 view .LVU71
 202 005a 9A68     		ldr	r2, [r3, #8]
 203              		.loc 2 4576 76 view .LVU72
 204 005c D200     		lsls	r2, r2, #3
 205 005e 00D5     		bpl	.LCB152
 206 0060 9DE0     		b	.L22	@long jump
 207              	.LCB152:
 208              	.LVL11:
 209              		.loc 2 4576 76 view .LVU73
 210              	.LBE131:
 211              	.LBE130:
 488:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 212              		.loc 1 488 5 is_stmt 1 view .LVU74
 213 0062 A26D     		ldr	r2, [r4, #88]
 214 0064 1021     		movs	r1, #16
 215 0066 0A43     		orrs	r2, r1
 216 0068 A265     		str	r2, [r4, #88]
 491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 217              		.loc 1 491 5 view .LVU75
 218 006a E26D     		ldr	r2, [r4, #92]
 219 006c 0F39     		subs	r1, r1, #15
 220 006e 0A43     		orrs	r2, r1
 221 0070 E265     		str	r2, [r4, #92]
 493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 222              		.loc 1 493 5 view .LVU76
 223              	.LVL12:
 493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 224              		.loc 1 493 20 is_stmt 0 view .LVU77
 225 0072 0120     		movs	r0, #1
 226              	.LVL13:
 227              	.L8:
 500:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 228              		.loc 1 500 3 is_stmt 1 view .LVU78
 229              	.LBB132:
 230              	.LBI132:
4577:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4578:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4579:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4580:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
4581:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, after ADC enable, a delay for
4582:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
4583:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC conversion start.
4584:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
4585:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
4586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
4587:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
4588:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4589:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
4590:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be ADC disabled and ADC internal voltage regulator enabled.
4591:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_Enable
4592:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4593:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 102


4594:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4595:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
4596:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4597:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4598:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4599:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4600:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4601:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4602:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_ADEN);
4603:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4604:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4605:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4606:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
4607:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4608:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
4609:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be not disabled. Must be enabled without conversion on going
4610:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
4611:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_Disable
4612:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4613:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4614:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4615:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
4616:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4617:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4618:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4619:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4620:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4621:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4622:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_ADDIS);
4623:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4624:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4625:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4626:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
4627:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
4628:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
4629:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
4630:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_IsEnabled
4631:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4632:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
4633:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4634:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(const ADC_TypeDef *ADCx)
4635:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
4637:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4638:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4639:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4640:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get the selected ADC instance disable state.
4641:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_IsDisableOngoing
4642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval 0: no ADC disable command on going.
4644:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4645:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDisableOngoing(const ADC_TypeDef *ADCx)
4646:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4647:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
4648:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4649:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4650:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 103


4651:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
4652:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
4653:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, a minimum number of ADC clock cycles
4654:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
4655:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
4656:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   In case of usage of ADC with DMA transfer:
4657:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         On this STM32 series, ADC DMA transfer request should be disabled
4658:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         during calibration:
4659:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Calibration factor is available in data register
4660:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and also transferred by DMA.
4661:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         To not insert ADC calibration factor among ADC conversion data
4662:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         in array variable, DMA transfer must be disabled during
4663:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         calibration.
4664:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (DMA transfer setting backup and disable before calibration,
4665:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         DMA transfer setting restore after calibration.
4666:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to functions @ref LL_ADC_REG_GetDMATransfer(),
4667:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetDMATransfer() ).
4668:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   In case of usage of feature auto power-off:
4669:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This mode must be disabled during calibration
4670:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to function @ref LL_ADC_SetLowPowerMode().
4671:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4672:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
4673:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be ADC disabled.
4674:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration
4675:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4676:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4677:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4678:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx)
4679:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4680:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4681:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4682:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4683:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4684:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4685:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_ADCAL);
4686:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4687:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4688:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4689:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC calibration state.
4690:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_IsCalibrationOnGoing
4691:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4692:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
4693:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4694:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(const ADC_TypeDef *ADCx)
4695:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4696:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL)) ? 1UL : 0UL);
4697:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4698:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4699:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4700:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
4701:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4702:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4703:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
4704:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
4705:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4706:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4707:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 104


4708:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
4709:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
4710:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
4711:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
4712:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           starts immediately.
4713:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
4714:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
4715:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           following the ADC start conversion command.
4716:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4717:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
4718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
4719:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
4720:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         without ADC disable command on going.
4721:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
4722:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4723:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4724:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4725:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
4726:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4727:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4728:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4729:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4730:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4731:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4732:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_ADSTART);
4733:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4734:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4735:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4736:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Stop ADC group regular conversion.
4737:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4738:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
4739:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be enabled (potentially with conversion on going on group regular),
4740:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         without ADC disable command on going.
4741:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_StopConversion
4742:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4743:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4744:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4745:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopConversion(ADC_TypeDef *ADCx)
4746:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4747:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4748:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4749:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4750:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4751:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4752:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_ADSTP);
4753:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4754:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4755:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4756:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion state.
4757:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
4758:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4759:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group regular.
4760:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4761:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(const ADC_TypeDef *ADCx)
 231              		.loc 2 4761 26 view .LVU79
 232              	.LBB133:
4762:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 105


4763:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 233              		.loc 2 4763 3 view .LVU80
 234              		.loc 2 4763 12 is_stmt 0 view .LVU81
 235 0074 9A68     		ldr	r2, [r3, #8]
 236 0076 0421     		movs	r1, #4
 237 0078 0D00     		movs	r5, r1
 238 007a 1540     		ands	r5, r2
 239              		.loc 2 4763 74 view .LVU82
 240 007c 1142     		tst	r1, r2
 241 007e 00D0     		beq	.L9
 242 0080 0125     		movs	r5, #1
 243              	.L9:
 244              	.LVL14:
 245              		.loc 2 4763 74 view .LVU83
 246              	.LBE133:
 247              	.LBE132:
 502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 248              		.loc 1 502 3 is_stmt 1 view .LVU84
 502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 249              		.loc 1 502 13 is_stmt 0 view .LVU85
 250 0082 A26D     		ldr	r2, [r4, #88]
 502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 251              		.loc 1 502 6 view .LVU86
 252 0084 D206     		lsls	r2, r2, #27
 253 0086 00D5     		bpl	.LCB198
 254 0088 C2E0     		b	.L10	@long jump
 255              	.LCB198:
 503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      )
 256              		.loc 1 503 7 view .LVU87
 257 008a 002D     		cmp	r5, #0
 258 008c 00D0     		beq	.LCB200
 259 008e BFE0     		b	.L10	@long jump
 260              	.LCB200:
 507:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 261              		.loc 1 507 5 is_stmt 1 view .LVU88
 262 0090 A26D     		ldr	r2, [r4, #88]
 263 0092 6749     		ldr	r1, .L29+12
 264 0094 0A40     		ands	r2, r1
 265 0096 0631     		adds	r1, r1, #6
 266 0098 FF31     		adds	r1, r1, #255
 267 009a 0A43     		orrs	r2, r1
 268 009c A265     		str	r2, [r4, #88]
 534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 269              		.loc 1 534 5 view .LVU89
 270              	.LVL15:
 271              	.LBB134:
 272              	.LBI134:
4634:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 273              		.loc 2 4634 26 view .LVU90
 274              	.LBB135:
4636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 275              		.loc 2 4636 3 view .LVU91
4636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 276              		.loc 2 4636 12 is_stmt 0 view .LVU92
 277 009e 9A68     		ldr	r2, [r3, #8]
4636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 278              		.loc 2 4636 68 view .LVU93
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 106


 279 00a0 D207     		lsls	r2, r2, #31
 280 00a2 52D4     		bmi	.L11
 281              	.LVL16:
4636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 282              		.loc 2 4636 68 view .LVU94
 283              	.LBE135:
 284              	.LBE134:
 544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                     ADC_CFGR1_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)      |
 285              		.loc 1 544 7 is_stmt 1 view .LVU95
 545:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                     ADC_CFGR1_AUTOOFF((uint32_t)hadc->Init.LowPowerAutoPowerOff)   |
 286              		.loc 1 545 21 is_stmt 0 view .LVU96
 287 00a4 227E     		ldrb	r2, [r4, #24]
 288 00a6 9203     		lsls	r2, r2, #14
 544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                     ADC_CFGR1_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)      |
 289              		.loc 1 544 84 view .LVU97
 290 00a8 A168     		ldr	r1, [r4, #8]
 291 00aa 0A43     		orrs	r2, r1
 546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                     ADC_CFGR1_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)  |
 292              		.loc 1 546 21 view .LVU98
 293 00ac 617E     		ldrb	r1, [r4, #25]
 294 00ae C903     		lsls	r1, r1, #15
 545:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                     ADC_CFGR1_AUTOOFF((uint32_t)hadc->Init.LowPowerAutoPowerOff)   |
 295              		.loc 1 545 84 view .LVU99
 296 00b0 0A43     		orrs	r2, r1
 547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                     ADC_CFGR1_OVERRUN(hadc->Init.Overrun)                          |
 297              		.loc 1 547 21 view .LVU100
 298 00b2 A57E     		ldrb	r5, [r4, #26]
 299              	.LVL17:
 547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                     ADC_CFGR1_OVERRUN(hadc->Init.Overrun)                          |
 300              		.loc 1 547 21 view .LVU101
 301 00b4 6903     		lsls	r1, r5, #13
 546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                     ADC_CFGR1_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)  |
 302              		.loc 1 546 84 view .LVU102
 303 00b6 0A43     		orrs	r2, r1
 548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                     hadc->Init.DataAlign                                           |
 304              		.loc 1 548 21 view .LVU103
 305 00b8 216B     		ldr	r1, [r4, #48]
 306 00ba 0029     		cmp	r1, #0
 307 00bc 01D0     		beq	.L12
 308 00be 8021     		movs	r1, #128
 309 00c0 4901     		lsls	r1, r1, #5
 310              	.L12:
 547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                     ADC_CFGR1_OVERRUN(hadc->Init.Overrun)                          |
 311              		.loc 1 547 84 view .LVU104
 312 00c2 0A43     		orrs	r2, r1
 548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                     hadc->Init.DataAlign                                           |
 313              		.loc 1 548 84 view .LVU105
 314 00c4 E168     		ldr	r1, [r4, #12]
 315 00c6 0A43     		orrs	r2, r1
 550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                     ADC_CFGR1_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 316              		.loc 1 550 21 view .LVU106
 317 00c8 2169     		ldr	r1, [r4, #16]
 318 00ca 0029     		cmp	r1, #0
 319 00cc 69DB     		blt	.L25
 320 00ce 8021     		movs	r1, #128
 321 00d0 8903     		lsls	r1, r1, #14
 322              	.L13:
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 107


 549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                     ADC_SCAN_SEQ_MODE(hadc->Init.ScanConvMode)                     |
 323              		.loc 1 549 84 view .LVU107
 324 00d2 0A43     		orrs	r2, r1
 551:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 325              		.loc 1 551 21 view .LVU108
 326 00d4 2C21     		movs	r1, #44
 327 00d6 615C     		ldrb	r1, [r4, r1]
 328 00d8 4900     		lsls	r1, r1, #1
 550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                     ADC_CFGR1_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 329              		.loc 1 550 84 view .LVU109
 330 00da 0A43     		orrs	r2, r1
 331              	.LVL18:
 554:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 332              		.loc 1 554 7 is_stmt 1 view .LVU110
 554:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 333              		.loc 1 554 21 is_stmt 0 view .LVU111
 334 00dc 2021     		movs	r1, #32
 335 00de 615C     		ldrb	r1, [r4, r1]
 554:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 336              		.loc 1 554 10 view .LVU112
 337 00e0 0129     		cmp	r1, #1
 338 00e2 61D0     		beq	.L26
 339              	.L14:
 580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 340              		.loc 1 580 7 is_stmt 1 view .LVU113
 580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 341              		.loc 1 580 21 is_stmt 0 view .LVU114
 342 00e4 616A     		ldr	r1, [r4, #36]
 580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 343              		.loc 1 580 10 view .LVU115
 344 00e6 0029     		cmp	r1, #0
 345 00e8 05D0     		beq	.L16
 582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       hadc->Init.ExternalTrigConvEdge);
 346              		.loc 1 582 9 is_stmt 1 view .LVU116
 582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       hadc->Init.ExternalTrigConvEdge);
 347              		.loc 1 582 52 is_stmt 0 view .LVU117
 348 00ea E025     		movs	r5, #224
 349 00ec 6D00     		lsls	r5, r5, #1
 350 00ee 2940     		ands	r1, r5
 582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       hadc->Init.ExternalTrigConvEdge);
 351              		.loc 1 582 72 view .LVU118
 352 00f0 A56A     		ldr	r5, [r4, #40]
 353 00f2 2943     		orrs	r1, r5
 582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       hadc->Init.ExternalTrigConvEdge);
 354              		.loc 1 582 19 view .LVU119
 355 00f4 0A43     		orrs	r2, r1
 356              	.LVL19:
 357              	.L16:
 587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_RES       |
 358              		.loc 1 587 7 is_stmt 1 view .LVU120
 359 00f6 D968     		ldr	r1, [r3, #12]
 360 00f8 4E4D     		ldr	r5, .L29+16
 361 00fa 2940     		ands	r1, r5
 362 00fc 0A43     		orrs	r2, r1
 363              	.LVL20:
 587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_RES       |
 364              		.loc 1 587 7 is_stmt 0 view .LVU121
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 108


 365 00fe DA60     		str	r2, [r3, #12]
 602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                     hadc->Init.TriggerFrequencyMode
 366              		.loc 1 602 7 is_stmt 1 view .LVU122
 602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                     hadc->Init.TriggerFrequencyMode
 367              		.loc 1 602 48 is_stmt 0 view .LVU123
 368 0100 6368     		ldr	r3, [r4, #4]
 369 0102 9B0F     		lsrs	r3, r3, #30
 370 0104 9B07     		lsls	r3, r3, #30
 602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                     hadc->Init.TriggerFrequencyMode
 371              		.loc 1 602 68 view .LVU124
 372 0106 E26C     		ldr	r2, [r4, #76]
 373 0108 1A43     		orrs	r2, r3
 374              	.LVL21:
 606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 375              		.loc 1 606 7 is_stmt 1 view .LVU125
 606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 376              		.loc 1 606 21 is_stmt 0 view .LVU126
 377 010a 3C21     		movs	r1, #60
 378 010c 615C     		ldrb	r1, [r4, r1]
 606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 379              		.loc 1 606 10 view .LVU127
 380 010e 0129     		cmp	r1, #1
 381 0110 59D0     		beq	.L27
 382              	.L17:
 616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR2_CKMODE |
 383              		.loc 1 616 7 is_stmt 1 view .LVU128
 384 0112 2168     		ldr	r1, [r4]
 385 0114 0B69     		ldr	r3, [r1, #16]
 386 0116 484D     		ldr	r5, .L29+20
 387 0118 2B40     		ands	r3, r5
 388 011a 1343     		orrs	r3, r2
 389 011c 0B61     		str	r3, [r1, #16]
 627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV2) &&
 390              		.loc 1 627 7 view .LVU129
 627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV2) &&
 391              		.loc 1 627 23 is_stmt 0 view .LVU130
 392 011e 6368     		ldr	r3, [r4, #4]
 627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV2) &&
 393              		.loc 1 627 10 view .LVU131
 394 0120 C022     		movs	r2, #192
 395              	.LVL22:
 627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV2) &&
 396              		.loc 1 627 10 view .LVU132
 397 0122 1206     		lsls	r2, r2, #24
 398 0124 9342     		cmp	r3, r2
 399 0126 10D0     		beq	.L11
 627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV2) &&
 400              		.loc 1 627 69 discriminator 1 view .LVU133
 401 0128 8022     		movs	r2, #128
 402 012a D205     		lsls	r2, r2, #23
 403 012c 9342     		cmp	r3, r2
 404 012e 0CD0     		beq	.L11
 628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV4))
 405              		.loc 1 628 69 view .LVU134
 406 0130 8022     		movs	r2, #128
 407 0132 1206     		lsls	r2, r2, #24
 408 0134 9342     		cmp	r3, r2
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 109


 409 0136 08D0     		beq	.L11
 631:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CCR_PRESC,
 410              		.loc 1 631 9 is_stmt 1 view .LVU135
 411 0138 4049     		ldr	r1, .L29+24
 412 013a 0A68     		ldr	r2, [r1]
 413 013c 404D     		ldr	r5, .L29+28
 414 013e 2A40     		ands	r2, r5
 415 0140 F025     		movs	r5, #240
 416 0142 AD03     		lsls	r5, r5, #14
 417 0144 2B40     		ands	r3, r5
 418 0146 1343     		orrs	r3, r2
 419 0148 0B60     		str	r3, [r1]
 420              	.L11:
 638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     LL_ADC_SetSamplingTimeCommonChannels(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_2, hadc->Init.S
 421              		.loc 1 638 5 view .LVU136
 422 014a 2268     		ldr	r2, [r4]
 423              	.LVL23:
 424              	.LBB136:
 425              	.LBI136:
2575:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                           uint32_t SamplingTime)
 426              		.loc 2 2575 22 view .LVU137
 427              	.LBB137:
2578:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
 428              		.loc 2 2578 3 view .LVU138
 429 014c 5369     		ldr	r3, [r2, #20]
 430 014e 0721     		movs	r1, #7
 431 0150 8B43     		bics	r3, r1
 432 0152 616B     		ldr	r1, [r4, #52]
 433 0154 0B43     		orrs	r3, r1
 434 0156 5361     		str	r3, [r2, #20]
 435              	.LVL24:
2578:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
 436              		.loc 2 2578 3 is_stmt 0 view .LVU139
 437              	.LBE137:
 438              	.LBE136:
 639:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 439              		.loc 1 639 5 is_stmt 1 view .LVU140
 440 0158 2168     		ldr	r1, [r4]
 441              	.LVL25:
 442              	.LBB138:
 443              	.LBI138:
2575:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                           uint32_t SamplingTime)
 444              		.loc 2 2575 22 view .LVU141
 445              	.LBB139:
2578:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
 446              		.loc 2 2578 3 view .LVU142
 447 015a 4B69     		ldr	r3, [r1, #20]
 448 015c 7022     		movs	r2, #112
 449 015e 9343     		bics	r3, r2
 450 0160 A26B     		ldr	r2, [r4, #56]
 451 0162 1201     		lsls	r2, r2, #4
 452 0164 1343     		orrs	r3, r2
 453 0166 4B61     		str	r3, [r1, #20]
 454              	.LVL26:
2578:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
 455              		.loc 2 2578 3 is_stmt 0 view .LVU143
 456              	.LBE139:
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 110


 457              	.LBE138:
 651:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 458              		.loc 1 651 5 is_stmt 1 view .LVU144
 651:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 459              		.loc 1 651 19 is_stmt 0 view .LVU145
 460 0168 2369     		ldr	r3, [r4, #16]
 651:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 461              		.loc 1 651 8 view .LVU146
 462 016a 002B     		cmp	r3, #0
 463 016c 35D1     		bne	.L18
 655:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               ADC_CHSELR_SQ2_TO_SQ8);
 464              		.loc 1 655 7 is_stmt 1 view .LVU147
 465 016e 2268     		ldr	r2, [r4]
 466 0170 916A     		ldr	r1, [r2, #40]
 467 0172 103B     		subs	r3, r3, #16
 468 0174 0B43     		orrs	r3, r1
 469 0176 9362     		str	r3, [r2, #40]
 470              	.L19:
 678:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 471              		.loc 1 678 5 view .LVU148
 682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         == hadc->Init.SamplingTimeCommon1)
 472              		.loc 1 682 5 view .LVU149
 682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         == hadc->Init.SamplingTimeCommon1)
 473              		.loc 1 682 50 is_stmt 0 view .LVU150
 474 0178 2368     		ldr	r3, [r4]
 475              	.LVL27:
 476              	.LBB140:
 477              	.LBI140:
2608:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 478              		.loc 2 2608 26 is_stmt 1 view .LVU151
 479              	.LBB141:
2610:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                     >> (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
 480              		.loc 2 2610 3 view .LVU152
2610:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                     >> (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
 481              		.loc 2 2610 22 is_stmt 0 view .LVU153
 482 017a 5A69     		ldr	r2, [r3, #20]
 483 017c 0723     		movs	r3, #7
 484              	.LVL28:
2610:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                     >> (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
 485              		.loc 2 2610 22 view .LVU154
 486 017e 1340     		ands	r3, r2
 487              	.LVL29:
2610:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                     >> (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
 488              		.loc 2 2610 22 view .LVU155
 489              	.LBE141:
 490              	.LBE140:
 682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         == hadc->Init.SamplingTimeCommon1)
 491              		.loc 1 682 8 view .LVU156
 492 0180 626B     		ldr	r2, [r4, #52]
 493 0182 9A42     		cmp	r2, r3
 494 0184 3BD0     		beq	.L28
 696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 495              		.loc 1 696 7 is_stmt 1 view .LVU157
 496 0186 A36D     		ldr	r3, [r4, #88]
 497 0188 1222     		movs	r2, #18
 498 018a 9343     		bics	r3, r2
 499 018c 023A     		subs	r2, r2, #2
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 111


 500 018e 1343     		orrs	r3, r2
 501 0190 A365     		str	r3, [r4, #88]
 701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 502              		.loc 1 701 7 view .LVU158
 503 0192 E36D     		ldr	r3, [r4, #92]
 504 0194 0F3A     		subs	r2, r2, #15
 505 0196 1343     		orrs	r3, r2
 506 0198 E365     		str	r3, [r4, #92]
 703:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 507              		.loc 1 703 7 view .LVU159
 508              	.LVL30:
 703:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 509              		.loc 1 703 22 is_stmt 0 view .LVU160
 510 019a 0120     		movs	r0, #1
 511 019c 3DE0     		b	.L3
 512              	.LVL31:
 513              	.L22:
 381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_cfgr1 = 0UL;
 514              		.loc 1 381 21 view .LVU161
 515 019e 0020     		movs	r0, #0
 516 01a0 68E7     		b	.L8
 517              	.LVL32:
 518              	.L25:
 550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                     ADC_CFGR1_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 519              		.loc 1 550 21 discriminator 1 view .LVU162
 520 01a2 4900     		lsls	r1, r1, #1
 521 01a4 4908     		lsrs	r1, r1, #1
 522 01a6 94E7     		b	.L13
 523              	.LVL33:
 524              	.L26:
 556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 525              		.loc 1 556 9 is_stmt 1 view .LVU163
 556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 526              		.loc 1 556 12 is_stmt 0 view .LVU164
 527 01a8 002D     		cmp	r5, #0
 528 01aa 03D1     		bne	.L15
 559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 529              		.loc 1 559 11 is_stmt 1 view .LVU165
 559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 530              		.loc 1 559 21 is_stmt 0 view .LVU166
 531 01ac 8021     		movs	r1, #128
 532 01ae 4902     		lsls	r1, r1, #9
 533 01b0 0A43     		orrs	r2, r1
 534              	.LVL34:
 559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 535              		.loc 1 559 21 view .LVU167
 536 01b2 97E7     		b	.L14
 537              	.L15:
 568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 538              		.loc 1 568 11 is_stmt 1 view .LVU168
 539 01b4 A16D     		ldr	r1, [r4, #88]
 540 01b6 2025     		movs	r5, #32
 541 01b8 2943     		orrs	r1, r5
 542 01ba A165     		str	r1, [r4, #88]
 571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 543              		.loc 1 571 11 view .LVU169
 544 01bc E16D     		ldr	r1, [r4, #92]
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 112


 545 01be 1F3D     		subs	r5, r5, #31
 546 01c0 2943     		orrs	r1, r5
 547 01c2 E165     		str	r1, [r4, #92]
 548 01c4 8EE7     		b	.L14
 549              	.LVL35:
 550              	.L27:
 608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       (hadc->Init.ClockPrescaler & ADC_CFGR2_CKMODE) |
 551              		.loc 1 608 9 view .LVU170
 609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       hadc->Init.Oversampling.Ratio         |
 552              		.loc 1 609 70 is_stmt 0 view .LVU171
 553 01c6 216C     		ldr	r1, [r4, #64]
 554 01c8 0B43     		orrs	r3, r1
 610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       hadc->Init.Oversampling.RightBitShift |
 555              		.loc 1 610 61 view .LVU172
 556 01ca 616C     		ldr	r1, [r4, #68]
 557 01cc 0B43     		orrs	r3, r1
 611:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       hadc->Init.Oversampling.TriggeredMode
 558              		.loc 1 611 61 view .LVU173
 559 01ce A16C     		ldr	r1, [r4, #72]
 560 01d0 0B43     		orrs	r3, r1
 608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       (hadc->Init.ClockPrescaler & ADC_CFGR2_CKMODE) |
 561              		.loc 1 608 19 view .LVU174
 562 01d2 1343     		orrs	r3, r2
 563 01d4 0122     		movs	r2, #1
 564              	.LVL36:
 608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       (hadc->Init.ClockPrescaler & ADC_CFGR2_CKMODE) |
 565              		.loc 1 608 19 view .LVU175
 566 01d6 1A43     		orrs	r2, r3
 567              	.LVL37:
 608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       (hadc->Init.ClockPrescaler & ADC_CFGR2_CKMODE) |
 568              		.loc 1 608 19 view .LVU176
 569 01d8 9BE7     		b	.L17
 570              	.LVL38:
 571              	.L18:
 658:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 572              		.loc 1 658 10 is_stmt 1 view .LVU177
 658:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 573              		.loc 1 658 13 is_stmt 0 view .LVU178
 574 01da 8022     		movs	r2, #128
 575 01dc 9203     		lsls	r2, r2, #14
 576 01de 9342     		cmp	r3, r2
 577 01e0 CAD1     		bne	.L19
 669:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CHSELR_SQ_ALL,
 578              		.loc 1 669 7 is_stmt 1 view .LVU179
 579 01e2 2168     		ldr	r1, [r4]
 580 01e4 8B6A     		ldr	r3, [r1, #40]
 581 01e6 E369     		ldr	r3, [r4, #28]
 582 01e8 013B     		subs	r3, r3, #1
 583 01ea 9B00     		lsls	r3, r3, #2
 584 01ec 1C22     		movs	r2, #28
 585 01ee 1A40     		ands	r2, r3
 586 01f0 1023     		movs	r3, #16
 587 01f2 5B42     		rsbs	r3, r3, #0
 588 01f4 9340     		lsls	r3, r3, r2
 589 01f6 226E     		ldr	r2, [r4, #96]
 590 01f8 1343     		orrs	r3, r2
 591 01fa 8B62     		str	r3, [r1, #40]
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 113


 592 01fc BCE7     		b	.L19
 593              	.L28:
 686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 594              		.loc 1 686 7 view .LVU180
 595 01fe 0023     		movs	r3, #0
 596 0200 E365     		str	r3, [r4, #92]
 689:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 597              		.loc 1 689 7 view .LVU181
 598 0202 A36D     		ldr	r3, [r4, #88]
 599 0204 0322     		movs	r2, #3
 600 0206 9343     		bics	r3, r2
 601 0208 023A     		subs	r2, r2, #2
 602 020a 1343     		orrs	r3, r2
 603 020c A365     		str	r3, [r4, #88]
 604 020e 04E0     		b	.L3
 605              	.LVL39:
 606              	.L10:
 710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 607              		.loc 1 710 5 view .LVU182
 608 0210 A36D     		ldr	r3, [r4, #88]
 609 0212 1022     		movs	r2, #16
 610 0214 1343     		orrs	r3, r2
 611 0216 A365     		str	r3, [r4, #88]
 712:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 612              		.loc 1 712 5 view .LVU183
 613              	.LVL40:
 712:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 614              		.loc 1 712 20 is_stmt 0 view .LVU184
 615 0218 0120     		movs	r0, #1
 616              	.LVL41:
 617              	.L3:
 716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 618              		.loc 1 716 1 view .LVU185
 619 021a 03B0     		add	sp, sp, #12
 620              		@ sp needed
 621              	.LVL42:
 716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 622              		.loc 1 716 1 view .LVU186
 623 021c 30BD     		pop	{r4, r5, pc}
 624              	.LVL43:
 625              	.L21:
 390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 626              		.loc 1 390 12 view .LVU187
 627 021e 0120     		movs	r0, #1
 628              	.LVL44:
 390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 629              		.loc 1 390 12 view .LVU188
 630 0220 FBE7     		b	.L3
 631              	.L30:
 632 0222 C046     		.align	2
 633              	.L29:
 634 0224 E8FFFF6F 		.word	1879048168
 635 0228 00000000 		.word	SystemCoreClock
 636 022c 400D0300 		.word	200000
 637 0230 FDFEFFFF 		.word	-259
 638 0234 0102DEFF 		.word	-2227711
 639 0238 02FCFF1F 		.word	536869890
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 114


 640 023c 08270140 		.word	1073817352
 641 0240 FFFFC3FF 		.word	-3932161
 642              		.cfi_endproc
 643              	.LFE440:
 645              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 646              		.align	1
 647              		.weak	HAL_ADC_MspDeInit
 648              		.syntax unified
 649              		.code	16
 650              		.thumb_func
 652              	HAL_ADC_MspDeInit:
 653              	.LVL45:
 654              	.LFB443:
 871:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 872:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
 873:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  DeInitialize the ADC MSP.
 874:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
 875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   All ADC instances use the same core clock at RCC level, disabling
 876:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         the core clock reset all ADC instances).
 877:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval None
 878:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 879:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef *hadc)
 880:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
 655              		.loc 1 880 1 is_stmt 1 view -0
 656              		.cfi_startproc
 657              		@ args = 0, pretend = 0, frame = 0
 658              		@ frame_needed = 0, uses_anonymous_args = 0
 659              		@ link register save eliminated.
 881:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 882:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   UNUSED(hadc);
 660              		.loc 1 882 3 view .LVU190
 883:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 884:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 885:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             function HAL_ADC_MspDeInit must be implemented in the user file.
 886:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****    */
 887:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 661              		.loc 1 887 1 is_stmt 0 view .LVU191
 662              		@ sp needed
 663 0000 7047     		bx	lr
 664              		.cfi_endproc
 665              	.LFE443:
 667              		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
 668              		.align	1
 669              		.global	HAL_ADC_PollForConversion
 670              		.syntax unified
 671              		.code	16
 672              		.thumb_func
 674              	HAL_ADC_PollForConversion:
 675              	.LVL46:
 676              	.LFB446:
 888:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 889:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 890:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
 891:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Register a User ADC Callback
 892:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         To be used instead of the weak predefined callback
 893:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
 894:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *                the configuration information for the specified ADC.
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 115


 895:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be registered
 896:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         This parameter can be one of the following values:
 897:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
 898:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
 899:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
 900:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
 901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
 902:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
 903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
 904:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
 905:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
 906:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
 907:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
 908:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param  pCallback pointer to the Callback function
 909:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status
 910:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 911:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_RegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Callb
 912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                            pADC_CallbackTypeDef pCallback)
 913:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
 914:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
 915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 916:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (pCallback == NULL)
 917:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Update the error code */
 919:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 920:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     return HAL_ERROR;
 922:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 924:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
 925:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 926:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     switch (CallbackID)
 927:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 928:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
 929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->ConvCpltCallback = pCallback;
 930:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
 931:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 932:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
 933:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = pCallback;
 934:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
 935:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 936:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
 937:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = pCallback;
 938:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
 939:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 940:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
 941:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->ErrorCallback = pCallback;
 942:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
 943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 944:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
 945:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = pCallback;
 946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
 947:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 948:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
 949:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = pCallback;
 950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
 951:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 116


 952:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
 953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->EndOfSamplingCallback = pCallback;
 954:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
 955:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 956:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
 957:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
 958:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
 959:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 960:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
 961:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
 962:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
 963:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 964:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       default :
 965:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Update the error code */
 966:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 967:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 968:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Return error status */
 969:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         status = HAL_ERROR;
 970:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
 971:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 972:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 973:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
 974:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 975:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     switch (CallbackID)
 976:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 977:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
 978:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
 979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
 980:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 981:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
 982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
 983:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
 984:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 985:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       default :
 986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Update the error code */
 987:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 988:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Return error status */
 990:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         status = HAL_ERROR;
 991:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
 992:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 993:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 994:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else
 995:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 996:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Update the error code */
 997:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 998:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 999:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Return error status */
1000:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     status =  HAL_ERROR;
1001:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1002:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1003:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return status;
1004:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
1005:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1006:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
1007:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Unregister a ADC Callback
1008:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         ADC callback is redirected to the weak predefined callback
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 117


1009:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
1010:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *                the configuration information for the specified ADC.
1011:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be unregistered
1012:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         This parameter can be one of the following values:
1013:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
1014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
1015:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
1016:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
1017:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
1018:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
1019:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
1020:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
1021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
1022:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
1023:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
1024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status
1025:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1026:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_UnRegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Cal
1027:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
1028:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
1029:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1030:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
1031:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1032:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     switch (CallbackID)
1033:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1034:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
1035:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->ConvCpltCallback = HAL_ADC_ConvCpltCallback;
1036:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1037:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1038:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
1039:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = HAL_ADC_ConvHalfCpltCallback;
1040:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1041:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1042:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
1043:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = HAL_ADC_LevelOutOfWindowCallback;
1044:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1045:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1046:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
1047:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->ErrorCallback = HAL_ADC_ErrorCallback;
1048:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1049:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1050:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
1051:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = HAL_ADCEx_LevelOutOfWindow2Callback;
1052:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1053:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1054:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
1055:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = HAL_ADCEx_LevelOutOfWindow3Callback;
1056:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1057:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1058:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
1059:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->EndOfSamplingCallback = HAL_ADCEx_EndOfSamplingCallback;
1060:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1061:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1062:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1063:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit              */
1064:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1065:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 118


1066:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1067:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit            */
1068:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1069:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1070:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       default :
1071:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Update the error code */
1072:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1073:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1074:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Return error status */
1075:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         status =  HAL_ERROR;
1076:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1077:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1078:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1079:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
1080:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1081:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     switch (CallbackID)
1082:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1083:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1084:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit;                   /* Legacy weak MspInit          
1085:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1086:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1087:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1088:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit;               /* Legacy weak MspDeInit        
1089:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1090:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1091:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       default :
1092:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Update the error code */
1093:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1094:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1095:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Return error status */
1096:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         status =  HAL_ERROR;
1097:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1098:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1099:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else
1101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Update the error code */
1103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Return error status */
1106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     status =  HAL_ERROR;
1107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return status;
1110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
1111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1113:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
1115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @}
1116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 ADC Input and Output operation functions
1119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief    ADC IO operation functions
1120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *
1121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** @verbatim
1122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****  ===============================================================================
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 119


1123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       ##### IO operation functions #####
1124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****  ===============================================================================
1125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     [..]  This section provides functions allowing to:
1126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Start conversion of regular group.
1127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Stop conversion of regular group.
1128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Poll for conversion complete on regular group.
1129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Poll for conversion event.
1130:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Get result of regular channel conversion.
1131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Start conversion of regular group and enable interruptions.
1132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Stop conversion of regular group and disable interruptions.
1133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Handle ADC interrupt request
1134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Start conversion of regular group and enable DMA transfer.
1135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Stop conversion of regular group and disable ADC DMA transfer.
1136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** @endverbatim
1137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @{
1138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
1141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group.
1142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   Interruptions enabled in this function: None.
1143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
1144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status
1145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef *hadc)
1147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
1148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
1151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1155:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_LOCK(hadc);
1157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Enable the ADC peripheral */
1159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC state                                                        */
1165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC error code */
1172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Reset all ADC error code fields */
1173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
1174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Process unlocked */
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 120


1180:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* trigger event.                                                       */
1188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Start ADC group regular conversion */
1189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
1190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     else
1192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else
1197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return tmp_hal_status;
1202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
1203:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
1205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in
1206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC peripheral.
1207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential
1208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         conversion on injected group. If injected group is under use, it
1209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
1210:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
1211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status.
1212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef *hadc)
1214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
1215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
1218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_LOCK(hadc);
1221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1222:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC group regular */
1223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc);
1224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
1230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC state */
1235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 121


1237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1239:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return tmp_hal_status;
1244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
1245:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
1247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Wait for regular group conversion to be completed.
1248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   ADC conversion flags EOS (end of sequence) and EOC (end of
1249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         conversion) are cleared by this function, with an exception:
1250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         if low power feature "LowPowerAutoWait" is enabled, flags are
1251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         not cleared to not interfere with this feature until data register
1252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         is read using function HAL_ADC_GetValue().
1253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   This function cannot be used in a particular setup: ADC configured
1254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         in DMA mode and polling for end of each conversion (ADC init
1255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SINGLE_CONV).
1256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
1257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         performed on each conversion. Nevertheless, polling can still
1258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         be performed on the complete sequence (ADC init
1259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SEQ_CONV).
1260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
1261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status
1263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef *hadc, uint32_t Timeout)
1265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
 677              		.loc 1 1265 1 is_stmt 1 view -0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 0
 680              		@ frame_needed = 0, uses_anonymous_args = 0
 681              		.loc 1 1265 1 is_stmt 0 view .LVU193
 682 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 683              	.LCFI2:
 684              		.cfi_def_cfa_offset 24
 685              		.cfi_offset 3, -24
 686              		.cfi_offset 4, -20
 687              		.cfi_offset 5, -16
 688              		.cfi_offset 6, -12
 689              		.cfi_offset 7, -8
 690              		.cfi_offset 14, -4
 691 0002 0400     		movs	r4, r0
 692 0004 0D00     		movs	r5, r1
1266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
 693              		.loc 1 1266 3 is_stmt 1 view .LVU194
1267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_flag_end;
 694              		.loc 1 1267 3 view .LVU195
1268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
1270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 695              		.loc 1 1270 3 view .LVU196
1271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* If end of conversion selected to end of sequence conversions */
1273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 696              		.loc 1 1273 3 view .LVU197
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 122


 697              		.loc 1 1273 17 is_stmt 0 view .LVU198
 698 0006 4669     		ldr	r6, [r0, #20]
 699              		.loc 1 1273 6 view .LVU199
 700 0008 082E     		cmp	r6, #8
 701 000a 04D0     		beq	.L33
1274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_flag_end = ADC_FLAG_EOS;
1276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* If end of conversion selected to end of unitary conversion */
1278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else /* ADC_EOC_SINGLE_CONV */
1279:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Verification that ADC configuration is compliant with polling for      */
1281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* each conversion:                                                       */
1282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
1283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* several ranks and polling for end of each conversion.                  */
1284:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* For code simplicity sake, this particular case is generalized to       */
1285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* ADC configured in DMA mode and and polling for end of each conversion. */
1286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if ((hadc->Instance->CFGR1 & ADC_CFGR1_DMAEN) != 0UL)
 702              		.loc 1 1286 5 is_stmt 1 view .LVU200
 703              		.loc 1 1286 14 is_stmt 0 view .LVU201
 704 000c 0368     		ldr	r3, [r0]
 705              		.loc 1 1286 24 view .LVU202
 706 000e DB68     		ldr	r3, [r3, #12]
 707              		.loc 1 1286 8 view .LVU203
 708 0010 DB07     		lsls	r3, r3, #31
 709 0012 1DD4     		bmi	.L43
1287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1288:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Update ADC state machine to error */
1289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       return HAL_ERROR;
1292:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     else
1294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       tmp_flag_end = (ADC_FLAG_EOC);
 710              		.loc 1 1295 20 view .LVU204
 711 0014 0426     		movs	r6, #4
 712              	.L33:
 713              	.LVL47:
1296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Get tick count */
1300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   tickstart = HAL_GetTick();
 714              		.loc 1 1300 3 is_stmt 1 view .LVU205
 715              		.loc 1 1300 15 is_stmt 0 view .LVU206
 716 0016 FFF7FEFF 		bl	HAL_GetTick
 717              	.LVL48:
 718              		.loc 1 1300 15 view .LVU207
 719 001a 0700     		movs	r7, r0
 720              	.LVL49:
1301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Wait until End of unitary conversion or sequence conversions flag is raised */
1303:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   while ((hadc->Instance->ISR & tmp_flag_end) == 0UL)
 721              		.loc 1 1303 3 is_stmt 1 view .LVU208
 722              	.L36:
 723              		.loc 1 1303 9 view .LVU209
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 123


 724              		.loc 1 1303 15 is_stmt 0 view .LVU210
 725 001c 2368     		ldr	r3, [r4]
 726              		.loc 1 1303 25 view .LVU211
 727 001e 1A68     		ldr	r2, [r3]
 728              		.loc 1 1303 9 view .LVU212
 729 0020 1642     		tst	r6, r2
 730 0022 1BD1     		bne	.L44
1304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (Timeout != HAL_MAX_DELAY)
 731              		.loc 1 1306 5 is_stmt 1 view .LVU213
 732              		.loc 1 1306 8 is_stmt 0 view .LVU214
 733 0024 6B1C     		adds	r3, r5, #1
 734 0026 F9D0     		beq	.L36
1307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1308:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
 735              		.loc 1 1308 7 is_stmt 1 view .LVU215
 736              		.loc 1 1308 13 is_stmt 0 view .LVU216
 737 0028 FFF7FEFF 		bl	HAL_GetTick
 738              	.LVL50:
 739              		.loc 1 1308 27 view .LVU217
 740 002c C01B     		subs	r0, r0, r7
 741              		.loc 1 1308 10 view .LVU218
 742 002e A842     		cmp	r0, r5
 743 0030 01D8     		bhi	.L37
 744              		.loc 1 1308 51 discriminator 1 view .LVU219
 745 0032 002D     		cmp	r5, #0
 746 0034 F2D1     		bne	.L36
 747              	.L37:
1309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
1310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
1311:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if ((hadc->Instance->ISR & tmp_flag_end) == 0UL)
 748              		.loc 1 1311 9 is_stmt 1 view .LVU220
 749              		.loc 1 1311 18 is_stmt 0 view .LVU221
 750 0036 2368     		ldr	r3, [r4]
 751              		.loc 1 1311 28 view .LVU222
 752 0038 1B68     		ldr	r3, [r3]
 753              		.loc 1 1311 12 view .LVU223
 754 003a 1E42     		tst	r6, r3
 755 003c EED1     		bne	.L36
1312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
1313:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Update ADC state machine to timeout */
1314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 756              		.loc 1 1314 11 is_stmt 1 view .LVU224
 757 003e A36D     		ldr	r3, [r4, #88]
 758 0040 0422     		movs	r2, #4
 759 0042 1343     		orrs	r3, r2
 760 0044 A365     		str	r3, [r4, #88]
1315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1316:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           __HAL_UNLOCK(hadc);
 761              		.loc 1 1316 11 view .LVU225
 762              		.loc 1 1316 11 view .LVU226
 763 0046 5423     		movs	r3, #84
 764 0048 0022     		movs	r2, #0
 765 004a E254     		strb	r2, [r4, r3]
 766              		.loc 1 1316 11 view .LVU227
1317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 124


1318:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           return HAL_TIMEOUT;
 767              		.loc 1 1318 11 view .LVU228
 768              		.loc 1 1318 18 is_stmt 0 view .LVU229
 769 004c 0320     		movs	r0, #3
 770 004e 29E0     		b	.L34
 771              	.LVL51:
 772              	.L43:
1289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 773              		.loc 1 1289 7 is_stmt 1 view .LVU230
 774 0050 836D     		ldr	r3, [r0, #88]
 775 0052 2022     		movs	r2, #32
 776 0054 1343     		orrs	r3, r2
 777 0056 8365     		str	r3, [r0, #88]
1291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 778              		.loc 1 1291 7 view .LVU231
1291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 779              		.loc 1 1291 14 is_stmt 0 view .LVU232
 780 0058 0120     		movs	r0, #1
 781              	.LVL52:
1291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 782              		.loc 1 1291 14 view .LVU233
 783 005a 23E0     		b	.L34
 784              	.LVL53:
 785              	.L44:
1319:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
1320:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
1321:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1322:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1323:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1324:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Update ADC state machine */
1325:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 786              		.loc 1 1325 3 is_stmt 1 view .LVU234
 787 005c A16D     		ldr	r1, [r4, #88]
 788 005e 8022     		movs	r2, #128
 789 0060 9200     		lsls	r2, r2, #2
 790 0062 0A43     		orrs	r2, r1
 791 0064 A265     		str	r2, [r4, #88]
1326:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1327:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Determine whether any further conversion upcoming on group regular       */
1328:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
1329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if ((LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
 792              		.loc 1 1329 3 view .LVU235
 793              	.LVL54:
 794              	.LBB142:
 795              	.LBI142:
2716:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 796              		.loc 2 2716 26 view .LVU236
 797              	.LBB143:
2718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 798              		.loc 2 2718 3 view .LVU237
2718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 799              		.loc 2 2718 12 is_stmt 0 view .LVU238
 800 0066 D968     		ldr	r1, [r3, #12]
 801 0068 C022     		movs	r2, #192
 802 006a 1201     		lsls	r2, r2, #4
2718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 803              		.loc 2 2718 106 view .LVU239
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 125


 804 006c 1142     		tst	r1, r2
 805 006e 13D1     		bne	.L39
 806              	.LVL55:
2718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 807              		.loc 2 2718 106 view .LVU240
 808              	.LBE143:
 809              	.LBE142:
1330:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       && (hadc->Init.ContinuousConvMode == DISABLE)
 810              		.loc 1 1330 21 view .LVU241
 811 0070 A27E     		ldrb	r2, [r4, #26]
 812              		.loc 1 1330 7 view .LVU242
 813 0072 002A     		cmp	r2, #0
 814 0074 10D1     		bne	.L39
1331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      )
1332:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Check whether end of sequence is reached */
1334:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
 815              		.loc 1 1334 5 is_stmt 1 view .LVU243
 816              		.loc 1 1334 9 is_stmt 0 view .LVU244
 817 0076 1A68     		ldr	r2, [r3]
 818              		.loc 1 1334 8 view .LVU245
 819 0078 1207     		lsls	r2, r2, #28
 820 007a 0DD5     		bpl	.L39
1335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit             */
1337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* ADSTART==0 (no conversion on going)                                  */
1338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 821              		.loc 1 1338 7 is_stmt 1 view .LVU246
 822              	.LVL56:
 823              	.LBB144:
 824              	.LBI144:
4761:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 825              		.loc 2 4761 26 view .LVU247
 826              	.LBB145:
 827              		.loc 2 4763 3 view .LVU248
 828              		.loc 2 4763 12 is_stmt 0 view .LVU249
 829 007c 9A68     		ldr	r2, [r3, #8]
 830              		.loc 2 4763 74 view .LVU250
 831 007e 5207     		lsls	r2, r2, #29
 832 0080 11D4     		bmi	.L40
 833              	.LVL57:
 834              		.loc 2 4763 74 view .LVU251
 835              	.LBE145:
 836              	.LBE144:
1339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
1340:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Disable ADC end of single conversion interrupt on group regular */
1341:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Note: Overrun interrupt was enabled with EOC interrupt in          */
1342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* HAL_Start_IT(), but is not disabled here because can be used       */
1343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* by overrun IRQ process below.                                      */
1344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
 837              		.loc 1 1344 9 is_stmt 1 view .LVU252
 838 0082 5A68     		ldr	r2, [r3, #4]
 839 0084 0C21     		movs	r1, #12
 840 0086 8A43     		bics	r2, r1
 841 0088 5A60     		str	r2, [r3, #4]
1345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1346:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Set ADC state */
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 126


1347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State,
 842              		.loc 1 1347 9 view .LVU253
 843 008a A36D     		ldr	r3, [r4, #88]
 844 008c 0B4A     		ldr	r2, .L45
 845 008e 1340     		ands	r3, r2
 846 0090 0432     		adds	r2, r2, #4
 847 0092 FF32     		adds	r2, r2, #255
 848 0094 1343     		orrs	r3, r2
 849 0096 A365     		str	r3, [r4, #88]
 850              	.L39:
1348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                           HAL_ADC_STATE_REG_BUSY,
1349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                           HAL_ADC_STATE_READY);
1350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
1351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       else
1352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
1353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Change ADC state to error state */
1354:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1355:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Set ADC error code to ADC peripheral internal error */
1357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
1358:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
1359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1361:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1362:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Clear end of conversion flag of regular group if low power feature       */
1363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* "LowPowerAutoWait " is disabled, to not interfere with this feature      */
1364:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* until data register is read using function HAL_ADC_GetValue().           */
1365:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (hadc->Init.LowPowerAutoWait == DISABLE)
 851              		.loc 1 1365 3 view .LVU254
 852              		.loc 1 1365 17 is_stmt 0 view .LVU255
 853 0098 207E     		ldrb	r0, [r4, #24]
 854              		.loc 1 1365 6 view .LVU256
 855 009a 0028     		cmp	r0, #0
 856 009c 0CD1     		bne	.L42
1366:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Clear regular group conversion flag */
1368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
 857              		.loc 1 1368 5 is_stmt 1 view .LVU257
 858 009e 2368     		ldr	r3, [r4]
 859 00a0 0C22     		movs	r2, #12
 860 00a2 1A60     		str	r2, [r3]
 861              	.LVL58:
 862              	.L34:
1369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1370:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Return function status */
1372:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return HAL_OK;
1373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 863              		.loc 1 1373 1 is_stmt 0 view .LVU258
 864              		@ sp needed
 865              	.LVL59:
 866              	.LVL60:
 867              		.loc 1 1373 1 view .LVU259
 868 00a4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 869              	.LVL61:
 870              	.L40:
1354:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 127


 871              		.loc 1 1354 9 is_stmt 1 view .LVU260
 872 00a6 A36D     		ldr	r3, [r4, #88]
 873 00a8 2022     		movs	r2, #32
 874 00aa 1343     		orrs	r3, r2
 875 00ac A365     		str	r3, [r4, #88]
1357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 876              		.loc 1 1357 9 view .LVU261
 877 00ae E36D     		ldr	r3, [r4, #92]
 878 00b0 1F3A     		subs	r2, r2, #31
 879 00b2 1343     		orrs	r3, r2
 880 00b4 E365     		str	r3, [r4, #92]
 881 00b6 EFE7     		b	.L39
 882              	.L42:
1372:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 883              		.loc 1 1372 10 is_stmt 0 view .LVU262
 884 00b8 0020     		movs	r0, #0
 885 00ba F3E7     		b	.L34
 886              	.L46:
 887              		.align	2
 888              	.L45:
 889 00bc FEFEFFFF 		.word	-258
 890              		.cfi_endproc
 891              	.LFE446:
 893              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 894              		.align	1
 895              		.global	HAL_ADC_PollForEvent
 896              		.syntax unified
 897              		.code	16
 898              		.thumb_func
 900              	HAL_ADC_PollForEvent:
 901              	.LVL62:
 902              	.LFB447:
1374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
1376:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Poll for ADC event.
1377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
1378:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param EventType the ADC event type.
1379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          This parameter can be one of the following values:
1380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *            @arg @ref ADC_EOSMP_EVENT  ADC End of Sampling event
1381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *            @arg @ref ADC_AWD1_EVENT   ADC Analog watchdog 1 event (main analog watchdog, presen
1382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *                                       all STM32 series)
1383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *            @arg @ref ADC_AWD2_EVENT   ADC Analog watchdog 2 event (additional analog watchdog, 
1384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *                                       all STM32 series)
1385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *            @arg @ref ADC_AWD3_EVENT   ADC Analog watchdog 3 event (additional analog watchdog, 
1386:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *                                       all STM32 series)
1387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *            @arg @ref ADC_OVR_EVENT    ADC Overrun event
1388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1389:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   The relevant flag is cleared if found to be set, except for ADC_FLAG_OVR.
1390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         Indeed, the latter is reset only if hadc->Init.Overrun field is set
1391:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         to ADC_OVR_DATA_OVERWRITTEN. Otherwise, data register may be potentially overwritten
1392:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         by a new converted data as soon as OVR is cleared.
1393:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         To reset OVR flag once the preserved data is retrieved, the user can resort
1394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         to macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status
1396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef *hadc, uint32_t EventType, uint32_t Timeou
1398:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 128


 903              		.loc 1 1398 1 is_stmt 1 view -0
 904              		.cfi_startproc
 905              		@ args = 0, pretend = 0, frame = 0
 906              		@ frame_needed = 0, uses_anonymous_args = 0
 907              		.loc 1 1398 1 is_stmt 0 view .LVU264
 908 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 909              	.LCFI3:
 910              		.cfi_def_cfa_offset 24
 911              		.cfi_offset 3, -24
 912              		.cfi_offset 4, -20
 913              		.cfi_offset 5, -16
 914              		.cfi_offset 6, -12
 915              		.cfi_offset 7, -8
 916              		.cfi_offset 14, -4
 917 0002 0500     		movs	r5, r0
 918 0004 0C00     		movs	r4, r1
 919 0006 1600     		movs	r6, r2
1399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
 920              		.loc 1 1399 3 is_stmt 1 view .LVU265
1400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
1402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 921              		.loc 1 1402 3 view .LVU266
1403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
 922              		.loc 1 1403 3 view .LVU267
1404:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Get tick count */
1406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   tickstart = HAL_GetTick();
 923              		.loc 1 1406 3 view .LVU268
 924              		.loc 1 1406 15 is_stmt 0 view .LVU269
 925 0008 FFF7FEFF 		bl	HAL_GetTick
 926              	.LVL63:
 927              		.loc 1 1406 15 view .LVU270
 928 000c 0700     		movs	r7, r0
 929              	.LVL64:
1407:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check selected event flag */
1409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   while (__HAL_ADC_GET_FLAG(hadc, EventType) == 0UL)
 930              		.loc 1 1409 3 is_stmt 1 view .LVU271
 931              	.L49:
 932              		.loc 1 1409 9 view .LVU272
 933              		.loc 1 1409 10 is_stmt 0 view .LVU273
 934 000e 2968     		ldr	r1, [r5]
 935 0010 0B68     		ldr	r3, [r1]
 936 0012 2340     		ands	r3, r4
 937              		.loc 1 1409 9 view .LVU274
 938 0014 A342     		cmp	r3, r4
 939 0016 16D0     		beq	.L60
1410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (Timeout != HAL_MAX_DELAY)
 940              		.loc 1 1412 5 is_stmt 1 view .LVU275
 941              		.loc 1 1412 8 is_stmt 0 view .LVU276
 942 0018 731C     		adds	r3, r6, #1
 943 001a F8D0     		beq	.L49
1413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1414:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 129


 944              		.loc 1 1414 7 is_stmt 1 view .LVU277
 945              		.loc 1 1414 13 is_stmt 0 view .LVU278
 946 001c FFF7FEFF 		bl	HAL_GetTick
 947              	.LVL65:
 948              		.loc 1 1414 27 view .LVU279
 949 0020 C01B     		subs	r0, r0, r7
 950              		.loc 1 1414 10 view .LVU280
 951 0022 B042     		cmp	r0, r6
 952 0024 01D8     		bhi	.L50
 953              		.loc 1 1414 51 discriminator 1 view .LVU281
 954 0026 002E     		cmp	r6, #0
 955 0028 F1D1     		bne	.L49
 956              	.L50:
1415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
1416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
1417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, EventType) == 0UL)
 957              		.loc 1 1417 9 is_stmt 1 view .LVU282
 958              		.loc 1 1417 13 is_stmt 0 view .LVU283
 959 002a 2B68     		ldr	r3, [r5]
 960 002c 1B68     		ldr	r3, [r3]
 961 002e 2340     		ands	r3, r4
 962              		.loc 1 1417 12 view .LVU284
 963 0030 A342     		cmp	r3, r4
 964 0032 ECD0     		beq	.L49
1418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
1419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Update ADC state machine to timeout */
1420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 965              		.loc 1 1420 11 is_stmt 1 view .LVU285
 966 0034 AB6D     		ldr	r3, [r5, #88]
 967 0036 0422     		movs	r2, #4
 968 0038 1343     		orrs	r3, r2
 969 003a AB65     		str	r3, [r5, #88]
1421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           __HAL_UNLOCK(hadc);
 970              		.loc 1 1422 11 view .LVU286
 971              		.loc 1 1422 11 view .LVU287
 972 003c 5423     		movs	r3, #84
 973 003e 0022     		movs	r2, #0
 974 0040 EA54     		strb	r2, [r5, r3]
 975              		.loc 1 1422 11 view .LVU288
1423:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1424:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           return HAL_TIMEOUT;
 976              		.loc 1 1424 11 view .LVU289
 977              		.loc 1 1424 18 is_stmt 0 view .LVU290
 978 0042 0320     		movs	r0, #3
 979 0044 27E0     		b	.L51
 980              	.L60:
1425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
1426:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
1427:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1428:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1429:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1430:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   switch (EventType)
 981              		.loc 1 1430 3 is_stmt 1 view .LVU291
 982 0046 8023     		movs	r3, #128
 983 0048 5B00     		lsls	r3, r3, #1
 984 004a 9C42     		cmp	r4, r3
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 130


 985 004c 24D0     		beq	.L53
 986 004e 0CD8     		bhi	.L54
 987 0050 022C     		cmp	r4, #2
 988 0052 18D0     		beq	.L55
 989 0054 802C     		cmp	r4, #128
 990 0056 29D1     		bne	.L57
1431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1432:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* End Of Sampling event */
1433:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     case ADC_EOSMP_EVENT:
1434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC state */
1435:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
1436:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1437:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Clear the End Of Sampling flag */
1438:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
1439:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1440:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       break;
1441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1442:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Analog watchdog (level out of window) event */
1443:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Note: In case of several analog watchdog enabled, if needed to know      */
1444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* which one triggered and on which ADCx, test ADC state of analog watchdog */
1445:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* flags HAL_ADC_STATE_AWD1/2/3 using function "HAL_ADC_GetState()".        */
1446:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* For example:                                                             */
1447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "          */
1448:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD2) != 0UL) "          */
1449:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD3) != 0UL) "          */
1450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1451:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Check analog watchdog 1 flag */
1452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     case ADC_AWD_EVENT:
1453:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC state */
1454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 991              		.loc 1 1454 7 view .LVU292
 992 0058 AA6D     		ldr	r2, [r5, #88]
 993 005a 8023     		movs	r3, #128
 994 005c 5B02     		lsls	r3, r3, #9
 995 005e 1343     		orrs	r3, r2
 996 0060 AB65     		str	r3, [r5, #88]
1455:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1456:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
 997              		.loc 1 1457 7 view .LVU293
 998 0062 8023     		movs	r3, #128
 999 0064 0B60     		str	r3, [r1]
1458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1459:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       break;
 1000              		.loc 1 1459 7 view .LVU294
1460:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Check analog watchdog 2 flag */
1462:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     case ADC_AWD2_EVENT:
1463:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC state */
1464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
1465:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1467:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
1468:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       break;
1470:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1471:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Check analog watchdog 3 flag */
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 131


1472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     case ADC_AWD3_EVENT:
1473:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC state */
1474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
1475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
1478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1479:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       break;
1480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1481:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Overrun event */
1482:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     default: /* Case ADC_OVR_EVENT */
1483:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* If overrun is set to overwrite previous data, overrun event is not     */
1484:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* considered as an error.                                                */
1485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* (cf ref manual "Managing conversions without using the DMA and without */
1486:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* overrun ")                                                             */
1487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
1488:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
1489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Set ADC state */
1490:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
1491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1492:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Set ADC error code to overrun */
1493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
1494:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
1495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       else
1496:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
1497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Clear ADC Overrun flag only if Overrun is set to ADC_OVR_DATA_OVERWRITTEN
1498:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****            otherwise, data register is potentially overwritten by new converted data as soon
1499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****            as OVR is cleared. */
1500:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
1502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       break;
1503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1505:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Return function status */
1506:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return HAL_OK;
 1001              		.loc 1 1506 10 is_stmt 0 view .LVU295
 1002 0066 0020     		movs	r0, #0
1459:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1003              		.loc 1 1459 7 view .LVU296
 1004 0068 15E0     		b	.L51
 1005              	.L54:
1430:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1006              		.loc 1 1430 3 view .LVU297
 1007 006a 8023     		movs	r3, #128
 1008 006c 9B00     		lsls	r3, r3, #2
 1009 006e 9C42     		cmp	r4, r3
 1010 0070 1CD1     		bne	.L57
1474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1011              		.loc 1 1474 7 is_stmt 1 view .LVU298
 1012 0072 AA6D     		ldr	r2, [r5, #88]
 1013 0074 8023     		movs	r3, #128
 1014 0076 DB02     		lsls	r3, r3, #11
 1015 0078 1343     		orrs	r3, r2
 1016 007a AB65     		str	r3, [r5, #88]
1477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1017              		.loc 1 1477 7 view .LVU299
 1018 007c 8023     		movs	r3, #128
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 132


 1019 007e 9B00     		lsls	r3, r3, #2
 1020 0080 0B60     		str	r3, [r1]
1479:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1021              		.loc 1 1479 7 view .LVU300
 1022              		.loc 1 1506 10 is_stmt 0 view .LVU301
 1023 0082 0020     		movs	r0, #0
1479:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1024              		.loc 1 1479 7 view .LVU302
 1025 0084 07E0     		b	.L51
 1026              	.L55:
1435:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1027              		.loc 1 1435 7 is_stmt 1 view .LVU303
 1028 0086 AA6D     		ldr	r2, [r5, #88]
 1029 0088 8023     		movs	r3, #128
 1030 008a 1B01     		lsls	r3, r3, #4
 1031 008c 1343     		orrs	r3, r2
 1032 008e AB65     		str	r3, [r5, #88]
1438:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1033              		.loc 1 1438 7 view .LVU304
 1034 0090 0223     		movs	r3, #2
 1035 0092 0B60     		str	r3, [r1]
1440:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1036              		.loc 1 1440 7 view .LVU305
 1037              		.loc 1 1506 10 is_stmt 0 view .LVU306
 1038 0094 0020     		movs	r0, #0
 1039              	.L51:
1507:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 1040              		.loc 1 1507 1 view .LVU307
 1041              		@ sp needed
 1042              	.LVL66:
 1043              	.LVL67:
 1044              	.LVL68:
 1045              	.LVL69:
 1046              		.loc 1 1507 1 view .LVU308
 1047 0096 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1048              	.LVL70:
 1049              	.L53:
1464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1050              		.loc 1 1464 7 is_stmt 1 view .LVU309
 1051 0098 AA6D     		ldr	r2, [r5, #88]
 1052 009a 8023     		movs	r3, #128
 1053 009c 9B02     		lsls	r3, r3, #10
 1054 009e 1343     		orrs	r3, r2
 1055 00a0 AB65     		str	r3, [r5, #88]
1467:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1056              		.loc 1 1467 7 view .LVU310
 1057 00a2 8023     		movs	r3, #128
 1058 00a4 5B00     		lsls	r3, r3, #1
 1059 00a6 0B60     		str	r3, [r1]
1469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1060              		.loc 1 1469 7 view .LVU311
1506:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 1061              		.loc 1 1506 10 is_stmt 0 view .LVU312
 1062 00a8 0020     		movs	r0, #0
1469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1063              		.loc 1 1469 7 view .LVU313
 1064 00aa F4E7     		b	.L51
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 133


 1065              	.L57:
1487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1066              		.loc 1 1487 7 is_stmt 1 view .LVU314
1487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1067              		.loc 1 1487 10 is_stmt 0 view .LVU315
 1068 00ac 2B6B     		ldr	r3, [r5, #48]
 1069 00ae 002B     		cmp	r3, #0
 1070 00b0 0AD1     		bne	.L59
1490:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1071              		.loc 1 1490 9 is_stmt 1 view .LVU316
 1072 00b2 AA6D     		ldr	r2, [r5, #88]
 1073 00b4 8023     		movs	r3, #128
 1074 00b6 DB00     		lsls	r3, r3, #3
 1075 00b8 1343     		orrs	r3, r2
 1076 00ba AB65     		str	r3, [r5, #88]
1493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 1077              		.loc 1 1493 9 view .LVU317
 1078 00bc EB6D     		ldr	r3, [r5, #92]
 1079 00be 0222     		movs	r2, #2
 1080 00c0 1343     		orrs	r3, r2
 1081 00c2 EB65     		str	r3, [r5, #92]
1506:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 1082              		.loc 1 1506 10 is_stmt 0 view .LVU318
 1083 00c4 0020     		movs	r0, #0
 1084 00c6 E6E7     		b	.L51
 1085              	.L59:
1500:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 1086              		.loc 1 1500 9 is_stmt 1 view .LVU319
 1087 00c8 1023     		movs	r3, #16
 1088 00ca 0B60     		str	r3, [r1]
1506:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 1089              		.loc 1 1506 10 is_stmt 0 view .LVU320
 1090 00cc 0020     		movs	r0, #0
 1091 00ce E2E7     		b	.L51
 1092              		.cfi_endproc
 1093              	.LFE447:
 1095              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 1096              		.align	1
 1097              		.global	HAL_ADC_GetValue
 1098              		.syntax unified
 1099              		.code	16
 1100              		.thumb_func
 1102              	HAL_ADC_GetValue:
 1103              	.LVL71:
 1104              	.LFB452:
1508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1509:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
1510:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group with interruption.
1511:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   Interruptions enabled in this function according to initialization
1512:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         setting : EOC (end of conversion), EOS (end of sequence),
1513:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         OVR overrun.
1514:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1515:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   To guarantee a proper reset of all interruptions once all the needed
1516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         conversions are obtained, HAL_ADC_Stop_IT() must be called to ensure
1517:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         a correct stop of the IT-based conversions.
1518:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   By default, HAL_ADC_Start_IT() does not enable the End Of Sampling
1519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         interruption. If required (e.g. in case of oversampling with trigger
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 134


1520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         mode), the user must:
1521:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          1. first clear the EOSMP flag if set with macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EO
1522:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          2. then enable the EOSMP interrupt with macro __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOSMP)
1523:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          before calling HAL_ADC_Start_IT().
1524:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
1525:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status
1526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1527:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef *hadc)
1528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
1529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1530:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
1532:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1533:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1535:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1536:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_LOCK(hadc);
1538:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1539:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Enable the ADC peripheral */
1540:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1542:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1545:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC state                                                        */
1546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1551:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1552:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1553:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC error code */
1554:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Reset all ADC error code fields */
1555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
1556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1557:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1560:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1561:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Process unlocked */
1562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1563:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Disable all interruptions before enabling the desired ones */
1567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
1568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Enable ADC end of conversion interrupt */
1570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       switch (hadc->Init.EOCSelection)
1571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
1572:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         case ADC_EOC_SEQ_CONV:
1573:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOS);
1574:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
1575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* case ADC_EOC_SINGLE_CONV */
1576:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         default:
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 135


1577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOC);
1578:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
1579:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
1580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1581:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Enable ADC overrun interrupt */
1582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* If hadc->Init.Overrun is set to ADC_OVR_DATA_PRESERVED, only then is
1583:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          ADC_IT_OVR enabled; otherwise data overwrite is considered as normal
1584:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          behavior and no CPU time is lost for a non-processed interruption */
1585:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
1586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
1587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
1588:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
1589:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1591:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1593:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* trigger event.                                                       */
1594:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Start ADC group regular conversion */
1595:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
1596:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1597:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     else
1598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1599:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else
1604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1607:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return tmp_hal_status;
1609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
1610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1611:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
1612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
1613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         case of auto_injection mode), disable interrution of
1614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         end-of-conversion, disable ADC peripheral.
1615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
1616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status.
1617:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1618:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef *hadc)
1619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
1620:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1621:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1622:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
1623:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1624:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_LOCK(hadc);
1626:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC group regular */
1628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc);
1629:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1630:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1631:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1632:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1633:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Disable ADC end of conversion interrupt for regular group */
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 136


1634:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
1635:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
1636:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1637:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
1639:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1640:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1642:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1643:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC state */
1644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1645:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
1646:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1647:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1648:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1651:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return tmp_hal_status;
1653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
1654:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1655:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
1656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group and transfer result through DMA.
1657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   Interruptions enabled in this function:
1658:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         overrun (if applicable), DMA half transfer, DMA transfer complete.
1659:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1660:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
1661:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param pData Destination Buffer address.
1662:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param Length Number of data to be transferred from ADC peripheral to memory
1663:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status.
1664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1665:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef *hadc, uint32_t *pData, uint32_t Length)
1666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
1667:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1668:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1669:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
1670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_LOCK(hadc);
1676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Specific case for first call occurrence of this function (DMA transfer */
1678:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* not activated and ADC disabled), DMA transfer must be activated        */
1679:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* with ADC disabled.                                                     */
1680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if ((hadc->Instance->CFGR1 & ADC_CFGR1_DMAEN) == 0UL)
1681:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (LL_ADC_IsEnabled(hadc->Instance) != 0UL)
1683:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
1684:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Disable ADC */
1685:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         LL_ADC_Disable(hadc->Instance);
1686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
1687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Enable ADC DMA mode */
1689:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       hadc->Instance->CFGR1 |= ADC_CFGR1_DMAEN;
1690:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 137


1691:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1692:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Enable the ADC peripheral */
1693:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1694:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1695:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC state                                                        */
1699:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1702:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1703:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1704:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1705:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC error code */
1706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Reset all ADC error code fields */
1707:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
1708:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set the DMA transfer complete callback */
1710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
1711:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1712:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set the DMA half transfer complete callback */
1713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
1714:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1715:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set the DMA error callback */
1716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
1717:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1718:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1719:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC   */
1720:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* start (in case of SW start):                                         */
1721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1722:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Clear regular group conversion flag and overrun flag */
1723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC           */
1724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* operations)                                                          */
1725:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1726:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1727:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Process unlocked */
1728:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1729:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1730:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1731:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1732:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Enable ADC overrun interrupt */
1733:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
1734:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1735:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Start the DMA channel */
1736:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       tmp_hal_status = HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)
1737:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1738:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1739:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1740:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* trigger event.                                                       */
1742:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Start ADC group regular conversion */
1743:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
1744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1745:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1746:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else
1747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 138


1748:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1749:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1751:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return tmp_hal_status;
1752:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
1753:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1754:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
1755:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
1756:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable
1757:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         ADC peripheral.
1758:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
1759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status.
1760:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1761:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef *hadc)
1762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
1763:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1764:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1765:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
1766:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1767:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1768:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_LOCK(hadc);
1769:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* 1. Stop potential ADC group regular conversion on going */
1771:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc);
1772:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1773:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1774:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1775:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1776:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop       */
1777:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* while DMA transfer is on going)                                        */
1778:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (hadc->DMA_Handle->State == HAL_DMA_STATE_BUSY)
1779:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1780:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
1781:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1782:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Check if DMA channel effectively disabled */
1783:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (tmp_hal_status != HAL_OK)
1784:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
1785:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Update ADC state machine to error */
1786:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
1787:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
1788:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1789:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1790:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
1791:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
1792:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1793:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1794:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
1795:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* to keep in memory a potential failing status.                          */
1796:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1797:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1798:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       tmp_hal_status = ADC_Disable(hadc);
1799:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1800:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     else
1801:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1802:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (void)ADC_Disable(hadc);
1803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1804:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 139


1805:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1806:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1807:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1808:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC state */
1809:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1810:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
1811:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1813:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1814:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Disable ADC DMA (ADC DMA configuration of continuous requests is kept) */
1815:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN);
1816:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1817:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1818:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1819:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1820:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return tmp_hal_status;
1821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
1822:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1823:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
1824:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Get ADC regular group conversion result.
1825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   Reading register DR automatically clears ADC flag EOC
1826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         (ADC group regular end of unitary conversion).
1827:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   This function does not clear ADC flag EOS
1828:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         (ADC group regular end of sequence conversion).
1829:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         Occurrence of flag EOS rising:
1830:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          - If sequencer is composed of 1 rank, flag EOS is equivalent
1831:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *            to flag EOC.
1832:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          - If sequencer is composed of several ranks, during the scan
1833:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *            sequence flag EOC only is raised, at the end of the scan sequence
1834:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *            both flags EOC and EOS are raised.
1835:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         To clear this flag, either use function:
1836:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
1837:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         model polling: @ref HAL_ADC_PollForConversion()
1838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_EOS).
1839:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
1840:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval ADC group regular conversion data
1841:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1842:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** uint32_t HAL_ADC_GetValue(const ADC_HandleTypeDef *hadc)
1843:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
 1105              		.loc 1 1843 1 is_stmt 1 view -0
 1106              		.cfi_startproc
 1107              		@ args = 0, pretend = 0, frame = 0
 1108              		@ frame_needed = 0, uses_anonymous_args = 0
 1109              		@ link register save eliminated.
1844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
1845:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1110              		.loc 1 1845 3 view .LVU322
1846:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1847:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Note: EOC flag is not cleared here by software because automatically     */
1848:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*       cleared by hardware when reading register DR.                      */
1849:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1850:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Return ADC converted value */
1851:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return hadc->Instance->DR;
 1111              		.loc 1 1851 3 view .LVU323
 1112              		.loc 1 1851 14 is_stmt 0 view .LVU324
 1113 0000 0368     		ldr	r3, [r0]
 1114              		.loc 1 1851 24 view .LVU325
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 140


 1115 0002 186C     		ldr	r0, [r3, #64]
 1116              	.LVL72:
1852:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 1117              		.loc 1 1852 1 view .LVU326
 1118              		@ sp needed
 1119 0004 7047     		bx	lr
 1120              		.cfi_endproc
 1121              	.LFE452:
 1123              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 1124              		.align	1
 1125              		.weak	HAL_ADC_ConvCpltCallback
 1126              		.syntax unified
 1127              		.code	16
 1128              		.thumb_func
 1130              	HAL_ADC_ConvCpltCallback:
 1131              	.LVL73:
 1132              	.LFB454:
1853:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1854:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
1855:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Handle ADC interrupt request.
1856:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
1857:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval None
1858:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1859:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef *hadc)
1860:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
1861:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
1862:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_isr = hadc->Instance->ISR;
1863:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
1864:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1865:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
1866:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
1868:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1869:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* ========== Check End of Sampling flag for ADC group regular ========== */
1870:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_EOSMP) == ADC_FLAG_EOSMP) && ((tmp_ier & ADC_IT_EOSMP) == ADC_IT_EOSMP))
1871:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1872:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Update state machine on end of sampling status if not in error state */
1873:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
1874:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC state */
1876:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
1877:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1878:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1879:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* End Of Sampling callback */
1880:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1881:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->EndOfSamplingCallback(hadc);
1882:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #else
1883:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     HAL_ADCEx_EndOfSamplingCallback(hadc);
1884:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1885:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1886:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Clear regular group conversion flag */
1887:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
1888:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1889:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1890:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* ====== Check ADC group regular end of unitary conversion sequence conversions ===== */
1891:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if ((((tmp_isr & ADC_FLAG_EOC) == ADC_FLAG_EOC) && ((tmp_ier & ADC_IT_EOC) == ADC_IT_EOC)) ||
1892:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 141


1893:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1894:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
1895:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
1896:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1897:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC state */
1898:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
1899:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1900:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
1902:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
1903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* to disable interruption.                                               */
1904:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if ((LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
1905:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == DISABLE)
1906:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        )
1907:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1908:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* If End of Sequence is reached, disable interrupts */
1909:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
1910:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
1911:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit           */
1912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* ADSTART==0 (no conversion on going)                                */
1913:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1914:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
1915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Disable ADC end of single conversion interrupt on group regular */
1916:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Note: Overrun interrupt was enabled with EOC interrupt in        */
1917:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* HAL_Start_IT(), but is not disabled here because can be used     */
1918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* by overrun IRQ process below.                                    */
1919:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
1920:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Set ADC state */
1922:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State,
1923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                             HAL_ADC_STATE_REG_BUSY,
1924:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                             HAL_ADC_STATE_READY);
1925:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
1926:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         else
1927:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
1928:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Change ADC state to error state */
1929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1930:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1931:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
1932:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
1933:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
1934:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
1935:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1936:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1937:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Conversion complete callback */
1938:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Note: Into callback function "HAL_ADC_ConvCpltCallback()",             */
1939:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*       to determine if conversion has been triggered from EOC or EOS,   */
1940:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*       possibility to use:                                              */
1941:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*        " if ( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_EOS)) "               */
1942:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
1944:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #else
1945:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
1946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1947:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1948:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Clear regular group conversion flag */
1949:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Note: in case of overrun set to ADC_OVR_DATA_PRESERVED, end of         */
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 142


1950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*       conversion flags clear induces the release of the preserved data.*/
1951:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*       Therefore, if the preserved data value is needed, it must be     */
1952:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*       read preliminarily into HAL_ADC_ConvCpltCallback().              */
1953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
1954:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1955:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1956:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* ========== Check Analog watchdog 1 flag ========== */
1957:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD1) == ADC_FLAG_AWD1) && ((tmp_ier & ADC_IT_AWD1) == ADC_IT_AWD1))
1958:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1959:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Set ADC state */
1960:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
1961:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1962:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Level out of window 1 callback */
1963:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1964:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->LevelOutOfWindowCallback(hadc);
1965:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #else
1966:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     HAL_ADC_LevelOutOfWindowCallback(hadc);
1967:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1968:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1969:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
1970:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
1971:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1972:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1973:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* ========== Check analog watchdog 2 flag ========== */
1974:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD2) == ADC_FLAG_AWD2) && ((tmp_ier & ADC_IT_AWD2) == ADC_IT_AWD2))
1975:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1976:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Set ADC state */
1977:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
1978:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Level out of window 2 callback */
1980:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1981:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback(hadc);
1982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #else
1983:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow2Callback(hadc);
1984:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1985:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
1987:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
1988:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1990:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* ========== Check analog watchdog 3 flag ========== */
1991:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD3) == ADC_FLAG_AWD3) && ((tmp_ier & ADC_IT_AWD3) == ADC_IT_AWD3))
1992:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1993:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Set ADC state */
1994:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
1995:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1996:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Level out of window 3 callback */
1997:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1998:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback(hadc);
1999:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #else
2000:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow3Callback(hadc);
2001:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2002:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2003:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2004:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
2005:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2006:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 143


2007:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* ========== Check Overrun flag ========== */
2008:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_OVR) == ADC_FLAG_OVR) && ((tmp_ier & ADC_IT_OVR) == ADC_IT_OVR))
2009:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2010:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* If overrun is set to overwrite previous data (default setting),        */
2011:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* overrun event is not considered as an error.                           */
2012:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* (cf ref manual "Managing conversions without using the DMA and without */
2013:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* overrun ")                                                             */
2014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Exception for usage with DMA overrun event always considered as an     */
2015:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* error.                                                                 */
2016:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
2017:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2018:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       overrun_error = 1UL;
2019:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2020:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     else
2021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2022:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Check DMA configuration */
2023:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (LL_ADC_REG_GetDMATransfer(hadc->Instance) != LL_ADC_REG_DMA_TRANSFER_NONE)
2024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2025:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         overrun_error = 1UL;
2026:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2027:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2028:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2029:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (overrun_error == 1UL)
2030:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2031:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Change ADC state to error state */
2032:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
2033:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2034:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC error code to overrun */
2035:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
2036:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2037:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Error callback */
2038:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Note: In case of overrun, ADC conversion data is preserved until     */
2039:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       flag OVR is reset.                                             */
2040:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       Therefore, old ADC conversion data can be retrieved in         */
2041:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       function "HAL_ADC_ErrorCallback()".                            */
2042:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2043:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
2044:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #else
2045:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
2046:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2047:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2048:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2049:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Clear ADC overrun flag */
2050:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
2051:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2052:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2053:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* ========== Check channel configuration ready flag ========== */
2054:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_CCRDY) == ADC_FLAG_CCRDY) && ((tmp_ier & ADC_IT_CCRDY) == ADC_IT_CCRDY))
2055:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2056:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Channel configuration ready callback */
2057:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     HAL_ADCEx_ChannelConfigReadyCallback(hadc);
2058:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2059:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2060:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_CCRDY);
2061:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2062:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
2063:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 144


2064:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2065:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Conversion complete callback in non-blocking mode.
2066:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
2067:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval None
2068:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2069:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc)
2070:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
 1133              		.loc 1 2070 1 is_stmt 1 view -0
 1134              		.cfi_startproc
 1135              		@ args = 0, pretend = 0, frame = 0
 1136              		@ frame_needed = 0, uses_anonymous_args = 0
 1137              		@ link register save eliminated.
2071:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2072:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   UNUSED(hadc);
 1138              		.loc 1 2072 3 view .LVU328
2073:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2074:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2075:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             function HAL_ADC_ConvCpltCallback must be implemented in the user file.
2076:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****    */
2077:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 1139              		.loc 1 2077 1 is_stmt 0 view .LVU329
 1140              		@ sp needed
 1141 0000 7047     		bx	lr
 1142              		.cfi_endproc
 1143              	.LFE454:
 1145              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 1146              		.align	1
 1147              		.weak	HAL_ADC_ConvHalfCpltCallback
 1148              		.syntax unified
 1149              		.code	16
 1150              		.thumb_func
 1152              	HAL_ADC_ConvHalfCpltCallback:
 1153              	.LVL74:
 1154              	.LFB455:
2078:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2079:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2080:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Conversion DMA half-transfer callback in non-blocking mode.
2081:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
2082:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval None
2083:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2084:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef *hadc)
2085:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
 1155              		.loc 1 2085 1 is_stmt 1 view -0
 1156              		.cfi_startproc
 1157              		@ args = 0, pretend = 0, frame = 0
 1158              		@ frame_needed = 0, uses_anonymous_args = 0
 1159              		@ link register save eliminated.
2086:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2087:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   UNUSED(hadc);
 1160              		.loc 1 2087 3 view .LVU331
2088:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2089:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2090:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             function HAL_ADC_ConvHalfCpltCallback must be implemented in the user file.
2091:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2092:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 1161              		.loc 1 2092 1 is_stmt 0 view .LVU332
 1162              		@ sp needed
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 145


 1163 0000 7047     		bx	lr
 1164              		.cfi_endproc
 1165              	.LFE455:
 1167              		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 1168              		.align	1
 1169              		.syntax unified
 1170              		.code	16
 1171              		.thumb_func
 1173              	ADC_DMAHalfConvCplt:
 1174              	.LVL75:
 1175              	.LFB466:
2093:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2094:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2095:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Analog watchdog 1 callback in non-blocking mode.
2096:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
2097:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval None
2098:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2099:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef *hadc)
2100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
2101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   UNUSED(hadc);
2103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             function HAL_ADC_LevelOutOfWindowCallback must be implemented in the user file.
2106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
2108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  ADC error callback in non-blocking mode
2111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         (ADC conversion with interruption or transfer by DMA).
2112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   In case of error due to overrun when using ADC with DMA transfer
2113:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         (HAL ADC handle parameter "ErrorCode" to state "HAL_ADC_ERROR_OVR"):
2114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         - Reinitialize the DMA using function "HAL_ADC_Stop_DMA()".
2115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         - If needed, restart a new ADC conversion using function
2116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *           "HAL_ADC_Start_DMA()"
2117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *           (this function is also clearing overrun flag)
2118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
2119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval None
2120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
2122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
2123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   UNUSED(hadc);
2125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             function HAL_ADC_ErrorCallback must be implemented in the user file.
2128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
2130:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @}
2133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
2136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief    Peripheral Control functions
2137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *
2138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** @verbatim
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 146


2139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****  ===============================================================================
2140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****              ##### Peripheral Control functions #####
2141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****  ===============================================================================
2142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     [..]  This section provides functions allowing to:
2143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Configure channels on regular group
2144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Configure the analog watchdog
2145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** @endverbatim
2147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @{
2148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Configure a channel to be assigned to ADC group regular.
2152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   In case of usage of internal measurement channels:
2153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         Vbat/VrefInt/TempSensor.
2154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         These internal paths can be disabled using function
2155:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         HAL_ADC_DeInit().
2156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
2157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         This function initializes channel into ADC group regular,
2158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         following calls to this function can be used to reconfigure
2159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         some parameters of structure "ADC_ChannelConfTypeDef" on the fly,
2160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         without resetting the ADC.
2161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state:
2162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         Refer to comments of structure "ADC_ChannelConfTypeDef".
2163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
2164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param pConfig Structure of ADC channel assigned to ADC group regular.
2165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status
2166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef *hadc, const ADC_ChannelConfTypeDef *pCon
2168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
2169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
2171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
2172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
2174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(pConfig->Channel));
2176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLING_TIME_COMMON(pConfig->SamplingTime));
2177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if ((hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED)       ||
2179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
2180:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_RANK_SEQ_FIXED(pConfig->Rank));
2182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else
2184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
2186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_RANK(pConfig->Rank));
2188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_LOCK(hadc);
2191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
2193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* conversion on going on regular group:                                    */
2195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*  - Channel number                                                        */
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 147


2196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*  - Channel sampling time                                                 */
2197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*  - Management of internal measurement channels: VrefInt/TempSensor/Vbat  */
2198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Configure channel: depending on rank setting, add it or remove it from */
2201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* ADC sequencer.                                                         */
2202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* If sequencer set to not fully configurable with channel rank set to    */
2203:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* none, remove the channel from the sequencer.                           */
2204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Otherwise (sequencer set to fully configurable or to to not fully      */
2205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* configurable with channel rank to be set), configure the selected      */
2206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* channel.                                                               */
2207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (pConfig->Rank != ADC_RANK_NONE)
2208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Regular sequence configuration */
2210:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Note: ADC channel configuration requires few ADC clock cycles        */
2211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       to be ready. Processing of ADC settings in this function       */
2212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       induce that a specific wait time is not necessary.             */
2213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       For more details on ADC channel configuration ready,           */
2214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       refer to function "LL_ADC_IsActiveFlag_CCRDY()".               */
2215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if ((hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED)       ||
2216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
2217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Sequencer set to not fully configurable:                           */
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Set the channel by enabling the corresponding bitfield.            */
2220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         LL_ADC_REG_SetSequencerChAdd(hadc->Instance, pConfig->Channel);
2221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2222:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       else
2223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Sequencer set to fully configurable:                               */
2225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Set the channel by entering it into the selected rank.             */
2226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Memorize the channel set into variable in HAL ADC handle */
2228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         MODIFY_REG(hadc->ADCGroupRegularSequencerRanks,
2229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
2230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfig->Channel) << (pConfig->Rank & 0x1FUL));
2231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* If the selected rank is below ADC group regular sequencer length,  */
2233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* apply the configuration in ADC register.                           */
2234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Note: Otherwise, configuration is not applied.                     */
2235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /*       To apply it, parameter'NbrOfConversion' must be increased.   */
2236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if (((pConfig->Rank >> 2UL) + 1UL) <= hadc->Init.NbrOfConversion)
2237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_REG_SetSequencerRanks(hadc->Instance, pConfig->Rank, pConfig->Channel);
2239:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set sampling time of the selected ADC channel */
2243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       LL_ADC_SetChannelSamplingTime(hadc->Instance, pConfig->Channel, pConfig->SamplingTime);
2244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2245:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Management of internal measurement channels: VrefInt/TempSensor/Vbat */
2246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* internal measurement paths enable: If internal channel selected,     */
2247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* enable dedicated internal buffers and path.                          */
2248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Note: these internal measurement paths can be disabled using         */
2249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       HAL_ADC_DeInit() or removing the channel from sequencer with   */
2250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       channel configuration parameter "Rank".                        */
2251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (__LL_ADC_IS_CHANNEL_INTERNAL(pConfig->Channel))
2252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 148


2253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc-
2254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* If the requested internal measurement path has already been enabled,   */
2256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* bypass the configuration processing.                                   */
2257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if ((pConfig->Channel == ADC_CHANNEL_TEMPSENSOR) &&
2258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
2259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_chan
2262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Delay for temperature sensor stabilization time */
2264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Wait loop initialization and execution */
2265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Note: Variable divided by 2 to compensate partially              */
2266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /*       CPU processing cycles, scaling in us split to not          */
2267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /*       exceed 32 bits register capacity and handle low frequency. */
2268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * ((SystemCoreClock / (100000
2269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           while (wait_loop_index != 0UL)
2270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           {
2271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             wait_loop_index--;
2272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
2273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         else if ((pConfig->Channel == ADC_CHANNEL_VBAT)
2275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VBAT) == 0UL))
2276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
2279:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         else if ((pConfig->Channel == ADC_CHANNEL_VREFINT) &&
2281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
2282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2284:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel
2285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         else
2287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2288:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* nothing to do */
2289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2292:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     else
2293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Regular sequencer configuration */
2295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Note: Case of sequencer set to fully configurable:                   */
2296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       Sequencer rank cannot be disabled, only affected to            */
2297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       another channel.                                               */
2298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       To remove a rank, use parameter 'NbrOfConversion".             */
2299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if ((hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED)       ||
2300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
2301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Sequencer set to not fully configurable:                           */
2303:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Reset the channel by disabling the corresponding bitfield.         */
2304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         LL_ADC_REG_SetSequencerChRem(hadc->Instance, pConfig->Channel);
2305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Management of internal measurement channels: Vbat/VrefInt/TempSensor.  */
2308:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* If internal channel selected, enable dedicated internal buffers and    */
2309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* paths.                                                                 */
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 149


2310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (__LL_ADC_IS_CHANNEL_INTERNAL(pConfig->Channel))
2311:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc-
2313:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if (pConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
2315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2316:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                          ~LL_ADC_PATH_INTERNAL_TEMPSENSOR & tmp_config_internal_cha
2318:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2319:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         else if (pConfig->Channel == ADC_CHANNEL_VBAT)
2320:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2321:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2322:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                          ~LL_ADC_PATH_INTERNAL_VBAT & tmp_config_internal_channel);
2323:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2324:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         else if (pConfig->Channel == ADC_CHANNEL_VREFINT)
2325:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2326:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2327:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                          ~LL_ADC_PATH_INTERNAL_VREFINT & tmp_config_internal_channe
2328:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         else
2330:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* nothing to do */
2332:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2334:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* If a conversion is on going on regular group, no update on regular       */
2338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* channel could be done on neither of the channel configuration structure  */
2339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* parameters.                                                              */
2340:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else
2341:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Update ADC state machine to error */
2343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
2346:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return tmp_hal_status;
2351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
2352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2354:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Configure the analog watchdog.
2355:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
2356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         This function initializes the selected analog watchdog, successive
2357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         calls to this function can be used to reconfigure some parameters
2358:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         of structure "ADC_AnalogWDGConfTypeDef" on the fly, without resetting
2359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         the ADC.
2360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
2361:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         For parameters constraints, see comments of structure
2362:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         "ADC_AnalogWDGConfTypeDef".
2363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   On this STM32 series, analog watchdog thresholds can be modified
2364:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         while ADC conversion is on going.
2365:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         In this case, some constraints must be taken into account:
2366:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         the programmed threshold values are effective from the next
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 150


2367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         ADC EOC (end of unitary conversion).
2368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         Considering that registers write delay may happen due to
2369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         bus activity, this might cause an uncertainty on the
2370:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         effective timing of the new programmed threshold values.
2371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
2372:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param pAnalogWDGConfig Structure of ADC analog watchdog configuration
2373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status
2374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef *hadc, const ADC_AnalogWDGConfTypeDef *
2376:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
2377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2378:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_awd_high_threshold_shifted;
2379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_awd_low_threshold_shifted;
2380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t backup_setting_adc_enable_state = 0UL;
2381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
2383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(pAnalogWDGConfig->WatchdogNumber));
2385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(pAnalogWDGConfig->WatchdogMode));
2386:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(pAnalogWDGConfig->ITMode));
2387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (pAnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REG)
2389:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(pAnalogWDGConfig->Channel));
2391:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2392:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2393:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Verify thresholds range */
2394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (hadc->Init.OversamplingMode == ENABLE)
2395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Case of oversampling enabled: depending on ratio and shift configuration,
2397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        analog watchdog thresholds can be higher than ADC resolution.
2398:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        Verify if thresholds are within maximum thresholds range. */
2399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, pAnalogWDGConfig->HighThreshold));
2400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, pAnalogWDGConfig->LowThreshold));
2401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else
2403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2404:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Verify if thresholds are within the selected ADC resolution */
2405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), pAnalogWDGConfig->HighThreshold));
2406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), pAnalogWDGConfig->LowThreshold));
2407:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_LOCK(hadc);
2410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
2412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* conversion on going on ADC group regular:                                */
2414:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*  - Analog watchdog channels                                              */
2415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Analog watchdog configuration */
2418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (pAnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_1)
2419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Constraint of ADC on this STM32 series: ADC must be disable
2421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          to modify bitfields of register ADC_CFGR1 */
2422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (LL_ADC_IsEnabled(hadc->Instance) != 0UL)
2423:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 151


2424:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         backup_setting_adc_enable_state = 1UL;
2425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         tmp_hal_status = ADC_Disable(hadc);
2426:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2427:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2428:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Configuration of analog watchdog:                                    */
2429:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*  - Set the analog watchdog enable mode: one or overall group of      */
2430:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*    channels.                                                         */
2431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       switch (pAnalogWDGConfig->WatchdogMode)
2432:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2433:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
2434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1,
2435:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                           __LL_ADC_ANALOGWD_CHANNEL_GROUP(pAnalogWDGConfig->Channel
2436:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                                                           LL_ADC_GROUP_REGULAR));
2437:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
2438:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2439:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
2440:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_REG)
2441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
2442:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2443:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
2444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_DISABLE);
2445:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
2446:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2448:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (backup_setting_adc_enable_state == 1UL)
2449:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if (tmp_hal_status == HAL_OK)
2451:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           tmp_hal_status = ADC_Enable(hadc);
2453:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2455:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2456:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Update state, clear previous result related to AWD1 */
2457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD1);
2458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2459:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Clear flag ADC analog watchdog */
2460:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
2461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
2462:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* (in case left enabled by previous ADC operations).                 */
2463:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       LL_ADC_ClearFlag_AWD1(hadc->Instance);
2464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2465:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Configure ADC analog watchdog interrupt */
2466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (pAnalogWDGConfig->ITMode == ENABLE)
2467:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2468:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         LL_ADC_EnableIT_AWD1(hadc->Instance);
2469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2470:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       else
2471:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         LL_ADC_DisableIT_AWD1(hadc->Instance);
2473:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Case of ADC_ANALOGWATCHDOG_2 or ADC_ANALOGWATCHDOG_3 */
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     else
2477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       switch (pAnalogWDGConfig->WatchdogMode)
2479:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 152


2481:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Update AWD by bitfield to keep the possibility to monitor        */
2482:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* several channels by successive calls of this function.           */
2483:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           if (pAnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
2484:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           {
2485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD2CR, (1UL << __LL_ADC_CHANNEL_TO_DECIMAL_NB(pAnalogWDGConfig
2486:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
2487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           else
2488:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           {
2489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD3CR, (1UL << __LL_ADC_CHANNEL_TO_DECIMAL_NB(pAnalogWDGConfig
2490:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
2491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
2492:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
2494:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance,
2495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                           pAnalogWDGConfig->WatchdogNumber,
2496:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                           LL_ADC_AWD_ALL_CHANNELS_REG);
2497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
2498:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
2500:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, pAnalogWDGConfig->WatchdogNumber, LL_ADC_
2501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
2502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (pAnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
2505:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2506:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Update state, clear previous result related to AWD2 */
2507:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD2);
2508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2509:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
2510:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
2511:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
2512:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
2513:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         LL_ADC_ClearFlag_AWD2(hadc->Instance);
2514:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2515:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
2516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if (pAnalogWDGConfig->ITMode == ENABLE)
2517:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2518:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_EnableIT_AWD2(hadc->Instance);
2519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         else
2521:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2522:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_DisableIT_AWD2(hadc->Instance);
2523:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2524:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2525:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* (pAnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_3) */
2526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       else
2527:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Update state, clear previous result related to AWD3 */
2529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD3);
2530:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
2532:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
2533:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
2534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
2535:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         LL_ADC_ClearFlag_AWD3(hadc->Instance);
2536:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 153


2538:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if (pAnalogWDGConfig->ITMode == ENABLE)
2539:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2540:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_EnableIT_AWD3(hadc->Instance);
2541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2542:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         else
2543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_DisableIT_AWD3(hadc->Instance);
2545:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2551:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Analog watchdog thresholds configuration */
2552:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (pAnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_1)
2553:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2554:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Shift the offset with respect to the selected ADC resolution:        */
2555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Thresholds have to be left-aligned on bit 11, the LSB (right bits)   */
2556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* are set to 0.                                                        */
2557:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_awd_high_threshold_shifted = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, pAnalogWDGConfig->Hig
2558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_awd_low_threshold_shifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, pAnalogWDGConfig->Low
2559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2560:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Case of ADC_ANALOGWATCHDOG_2 and ADC_ANALOGWATCHDOG_3 */
2561:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else
2562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2563:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* No need to shift the offset with respect to the selected ADC resolution: */
2564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Thresholds have to be left-aligned on bit 11, the LSB (right bits)   */
2565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* are set to 0.                                                        */
2566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_awd_high_threshold_shifted = pAnalogWDGConfig->HighThreshold;
2567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_awd_low_threshold_shifted  = pAnalogWDGConfig->LowThreshold;
2568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Set ADC analog watchdog thresholds value of both thresholds high and low */
2571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   LL_ADC_ConfigAnalogWDThresholds(hadc->Instance, pAnalogWDGConfig->WatchdogNumber, tmp_awd_high_th
2572:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                   tmp_awd_low_threshold_shifted);
2573:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2574:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2576:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return tmp_hal_status;
2577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
2578:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2579:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2581:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @}
2582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2583:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2584:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 Peripheral State functions
2585:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *  @brief    ADC Peripheral State functions
2586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *
2587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** @verbatim
2588:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****  ===============================================================================
2589:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             ##### Peripheral state and errors functions #####
2590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****  ===============================================================================
2591:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     [..]
2592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     This subsection provides functions to get in run-time the status of the
2593:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     peripheral.
2594:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Check the ADC state
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 154


2595:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Check the ADC error code
2596:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2597:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** @endverbatim
2598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @{
2599:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Return the ADC handle state.
2603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   ADC state machine is managed by bitfields, ADC status must be
2604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         compared with states bits.
2605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         For example:
2606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_REG_BUSY) != 0UL) "
2607:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "
2608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
2609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval ADC handle state (bitfield on 32 bits)
2610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2611:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** uint32_t HAL_ADC_GetState(const ADC_HandleTypeDef *hadc)
2612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
2613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
2614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Return ADC handle state */
2617:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return hadc->State;
2618:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
2619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2620:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2621:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Return the ADC error code.
2622:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
2623:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval ADC error code (bitfield on 32 bits)
2624:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** uint32_t HAL_ADC_GetError(const ADC_HandleTypeDef *hadc)
2626:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
2627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
2628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2629:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2630:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return hadc->ErrorCode;
2631:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
2632:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2633:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2634:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @}
2635:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2636:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2637:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @}
2639:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2640:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
2642:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @{
2643:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2645:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2646:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Stop ADC conversion.
2647:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
2648:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         stopped to disable the ADC.
2649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param  hadc ADC handle
2650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status.
2651:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 155


2652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef ADC_ConversionStop(ADC_HandleTypeDef *hadc)
2653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
2654:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
2655:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
2657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2658:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2659:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Verification if ADC is not already stopped on regular group to bypass    */
2660:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* this function if not needed.                                             */
2661:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) != 0UL)
2662:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2663:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Stop potential conversion on going on regular group */
2664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Software is allowed to set ADSTP only when ADSTART=1 and ADDIS=0 */
2665:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (LL_ADC_IsDisableOngoing(hadc->Instance) == 0UL)
2666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2667:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Stop ADC group regular conversion */
2668:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       LL_ADC_REG_StopConversion(hadc->Instance);
2669:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Wait for conversion effectively stopped */
2672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Get tick count */
2673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tickstart = HAL_GetTick();
2674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     while ((hadc->Instance->CR & ADC_CR_ADSTART) != 0UL)
2676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
2678:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2679:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
2680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if ((hadc->Instance->CR & ADC_CR_ADSTART) != 0UL)
2681:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Update ADC state machine to error */
2683:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2684:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2685:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
2686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           return HAL_ERROR;
2689:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2690:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2691:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2692:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2693:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2694:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2695:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Return HAL status */
2696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return HAL_OK;
2697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
2698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2699:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Enable the selected ADC.
2701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC must be disabled
2702:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         and voltage regulator must be enabled (done into HAL_ADC_Init()).
2703:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
2704:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status.
2705:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef *hadc)
2707:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
2708:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 156


2709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
2710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2711:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
2712:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* enabling phase not yet completed: flag ADC ready not yet set).           */
2713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
2714:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* causes: ADC clock not running, ...).                                     */
2715:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
2716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2717:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Check if conditions to enable the ADC are fulfilled */
2718:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_ADCAL | ADC_CR_ADSTP | ADC_CR_ADSTART | ADC_CR_ADDIS | ADC_CR
2719:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2720:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Update ADC state machine to error */
2721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2722:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
2724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2725:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2726:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       return HAL_ERROR;
2727:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2728:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2729:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Enable the ADC peripheral */
2730:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     LL_ADC_Enable(hadc->Instance);
2731:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2732:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if ((LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) & LL_ADC_PATH_INT
2733:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         != 0UL)
2734:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2735:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Delay for temperature sensor buffer stabilization time */
2736:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Wait loop initialization and execution */
2737:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Note: Variable divided by 2 to compensate partially              */
2738:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       CPU processing cycles, scaling in us split to not          */
2739:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       exceed 32 bits register capacity and handle low frequency. */
2740:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US / 10UL)
2741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                          * ((SystemCoreClock / (100000UL * 2UL)) + 1UL));
2742:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       while (wait_loop_index != 0UL)
2743:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         wait_loop_index--;
2745:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2746:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2748:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* If low power mode AutoPowerOff is enabled, power-on/off phases are     */
2749:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* performed automatically by hardware and flag ADC ready is not set.     */
2750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (hadc->Init.LowPowerAutoPowerOff != ENABLE)
2751:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2752:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Wait for ADC effectively enabled */
2753:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       tickstart = HAL_GetTick();
2754:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2755:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       while (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
2756:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2757:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /*  If ADEN bit is set less than 4 ADC clock cycles after the ADCAL bit
2758:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             has been cleared (after a calibration), ADEN bit is reset by the
2759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             calibration logic.
2760:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             The workaround is to continue setting ADEN until ADRDY is becomes 1.
2761:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             Additionally, ADC_ENABLE_TIMEOUT is defined to encompass this
2762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             4 ADC clock cycle duration */
2763:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Note: Test of ADC enabled required due to hardware constraint to     */
2764:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /*       not enable ADC if already enabled.                             */
2765:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 157


2766:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2767:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_Enable(hadc->Instance);
2768:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2769:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if ((HAL_GetTick() - tickstart) > ADC_ENABLE_TIMEOUT)
2771:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2772:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* New check to avoid false timeout detection in case of preemption */
2773:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
2774:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           {
2775:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             /* Update ADC state machine to error */
2776:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2777:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2778:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             /* Set ADC error code to ADC peripheral internal error */
2779:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2780:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2781:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             return HAL_ERROR;
2782:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
2783:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2784:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2785:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2786:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2787:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2788:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Return HAL status */
2789:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return HAL_OK;
2790:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
2791:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2792:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2793:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Disable the selected ADC.
2794:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
2795:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         stopped.
2796:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
2797:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status.
2798:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2799:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef ADC_Disable(ADC_HandleTypeDef *hadc)
2800:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
2801:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
2802:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   const uint32_t tmp_adc_is_disable_on_going = LL_ADC_IsDisableOngoing(hadc->Instance);
2803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2804:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Verification if ADC is not already disabled:                             */
2805:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Note: forbidden to disable ADC (set bit ADC_CR_ADDIS) if ADC is already  */
2806:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*       disabled.                                                          */
2807:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if ((LL_ADC_IsEnabled(hadc->Instance) != 0UL)
2808:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
2809:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      )
2810:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2811:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Check if conditions to disable the ADC are fulfilled */
2812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_ADSTART | ADC_CR_ADEN)) == ADC_CR_ADEN)
2813:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2814:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Disable the ADC peripheral */
2815:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       LL_ADC_Disable(hadc->Instance);
2816:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOSMP | ADC_FLAG_RDY));
2817:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2818:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     else
2819:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2820:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Update ADC state machine to error */
2821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2822:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 158


2823:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
2824:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       return HAL_ERROR;
2827:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2828:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2829:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Wait for ADC effectively disabled */
2830:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Get tick count */
2831:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tickstart = HAL_GetTick();
2832:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2833:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     while ((hadc->Instance->CR & ADC_CR_ADEN) != 0UL)
2834:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2835:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_DISABLE_TIMEOUT)
2836:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2837:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
2838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if ((hadc->Instance->CR & ADC_CR_ADEN) != 0UL)
2839:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2840:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Update ADC state machine to error */
2841:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2842:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2843:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
2844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2845:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2846:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           return HAL_ERROR;
2847:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2848:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2849:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2850:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2851:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2852:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Return HAL status */
2853:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return HAL_OK;
2854:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
2855:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2856:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2857:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  DMA transfer complete callback.
2858:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
2859:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval None
2860:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2861:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
2862:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
2863:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
2864:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2865:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2866:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Update state machine on conversion status if not in error state */
2867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if ((hadc->State & (HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA)) == 0UL)
2868:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2869:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Set ADC state */
2870:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
2871:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2872:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
2873:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
2874:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* to disable interruption.                                               */
2875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if ((LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
2876:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == DISABLE)
2877:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        )
2878:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2879:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* If End of Sequence is reached, disable interrupts */
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 159


2880:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
2881:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2882:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit           */
2883:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* ADSTART==0 (no conversion on going)                                */
2884:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2885:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2886:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Disable ADC end of single conversion interrupt on group regular */
2887:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Note: Overrun interrupt was enabled with EOC interrupt in        */
2888:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* HAL_Start_IT(), but is not disabled here because can be used     */
2889:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* by overrun IRQ process below.                                    */
2890:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
2891:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2892:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Set ADC state */
2893:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State,
2894:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                             HAL_ADC_STATE_REG_BUSY,
2895:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                             HAL_ADC_STATE_READY);
2896:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2897:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         else
2898:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2899:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Change ADC state to error state */
2900:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2902:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
2903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2904:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2905:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2906:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2907:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2908:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Conversion complete callback */
2909:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2910:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
2911:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #else
2912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
2913:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2914:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else /* DMA and-or internal error occurred */
2916:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2917:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) != 0UL)
2918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2919:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Call HAL ADC Error Callback function */
2920:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
2922:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #else
2923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
2924:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2925:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2926:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     else
2927:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2928:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Call ADC DMA error callback */
2929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       hadc->DMA_Handle->XferErrorCallback(hdma);
2930:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2931:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2932:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
2933:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2934:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2935:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  DMA half transfer complete callback.
2936:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 160


2937:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval None
2938:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2939:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)
2940:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
 1176              		.loc 1 2940 1 is_stmt 1 view -0
 1177              		.cfi_startproc
 1178              		@ args = 0, pretend = 0, frame = 0
 1179              		@ frame_needed = 0, uses_anonymous_args = 0
 1180              		.loc 1 2940 1 is_stmt 0 view .LVU334
 1181 0000 10B5     		push	{r4, lr}
 1182              	.LCFI4:
 1183              		.cfi_def_cfa_offset 8
 1184              		.cfi_offset 4, -8
 1185              		.cfi_offset 14, -4
2941:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
2942:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 1186              		.loc 1 2942 3 is_stmt 1 view .LVU335
 1187              		.loc 1 2942 22 is_stmt 0 view .LVU336
 1188 0002 806A     		ldr	r0, [r0, #40]
 1189              	.LVL76:
2943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2944:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Half conversion callback */
2945:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->ConvHalfCpltCallback(hadc);
2947:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #else
2948:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_ADC_ConvHalfCpltCallback(hadc);
 1190              		.loc 1 2948 3 is_stmt 1 view .LVU337
 1191 0004 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
 1192              	.LVL77:
2949:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 1193              		.loc 1 2950 1 is_stmt 0 view .LVU338
 1194              		@ sp needed
 1195 0008 10BD     		pop	{r4, pc}
 1196              		.cfi_endproc
 1197              	.LFE466:
 1199              		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 1200              		.align	1
 1201              		.weak	HAL_ADC_LevelOutOfWindowCallback
 1202              		.syntax unified
 1203              		.code	16
 1204              		.thumb_func
 1206              	HAL_ADC_LevelOutOfWindowCallback:
 1207              	.LVL78:
 1208              	.LFB456:
2100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1209              		.loc 1 2100 1 is_stmt 1 view -0
 1210              		.cfi_startproc
 1211              		@ args = 0, pretend = 0, frame = 0
 1212              		@ frame_needed = 0, uses_anonymous_args = 0
 1213              		@ link register save eliminated.
2102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1214              		.loc 1 2102 3 view .LVU340
2107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1215              		.loc 1 2107 1 is_stmt 0 view .LVU341
 1216              		@ sp needed
 1217 0000 7047     		bx	lr
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 161


 1218              		.cfi_endproc
 1219              	.LFE456:
 1221              		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 1222              		.align	1
 1223              		.weak	HAL_ADC_ErrorCallback
 1224              		.syntax unified
 1225              		.code	16
 1226              		.thumb_func
 1228              	HAL_ADC_ErrorCallback:
 1229              	.LVL79:
 1230              	.LFB457:
2122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1231              		.loc 1 2122 1 is_stmt 1 view -0
 1232              		.cfi_startproc
 1233              		@ args = 0, pretend = 0, frame = 0
 1234              		@ frame_needed = 0, uses_anonymous_args = 0
 1235              		@ link register save eliminated.
2124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1236              		.loc 1 2124 3 view .LVU343
2129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1237              		.loc 1 2129 1 is_stmt 0 view .LVU344
 1238              		@ sp needed
 1239 0000 7047     		bx	lr
 1240              		.cfi_endproc
 1241              	.LFE457:
 1243              		.section	.text.ADC_DMAError,"ax",%progbits
 1244              		.align	1
 1245              		.syntax unified
 1246              		.code	16
 1247              		.thumb_func
 1249              	ADC_DMAError:
 1250              	.LVL80:
 1251              	.LFB467:
2951:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2952:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  DMA error callback.
2954:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
2955:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval None
2956:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2957:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma)
2958:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
 1252              		.loc 1 2958 1 is_stmt 1 view -0
 1253              		.cfi_startproc
 1254              		@ args = 0, pretend = 0, frame = 0
 1255              		@ frame_needed = 0, uses_anonymous_args = 0
 1256              		.loc 1 2958 1 is_stmt 0 view .LVU346
 1257 0000 10B5     		push	{r4, lr}
 1258              	.LCFI5:
 1259              		.cfi_def_cfa_offset 8
 1260              		.cfi_offset 4, -8
 1261              		.cfi_offset 14, -4
2959:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
2960:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 1262              		.loc 1 2960 3 is_stmt 1 view .LVU347
 1263              		.loc 1 2960 22 is_stmt 0 view .LVU348
 1264 0002 806A     		ldr	r0, [r0, #40]
 1265              	.LVL81:
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 162


2961:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2962:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Set ADC state */
2963:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 1266              		.loc 1 2963 3 is_stmt 1 view .LVU349
 1267 0004 836D     		ldr	r3, [r0, #88]
 1268 0006 4022     		movs	r2, #64
 1269 0008 1343     		orrs	r3, r2
 1270 000a 8365     		str	r3, [r0, #88]
2964:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2965:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Set ADC error code to DMA error */
2966:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_DMA);
 1271              		.loc 1 2966 3 view .LVU350
 1272 000c C36D     		ldr	r3, [r0, #92]
 1273 000e 3C3A     		subs	r2, r2, #60
 1274 0010 1343     		orrs	r3, r2
 1275 0012 C365     		str	r3, [r0, #92]
2967:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2968:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Error callback */
2969:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2970:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->ErrorCallback(hadc);
2971:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #else
2972:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_ADC_ErrorCallback(hadc);
 1276              		.loc 1 2972 3 view .LVU351
 1277 0014 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1278              	.LVL82:
2973:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2974:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 1279              		.loc 1 2974 1 is_stmt 0 view .LVU352
 1280              		@ sp needed
 1281 0018 10BD     		pop	{r4, pc}
 1282              		.cfi_endproc
 1283              	.LFE467:
 1285              		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 1286              		.align	1
 1287              		.syntax unified
 1288              		.code	16
 1289              		.thumb_func
 1291              	ADC_DMAConvCplt:
 1292              	.LVL83:
 1293              	.LFB465:
2862:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1294              		.loc 1 2862 1 is_stmt 1 view -0
 1295              		.cfi_startproc
 1296              		@ args = 0, pretend = 0, frame = 0
 1297              		@ frame_needed = 0, uses_anonymous_args = 0
2862:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1298              		.loc 1 2862 1 is_stmt 0 view .LVU354
 1299 0000 10B5     		push	{r4, lr}
 1300              	.LCFI6:
 1301              		.cfi_def_cfa_offset 8
 1302              		.cfi_offset 4, -8
 1303              		.cfi_offset 14, -4
 1304 0002 0300     		movs	r3, r0
2864:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1305              		.loc 1 2864 3 is_stmt 1 view .LVU355
2864:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1306              		.loc 1 2864 22 is_stmt 0 view .LVU356
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 163


 1307 0004 806A     		ldr	r0, [r0, #40]
 1308              	.LVL84:
2867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1309              		.loc 1 2867 3 is_stmt 1 view .LVU357
2867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1310              		.loc 1 2867 12 is_stmt 0 view .LVU358
 1311 0006 826D     		ldr	r2, [r0, #88]
2867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1312              		.loc 1 2867 20 view .LVU359
 1313 0008 5021     		movs	r1, #80
2867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1314              		.loc 1 2867 6 view .LVU360
 1315 000a 1142     		tst	r1, r2
 1316 000c 2AD1     		bne	.L69
2870:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1317              		.loc 1 2870 5 is_stmt 1 view .LVU361
 1318 000e 826D     		ldr	r2, [r0, #88]
 1319 0010 8023     		movs	r3, #128
 1320              	.LVL85:
2870:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1321              		.loc 1 2870 5 is_stmt 0 view .LVU362
 1322 0012 9B00     		lsls	r3, r3, #2
 1323 0014 1343     		orrs	r3, r2
 1324 0016 8365     		str	r3, [r0, #88]
2875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == DISABLE)
 1325              		.loc 1 2875 5 is_stmt 1 view .LVU363
2875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == DISABLE)
 1326              		.loc 1 2875 48 is_stmt 0 view .LVU364
 1327 0018 0368     		ldr	r3, [r0]
 1328              	.LVL86:
 1329              	.LBB146:
 1330              	.LBI146:
2716:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 1331              		.loc 2 2716 26 is_stmt 1 view .LVU365
 1332              	.LBB147:
2718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1333              		.loc 2 2718 3 view .LVU366
2718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1334              		.loc 2 2718 12 is_stmt 0 view .LVU367
 1335 001a D968     		ldr	r1, [r3, #12]
 1336 001c C022     		movs	r2, #192
 1337 001e 1201     		lsls	r2, r2, #4
2718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1338              		.loc 2 2718 106 view .LVU368
 1339 0020 1142     		tst	r1, r2
 1340 0022 13D1     		bne	.L70
 1341              	.LVL87:
2718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1342              		.loc 2 2718 106 view .LVU369
 1343              	.LBE147:
 1344              	.LBE146:
2876:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        )
 1345              		.loc 1 2876 23 view .LVU370
 1346 0024 827E     		ldrb	r2, [r0, #26]
2876:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        )
 1347              		.loc 1 2876 9 view .LVU371
 1348 0026 002A     		cmp	r2, #0
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 164


 1349 0028 10D1     		bne	.L70
2880:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1350              		.loc 1 2880 7 is_stmt 1 view .LVU372
2880:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1351              		.loc 1 2880 11 is_stmt 0 view .LVU373
 1352 002a 1A68     		ldr	r2, [r3]
2880:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1353              		.loc 1 2880 10 view .LVU374
 1354 002c 1207     		lsls	r2, r2, #28
 1355 002e 0DD5     		bpl	.L70
2884:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 1356              		.loc 1 2884 9 is_stmt 1 view .LVU375
 1357              	.LVL88:
 1358              	.LBB148:
 1359              	.LBI148:
4761:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 1360              		.loc 2 4761 26 view .LVU376
 1361              	.LBB149:
 1362              		.loc 2 4763 3 view .LVU377
 1363              		.loc 2 4763 12 is_stmt 0 view .LVU378
 1364 0030 9A68     		ldr	r2, [r3, #8]
 1365              		.loc 2 4763 74 view .LVU379
 1366 0032 5207     		lsls	r2, r2, #29
 1367 0034 0DD4     		bmi	.L71
 1368              	.LVL89:
 1369              		.loc 2 4763 74 view .LVU380
 1370              	.LBE149:
 1371              	.LBE148:
2890:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1372              		.loc 1 2890 11 is_stmt 1 view .LVU381
 1373 0036 5A68     		ldr	r2, [r3, #4]
 1374 0038 0C21     		movs	r1, #12
 1375 003a 8A43     		bics	r2, r1
 1376 003c 5A60     		str	r2, [r3, #4]
2893:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                             HAL_ADC_STATE_REG_BUSY,
 1377              		.loc 1 2893 11 view .LVU382
 1378 003e 836D     		ldr	r3, [r0, #88]
 1379 0040 0E4A     		ldr	r2, .L75
 1380 0042 1340     		ands	r3, r2
 1381 0044 0432     		adds	r2, r2, #4
 1382 0046 FF32     		adds	r2, r2, #255
 1383 0048 1343     		orrs	r3, r2
 1384 004a 8365     		str	r3, [r0, #88]
 1385              	.L70:
2912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1386              		.loc 1 2912 5 view .LVU383
 1387 004c FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 1388              	.LVL90:
 1389              	.L68:
2932:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1390              		.loc 1 2932 1 is_stmt 0 view .LVU384
 1391              		@ sp needed
 1392 0050 10BD     		pop	{r4, pc}
 1393              	.LVL91:
 1394              	.L71:
2900:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1395              		.loc 1 2900 11 is_stmt 1 view .LVU385
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 165


 1396 0052 836D     		ldr	r3, [r0, #88]
 1397 0054 2022     		movs	r2, #32
 1398 0056 1343     		orrs	r3, r2
 1399 0058 8365     		str	r3, [r0, #88]
2903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 1400              		.loc 1 2903 11 view .LVU386
 1401 005a C36D     		ldr	r3, [r0, #92]
 1402 005c 1F3A     		subs	r2, r2, #31
 1403 005e 1343     		orrs	r3, r2
 1404 0060 C365     		str	r3, [r0, #92]
 1405 0062 F3E7     		b	.L70
 1406              	.LVL92:
 1407              	.L69:
2917:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1408              		.loc 1 2917 5 view .LVU387
2917:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1409              		.loc 1 2917 14 is_stmt 0 view .LVU388
 1410 0064 826D     		ldr	r2, [r0, #88]
2917:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1411              		.loc 1 2917 8 view .LVU389
 1412 0066 D206     		lsls	r2, r2, #27
 1413 0068 04D4     		bmi	.L74
2929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 1414              		.loc 1 2929 7 is_stmt 1 view .LVU390
2929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 1415              		.loc 1 2929 11 is_stmt 0 view .LVU391
 1416 006a 026D     		ldr	r2, [r0, #80]
2929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 1417              		.loc 1 2929 23 view .LVU392
 1418 006c 526B     		ldr	r2, [r2, #52]
2929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 1419              		.loc 1 2929 7 view .LVU393
 1420 006e 1800     		movs	r0, r3
 1421              	.LVL93:
2929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 1422              		.loc 1 2929 7 view .LVU394
 1423 0070 9047     		blx	r2
 1424              	.LVL94:
2932:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1425              		.loc 1 2932 1 view .LVU395
 1426 0072 EDE7     		b	.L68
 1427              	.LVL95:
 1428              	.L74:
2923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1429              		.loc 1 2923 7 is_stmt 1 view .LVU396
 1430 0074 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1431              	.LVL96:
2923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1432              		.loc 1 2923 7 is_stmt 0 view .LVU397
 1433 0078 EAE7     		b	.L68
 1434              	.L76:
 1435 007a C046     		.align	2
 1436              	.L75:
 1437 007c FEFEFFFF 		.word	-258
 1438              		.cfi_endproc
 1439              	.LFE465:
 1441              		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 166


 1442              		.align	1
 1443              		.global	HAL_ADC_IRQHandler
 1444              		.syntax unified
 1445              		.code	16
 1446              		.thumb_func
 1448              	HAL_ADC_IRQHandler:
 1449              	.LVL97:
 1450              	.LFB453:
1860:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 1451              		.loc 1 1860 1 is_stmt 1 view -0
 1452              		.cfi_startproc
 1453              		@ args = 0, pretend = 0, frame = 0
 1454              		@ frame_needed = 0, uses_anonymous_args = 0
1860:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 1455              		.loc 1 1860 1 is_stmt 0 view .LVU399
 1456 0000 70B5     		push	{r4, r5, r6, lr}
 1457              	.LCFI7:
 1458              		.cfi_def_cfa_offset 16
 1459              		.cfi_offset 4, -16
 1460              		.cfi_offset 5, -12
 1461              		.cfi_offset 6, -8
 1462              		.cfi_offset 14, -4
 1463 0002 0400     		movs	r4, r0
1861:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_isr = hadc->Instance->ISR;
 1464              		.loc 1 1861 3 is_stmt 1 view .LVU400
 1465              	.LVL98:
1862:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1466              		.loc 1 1862 3 view .LVU401
1862:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1467              		.loc 1 1862 26 is_stmt 0 view .LVU402
 1468 0004 0368     		ldr	r3, [r0]
1862:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1469              		.loc 1 1862 12 view .LVU403
 1470 0006 1E68     		ldr	r6, [r3]
 1471              	.LVL99:
1863:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1472              		.loc 1 1863 3 is_stmt 1 view .LVU404
1863:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1473              		.loc 1 1863 12 is_stmt 0 view .LVU405
 1474 0008 5D68     		ldr	r5, [r3, #4]
 1475              	.LVL100:
1866:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 1476              		.loc 1 1866 3 is_stmt 1 view .LVU406
1867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1477              		.loc 1 1867 3 view .LVU407
1870:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1478              		.loc 1 1870 3 view .LVU408
1870:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1479              		.loc 1 1870 6 is_stmt 0 view .LVU409
 1480 000a B307     		lsls	r3, r6, #30
 1481 000c 0FD5     		bpl	.L78
1870:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1482              		.loc 1 1870 54 discriminator 1 view .LVU410
 1483 000e AB07     		lsls	r3, r5, #30
 1484 0010 0DD5     		bpl	.L78
1873:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1485              		.loc 1 1873 5 is_stmt 1 view .LVU411
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 167


1873:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1486              		.loc 1 1873 14 is_stmt 0 view .LVU412
 1487 0012 836D     		ldr	r3, [r0, #88]
1873:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1488              		.loc 1 1873 8 view .LVU413
 1489 0014 DB06     		lsls	r3, r3, #27
 1490 0016 04D4     		bmi	.L79
1876:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 1491              		.loc 1 1876 7 is_stmt 1 view .LVU414
 1492 0018 826D     		ldr	r2, [r0, #88]
 1493 001a 8023     		movs	r3, #128
 1494 001c 1B01     		lsls	r3, r3, #4
 1495 001e 1343     		orrs	r3, r2
 1496 0020 8365     		str	r3, [r0, #88]
 1497              	.L79:
1883:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1498              		.loc 1 1883 5 view .LVU415
 1499 0022 2000     		movs	r0, r4
 1500              	.LVL101:
1883:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1501              		.loc 1 1883 5 is_stmt 0 view .LVU416
 1502 0024 FFF7FEFF 		bl	HAL_ADCEx_EndOfSamplingCallback
 1503              	.LVL102:
1887:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 1504              		.loc 1 1887 5 is_stmt 1 view .LVU417
 1505 0028 2368     		ldr	r3, [r4]
 1506 002a 0222     		movs	r2, #2
 1507 002c 1A60     		str	r2, [r3]
 1508              	.L78:
1891:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1509              		.loc 1 1891 3 view .LVU418
1891:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1510              		.loc 1 1891 6 is_stmt 0 view .LVU419
 1511 002e 7307     		lsls	r3, r6, #29
 1512 0030 01D5     		bpl	.L80
1891:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1513              		.loc 1 1891 51 discriminator 1 view .LVU420
 1514 0032 6B07     		lsls	r3, r5, #29
 1515 0034 03D4     		bmi	.L81
 1516              	.L80:
1891:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1517              		.loc 1 1891 94 discriminator 3 view .LVU421
 1518 0036 3307     		lsls	r3, r6, #28
 1519 0038 29D5     		bpl	.L82
1892:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1520              		.loc 1 1892 51 view .LVU422
 1521 003a 2B07     		lsls	r3, r5, #28
 1522 003c 27D5     		bpl	.L82
 1523              	.L81:
1895:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1524              		.loc 1 1895 5 is_stmt 1 view .LVU423
1895:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1525              		.loc 1 1895 14 is_stmt 0 view .LVU424
 1526 003e A36D     		ldr	r3, [r4, #88]
1895:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1527              		.loc 1 1895 8 view .LVU425
 1528 0040 DB06     		lsls	r3, r3, #27
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 168


 1529 0042 04D4     		bmi	.L83
1898:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 1530              		.loc 1 1898 7 is_stmt 1 view .LVU426
 1531 0044 A26D     		ldr	r2, [r4, #88]
 1532 0046 8023     		movs	r3, #128
 1533 0048 9B00     		lsls	r3, r3, #2
 1534 004a 1343     		orrs	r3, r2
 1535 004c A365     		str	r3, [r4, #88]
 1536              	.L83:
1904:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == DISABLE)
 1537              		.loc 1 1904 5 view .LVU427
1904:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == DISABLE)
 1538              		.loc 1 1904 48 is_stmt 0 view .LVU428
 1539 004e 2368     		ldr	r3, [r4]
 1540              	.LVL103:
 1541              	.LBB150:
 1542              	.LBI150:
2716:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 1543              		.loc 2 2716 26 is_stmt 1 view .LVU429
 1544              	.LBB151:
2718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1545              		.loc 2 2718 3 view .LVU430
2718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1546              		.loc 2 2718 12 is_stmt 0 view .LVU431
 1547 0050 D968     		ldr	r1, [r3, #12]
 1548 0052 C022     		movs	r2, #192
 1549 0054 1201     		lsls	r2, r2, #4
2718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1550              		.loc 2 2718 106 view .LVU432
 1551 0056 1142     		tst	r1, r2
 1552 0058 13D1     		bne	.L84
 1553              	.LVL104:
2718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1554              		.loc 2 2718 106 view .LVU433
 1555              	.LBE151:
 1556              	.LBE150:
1905:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        )
 1557              		.loc 1 1905 23 view .LVU434
 1558 005a A27E     		ldrb	r2, [r4, #26]
1905:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        )
 1559              		.loc 1 1905 9 view .LVU435
 1560 005c 002A     		cmp	r2, #0
 1561 005e 10D1     		bne	.L84
1909:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1562              		.loc 1 1909 7 is_stmt 1 view .LVU436
1909:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1563              		.loc 1 1909 11 is_stmt 0 view .LVU437
 1564 0060 1A68     		ldr	r2, [r3]
1909:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1565              		.loc 1 1909 10 view .LVU438
 1566 0062 1207     		lsls	r2, r2, #28
 1567 0064 0DD5     		bpl	.L84
1913:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 1568              		.loc 1 1913 9 is_stmt 1 view .LVU439
 1569              	.LVL105:
 1570              	.LBB152:
 1571              	.LBI152:
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 169


4761:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 1572              		.loc 2 4761 26 view .LVU440
 1573              	.LBB153:
 1574              		.loc 2 4763 3 view .LVU441
 1575              		.loc 2 4763 12 is_stmt 0 view .LVU442
 1576 0066 9A68     		ldr	r2, [r3, #8]
 1577              		.loc 2 4763 74 view .LVU443
 1578 0068 5207     		lsls	r2, r2, #29
 1579 006a 3BD4     		bmi	.L85
 1580              	.LVL106:
 1581              		.loc 2 4763 74 view .LVU444
 1582              	.LBE153:
 1583              	.LBE152:
1919:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1584              		.loc 1 1919 11 is_stmt 1 view .LVU445
 1585 006c 5A68     		ldr	r2, [r3, #4]
 1586 006e 0C21     		movs	r1, #12
 1587 0070 8A43     		bics	r2, r1
 1588 0072 5A60     		str	r2, [r3, #4]
1922:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                             HAL_ADC_STATE_REG_BUSY,
 1589              		.loc 1 1922 11 view .LVU446
 1590 0074 A36D     		ldr	r3, [r4, #88]
 1591 0076 374A     		ldr	r2, .L97
 1592 0078 1340     		ands	r3, r2
 1593 007a 0432     		adds	r2, r2, #4
 1594 007c FF32     		adds	r2, r2, #255
 1595 007e 1343     		orrs	r3, r2
 1596 0080 A365     		str	r3, [r4, #88]
 1597              	.L84:
1945:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1598              		.loc 1 1945 5 view .LVU447
 1599 0082 2000     		movs	r0, r4
 1600 0084 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 1601              	.LVL107:
1953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 1602              		.loc 1 1953 5 view .LVU448
 1603 0088 2368     		ldr	r3, [r4]
 1604 008a 0C22     		movs	r2, #12
 1605 008c 1A60     		str	r2, [r3]
 1606              	.L82:
1957:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1607              		.loc 1 1957 3 view .LVU449
1957:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1608              		.loc 1 1957 6 is_stmt 0 view .LVU450
 1609 008e 3306     		lsls	r3, r6, #24
 1610 0090 01D5     		bpl	.L86
1957:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1611              		.loc 1 1957 52 discriminator 1 view .LVU451
 1612 0092 2B06     		lsls	r3, r5, #24
 1613 0094 2FD4     		bmi	.L93
 1614              	.L86:
1974:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1615              		.loc 1 1974 3 is_stmt 1 view .LVU452
1974:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1616              		.loc 1 1974 6 is_stmt 0 view .LVU453
 1617 0096 F305     		lsls	r3, r6, #23
 1618 0098 01D5     		bpl	.L87
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 170


1974:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1619              		.loc 1 1974 52 discriminator 1 view .LVU454
 1620 009a EB05     		lsls	r3, r5, #23
 1621 009c 37D4     		bmi	.L94
 1622              	.L87:
1991:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1623              		.loc 1 1991 3 is_stmt 1 view .LVU455
1991:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1624              		.loc 1 1991 6 is_stmt 0 view .LVU456
 1625 009e B305     		lsls	r3, r6, #22
 1626 00a0 01D5     		bpl	.L88
1991:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1627              		.loc 1 1991 52 discriminator 1 view .LVU457
 1628 00a2 AB05     		lsls	r3, r5, #22
 1629 00a4 40D4     		bmi	.L95
 1630              	.L88:
2008:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1631              		.loc 1 2008 3 is_stmt 1 view .LVU458
2008:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1632              		.loc 1 2008 6 is_stmt 0 view .LVU459
 1633 00a6 F306     		lsls	r3, r6, #27
 1634 00a8 17D5     		bpl	.L89
2008:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1635              		.loc 1 2008 50 discriminator 1 view .LVU460
 1636 00aa EB06     		lsls	r3, r5, #27
 1637 00ac 15D5     		bpl	.L89
2016:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1638              		.loc 1 2016 5 is_stmt 1 view .LVU461
2016:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1639              		.loc 1 2016 8 is_stmt 0 view .LVU462
 1640 00ae 236B     		ldr	r3, [r4, #48]
 1641 00b0 002B     		cmp	r3, #0
 1642 00b2 03D0     		beq	.L90
2023:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1643              		.loc 1 2023 7 is_stmt 1 view .LVU463
2023:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1644              		.loc 1 2023 41 is_stmt 0 view .LVU464
 1645 00b4 2368     		ldr	r3, [r4]
 1646              	.LVL108:
 1647              	.LBB154:
 1648              	.LBI154:
3700:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 1649              		.loc 2 3700 26 is_stmt 1 view .LVU465
 1650              	.LBB155:
3702:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1651              		.loc 2 3702 3 view .LVU466
3702:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1652              		.loc 2 3702 21 is_stmt 0 view .LVU467
 1653 00b6 DB68     		ldr	r3, [r3, #12]
 1654              	.LVL109:
3702:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1655              		.loc 2 3702 21 view .LVU468
 1656              	.LBE155:
 1657              	.LBE154:
2023:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1658              		.loc 1 2023 10 view .LVU469
 1659 00b8 9B07     		lsls	r3, r3, #30
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 171


 1660 00ba 0BD0     		beq	.L91
 1661              	.L90:
 1662              	.LVL110:
2032:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1663              		.loc 1 2032 7 is_stmt 1 view .LVU470
 1664 00bc A26D     		ldr	r2, [r4, #88]
 1665 00be 8023     		movs	r3, #128
 1666 00c0 DB00     		lsls	r3, r3, #3
 1667 00c2 1343     		orrs	r3, r2
 1668 00c4 A365     		str	r3, [r4, #88]
2035:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1669              		.loc 1 2035 7 view .LVU471
 1670 00c6 E36D     		ldr	r3, [r4, #92]
 1671 00c8 0222     		movs	r2, #2
 1672 00ca 1343     		orrs	r3, r2
 1673 00cc E365     		str	r3, [r4, #92]
2045:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1674              		.loc 1 2045 7 view .LVU472
 1675 00ce 2000     		movs	r0, r4
 1676 00d0 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1677              	.LVL111:
 1678              	.L91:
2050:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 1679              		.loc 1 2050 5 view .LVU473
 1680 00d4 2368     		ldr	r3, [r4]
 1681 00d6 1022     		movs	r2, #16
 1682 00d8 1A60     		str	r2, [r3]
 1683              	.L89:
2054:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1684              		.loc 1 2054 3 view .LVU474
2054:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1685              		.loc 1 2054 6 is_stmt 0 view .LVU475
 1686 00da B304     		lsls	r3, r6, #18
 1687 00dc 01D5     		bpl	.L77
2054:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1688              		.loc 1 2054 54 discriminator 1 view .LVU476
 1689 00de AB04     		lsls	r3, r5, #18
 1690 00e0 2FD4     		bmi	.L96
 1691              	.L77:
2062:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1692              		.loc 1 2062 1 view .LVU477
 1693              		@ sp needed
 1694              	.LVL112:
 1695              	.LVL113:
 1696              	.LVL114:
2062:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1697              		.loc 1 2062 1 view .LVU478
 1698 00e2 70BD     		pop	{r4, r5, r6, pc}
 1699              	.LVL115:
 1700              	.L85:
1929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1701              		.loc 1 1929 11 is_stmt 1 view .LVU479
 1702 00e4 A36D     		ldr	r3, [r4, #88]
 1703 00e6 2022     		movs	r2, #32
 1704 00e8 1343     		orrs	r3, r2
 1705 00ea A365     		str	r3, [r4, #88]
1932:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 172


 1706              		.loc 1 1932 11 view .LVU480
 1707 00ec E36D     		ldr	r3, [r4, #92]
 1708 00ee 1F3A     		subs	r2, r2, #31
 1709 00f0 1343     		orrs	r3, r2
 1710 00f2 E365     		str	r3, [r4, #92]
 1711 00f4 C5E7     		b	.L84
 1712              	.L93:
1960:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1713              		.loc 1 1960 5 view .LVU481
 1714 00f6 A26D     		ldr	r2, [r4, #88]
 1715 00f8 8023     		movs	r3, #128
 1716 00fa 5B02     		lsls	r3, r3, #9
 1717 00fc 1343     		orrs	r3, r2
 1718 00fe A365     		str	r3, [r4, #88]
1966:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1719              		.loc 1 1966 5 view .LVU482
 1720 0100 2000     		movs	r0, r4
 1721 0102 FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
 1722              	.LVL116:
1970:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 1723              		.loc 1 1970 5 view .LVU483
 1724 0106 2368     		ldr	r3, [r4]
 1725 0108 8022     		movs	r2, #128
 1726 010a 1A60     		str	r2, [r3]
 1727 010c C3E7     		b	.L86
 1728              	.L94:
1977:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1729              		.loc 1 1977 5 view .LVU484
 1730 010e A26D     		ldr	r2, [r4, #88]
 1731 0110 8023     		movs	r3, #128
 1732 0112 9B02     		lsls	r3, r3, #10
 1733 0114 1343     		orrs	r3, r2
 1734 0116 A365     		str	r3, [r4, #88]
1983:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1735              		.loc 1 1983 5 view .LVU485
 1736 0118 2000     		movs	r0, r4
 1737 011a FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow2Callback
 1738              	.LVL117:
1987:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 1739              		.loc 1 1987 5 view .LVU486
 1740 011e 2368     		ldr	r3, [r4]
 1741 0120 8022     		movs	r2, #128
 1742 0122 5200     		lsls	r2, r2, #1
 1743 0124 1A60     		str	r2, [r3]
 1744 0126 BAE7     		b	.L87
 1745              	.L95:
1994:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1746              		.loc 1 1994 5 view .LVU487
 1747 0128 A26D     		ldr	r2, [r4, #88]
 1748 012a 8023     		movs	r3, #128
 1749 012c DB02     		lsls	r3, r3, #11
 1750 012e 1343     		orrs	r3, r2
 1751 0130 A365     		str	r3, [r4, #88]
2000:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1752              		.loc 1 2000 5 view .LVU488
 1753 0132 2000     		movs	r0, r4
 1754 0134 FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow3Callback
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 173


 1755              	.LVL118:
2004:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 1756              		.loc 1 2004 5 view .LVU489
 1757 0138 2368     		ldr	r3, [r4]
 1758 013a 8022     		movs	r2, #128
 1759 013c 9200     		lsls	r2, r2, #2
 1760 013e 1A60     		str	r2, [r3]
 1761 0140 B1E7     		b	.L88
 1762              	.LVL119:
 1763              	.L96:
2057:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1764              		.loc 1 2057 5 view .LVU490
 1765 0142 2000     		movs	r0, r4
 1766 0144 FFF7FEFF 		bl	HAL_ADCEx_ChannelConfigReadyCallback
 1767              	.LVL120:
2060:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 1768              		.loc 1 2060 5 view .LVU491
 1769 0148 2368     		ldr	r3, [r4]
 1770 014a 8022     		movs	r2, #128
 1771 014c 9201     		lsls	r2, r2, #6
 1772 014e 1A60     		str	r2, [r3]
2062:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1773              		.loc 1 2062 1 is_stmt 0 view .LVU492
 1774 0150 C7E7     		b	.L77
 1775              	.L98:
 1776 0152 C046     		.align	2
 1777              	.L97:
 1778 0154 FEFEFFFF 		.word	-258
 1779              		.cfi_endproc
 1780              	.LFE453:
 1782              		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 1783              		.align	1
 1784              		.global	HAL_ADC_ConfigChannel
 1785              		.syntax unified
 1786              		.code	16
 1787              		.thumb_func
 1789              	HAL_ADC_ConfigChannel:
 1790              	.LVL121:
 1791              	.LFB458:
2168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1792              		.loc 1 2168 1 is_stmt 1 view -0
 1793              		.cfi_startproc
 1794              		@ args = 0, pretend = 0, frame = 8
 1795              		@ frame_needed = 0, uses_anonymous_args = 0
2168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1796              		.loc 1 2168 1 is_stmt 0 view .LVU494
 1797 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1798              	.LCFI8:
 1799              		.cfi_def_cfa_offset 20
 1800              		.cfi_offset 4, -20
 1801              		.cfi_offset 5, -16
 1802              		.cfi_offset 6, -12
 1803              		.cfi_offset 7, -8
 1804              		.cfi_offset 14, -4
 1805 0002 83B0     		sub	sp, sp, #12
 1806              	.LCFI9:
 1807              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 174


 1808 0004 0400     		movs	r4, r0
2169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 1809              		.loc 1 2169 3 is_stmt 1 view .LVU495
 1810              	.LVL122:
2170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 1811              		.loc 1 2170 3 view .LVU496
2171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1812              		.loc 1 2171 3 view .LVU497
2171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1813              		.loc 1 2171 17 is_stmt 0 view .LVU498
 1814 0006 0023     		movs	r3, #0
 1815 0008 0193     		str	r3, [sp, #4]
2174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(pConfig->Channel));
 1816              		.loc 1 2174 3 is_stmt 1 view .LVU499
2175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLING_TIME_COMMON(pConfig->SamplingTime));
 1817              		.loc 1 2175 3 view .LVU500
2176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1818              		.loc 1 2176 3 view .LVU501
2178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 1819              		.loc 1 2178 3 view .LVU502
2178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 1820              		.loc 1 2178 18 is_stmt 0 view .LVU503
 1821 000a 0569     		ldr	r5, [r0, #16]
2185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1822              		.loc 1 2185 5 is_stmt 1 view .LVU504
2187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 1823              		.loc 1 2187 5 view .LVU505
2190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1824              		.loc 1 2190 3 view .LVU506
2190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1825              		.loc 1 2190 3 view .LVU507
 1826 000c 5433     		adds	r3, r3, #84
 1827 000e C35C     		ldrb	r3, [r0, r3]
 1828 0010 012B     		cmp	r3, #1
 1829 0012 00D1     		bne	.LCB1713
 1830 0014 30E1     		b	.L117	@long jump
 1831              	.LCB1713:
2190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1832              		.loc 1 2190 3 discriminator 2 view .LVU508
 1833 0016 5423     		movs	r3, #84
 1834 0018 0122     		movs	r2, #1
 1835 001a C254     		strb	r2, [r0, r3]
2190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1836              		.loc 1 2190 3 discriminator 2 view .LVU509
2198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1837              		.loc 1 2198 3 discriminator 2 view .LVU510
2198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1838              		.loc 1 2198 42 is_stmt 0 discriminator 2 view .LVU511
 1839 001c 0068     		ldr	r0, [r0]
 1840              	.LVL123:
 1841              	.LBB156:
 1842              	.LBI156:
4761:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 1843              		.loc 2 4761 26 is_stmt 1 discriminator 2 view .LVU512
 1844              	.LBB157:
 1845              		.loc 2 4763 3 discriminator 2 view .LVU513
 1846              		.loc 2 4763 12 is_stmt 0 discriminator 2 view .LVU514
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 175


 1847 001e 8368     		ldr	r3, [r0, #8]
 1848 0020 0332     		adds	r2, r2, #3
 1849 0022 1600     		movs	r6, r2
 1850 0024 1E40     		ands	r6, r3
 1851              		.loc 2 4763 74 discriminator 2 view .LVU515
 1852 0026 1A42     		tst	r2, r3
 1853 0028 09D0     		beq	.L101
 1854              	.LVL124:
 1855              		.loc 2 4763 74 discriminator 2 view .LVU516
 1856              	.LBE157:
 1857              	.LBE156:
2343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1858              		.loc 1 2343 5 is_stmt 1 view .LVU517
 1859 002a A36D     		ldr	r3, [r4, #88]
 1860 002c 1C32     		adds	r2, r2, #28
 1861 002e 1343     		orrs	r3, r2
 1862 0030 A365     		str	r3, [r4, #88]
2345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 1863              		.loc 1 2345 5 view .LVU518
 1864              	.LVL125:
2345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 1865              		.loc 1 2345 20 is_stmt 0 view .LVU519
 1866 0032 0120     		movs	r0, #1
 1867              	.LVL126:
 1868              	.L102:
2348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1869              		.loc 1 2348 3 is_stmt 1 view .LVU520
2348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1870              		.loc 1 2348 3 view .LVU521
 1871 0034 5423     		movs	r3, #84
 1872 0036 0022     		movs	r2, #0
 1873 0038 E254     		strb	r2, [r4, r3]
2348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1874              		.loc 1 2348 3 view .LVU522
2350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 1875              		.loc 1 2350 3 view .LVU523
 1876              	.LVL127:
 1877              	.L100:
2351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1878              		.loc 1 2351 1 is_stmt 0 view .LVU524
 1879 003a 03B0     		add	sp, sp, #12
 1880              		@ sp needed
 1881              	.LVL128:
2351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1882              		.loc 1 2351 1 view .LVU525
 1883 003c F0BD     		pop	{r4, r5, r6, r7, pc}
 1884              	.LVL129:
 1885              	.L101:
2207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1886              		.loc 1 2207 5 is_stmt 1 view .LVU526
2207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1887              		.loc 1 2207 16 is_stmt 0 view .LVU527
 1888 003e 4B68     		ldr	r3, [r1, #4]
2207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1889              		.loc 1 2207 8 view .LVU528
 1890 0040 022B     		cmp	r3, #2
 1891 0042 00D1     		bne	.LCB1782
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 176


 1892 0044 D6E0     		b	.L103	@long jump
 1893              	.LCB1782:
2215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 1894              		.loc 1 2215 7 is_stmt 1 view .LVU529
2215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 1895              		.loc 1 2215 10 is_stmt 0 view .LVU530
 1896 0046 8022     		movs	r2, #128
 1897 0048 1206     		lsls	r2, r2, #24
 1898 004a 9542     		cmp	r5, r2
 1899 004c 26D0     		beq	.L104
2215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 1900              		.loc 1 2215 65 discriminator 1 view .LVU531
 1901 004e 8B4A     		ldr	r2, .L148
 1902 0050 9542     		cmp	r5, r2
 1903 0052 23D0     		beq	.L104
2228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 1904              		.loc 1 2228 9 is_stmt 1 view .LVU532
 1905 0054 1F22     		movs	r2, #31
 1906 0056 1340     		ands	r3, r2
 1907 0058 103A     		subs	r2, r2, #16
 1908 005a 9A40     		lsls	r2, r2, r3
 1909 005c 256E     		ldr	r5, [r4, #96]
 1910 005e 9543     		bics	r5, r2
 1911 0060 2A00     		movs	r2, r5
 1912 0062 0D68     		ldr	r5, [r1]
 1913 0064 6F03     		lsls	r7, r5, #13
 1914 0066 2FD1     		bne	.L107
2228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 1915              		.loc 1 2228 9 is_stmt 0 discriminator 1 view .LVU533
 1916 0068 AD0E     		lsrs	r5, r5, #26
 1917 006a 1F26     		movs	r6, #31
 1918 006c 2E40     		ands	r6, r5
 1919              	.L108:
2228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 1920              		.loc 1 2228 9 discriminator 80 view .LVU534
 1921 006e 9E40     		lsls	r6, r6, r3
 1922 0070 1643     		orrs	r6, r2
 1923 0072 2666     		str	r6, [r4, #96]
2236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 1924              		.loc 1 2236 9 is_stmt 1 discriminator 80 view .LVU535
2236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 1925              		.loc 1 2236 22 is_stmt 0 discriminator 80 view .LVU536
 1926 0074 4D68     		ldr	r5, [r1, #4]
2236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 1927              		.loc 1 2236 29 discriminator 80 view .LVU537
 1928 0076 AB08     		lsrs	r3, r5, #2
2236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 1929              		.loc 1 2236 37 discriminator 80 view .LVU538
 1930 0078 0133     		adds	r3, r3, #1
2236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 1931              		.loc 1 2236 12 discriminator 80 view .LVU539
 1932 007a E269     		ldr	r2, [r4, #28]
 1933 007c 9342     		cmp	r3, r2
 1934 007e 13D8     		bhi	.L106
2238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 1935              		.loc 1 2238 11 is_stmt 1 view .LVU540
 1936              	.LVL130:
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 177


 1937              	.LBB158:
 1938              	.LBI158:
3127:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 1939              		.loc 2 3127 22 view .LVU541
 1940              	.LBB159:
3133:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 1941              		.loc 2 3133 3 view .LVU542
 1942 0080 826A     		ldr	r2, [r0, #40]
 1943 0082 1F23     		movs	r3, #31
 1944 0084 1D40     		ands	r5, r3
 1945              	.LVL131:
3133:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 1946              		.loc 2 3133 3 is_stmt 0 view .LVU543
 1947 0086 103B     		subs	r3, r3, #16
 1948 0088 1E00     		movs	r6, r3
 1949 008a AE40     		lsls	r6, r6, r5
 1950 008c B243     		bics	r2, r6
 1951 008e 0E68     		ldr	r6, [r1]
 1952 0090 B60E     		lsrs	r6, r6, #26
 1953 0092 3340     		ands	r3, r6
 1954 0094 AB40     		lsls	r3, r3, r5
 1955 0096 1343     		orrs	r3, r2
 1956 0098 8362     		str	r3, [r0, #40]
 1957              	.LVL132:
3137:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 1958              		.loc 2 3137 1 view .LVU544
 1959 009a 05E0     		b	.L106
 1960              	.LVL133:
 1961              	.L104:
3137:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 1962              		.loc 2 3137 1 view .LVU545
 1963              	.LBE159:
 1964              	.LBE158:
2220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 1965              		.loc 1 2220 9 is_stmt 1 view .LVU546
 1966              	.LBB160:
 1967              	.LBI160:
3394:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 1968              		.loc 2 3394 22 view .LVU547
 1969              	.LBB161:
3398:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1970              		.loc 2 3398 3 view .LVU548
 1971 009c 826A     		ldr	r2, [r0, #40]
 1972 009e 0B68     		ldr	r3, [r1]
 1973 00a0 5B03     		lsls	r3, r3, #13
 1974 00a2 5B0B     		lsrs	r3, r3, #13
 1975 00a4 1343     		orrs	r3, r2
 1976 00a6 8362     		str	r3, [r0, #40]
 1977              	.LVL134:
 1978              	.L106:
3398:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1979              		.loc 2 3398 3 is_stmt 0 view .LVU549
 1980              	.LBE161:
 1981              	.LBE160:
2243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1982              		.loc 1 2243 7 is_stmt 1 view .LVU550
 1983 00a8 2068     		ldr	r0, [r4]
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 178


 1984              	.LVL135:
 1985              	.LBB162:
 1986              	.LBI162:
3826:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 1987              		.loc 2 3826 22 view .LVU551
 1988              	.LBB163:
3830:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS),
 1989              		.loc 2 3830 3 view .LVU552
 1990 00aa 4269     		ldr	r2, [r0, #20]
 1991 00ac 0B68     		ldr	r3, [r1]
 1992 00ae 1B02     		lsls	r3, r3, #8
 1993 00b0 9A43     		bics	r2, r3
 1994 00b2 8D68     		ldr	r5, [r1, #8]
 1995 00b4 2B40     		ands	r3, r5
 1996 00b6 724D     		ldr	r5, .L148+4
 1997 00b8 2B40     		ands	r3, r5
 1998 00ba 1343     		orrs	r3, r2
 1999 00bc 4361     		str	r3, [r0, #20]
 2000              	.LVL136:
3830:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS),
 2001              		.loc 2 3830 3 is_stmt 0 view .LVU553
 2002              	.LBE163:
 2003              	.LBE162:
2251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2004              		.loc 1 2251 7 is_stmt 1 view .LVU554
2251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2005              		.loc 1 2251 11 is_stmt 0 view .LVU555
 2006 00be 0B68     		ldr	r3, [r1]
2251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2007              		.loc 1 2251 10 view .LVU556
 2008 00c0 002B     		cmp	r3, #0
 2009 00c2 4FDB     		blt	.L140
2169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2010              		.loc 1 2169 21 view .LVU557
 2011 00c4 0020     		movs	r0, #0
 2012 00c6 B5E7     		b	.L102
 2013              	.L107:
2228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2014              		.loc 1 2228 9 discriminator 2 view .LVU558
 2015 00c8 EF07     		lsls	r7, r5, #31
 2016 00ca D0D4     		bmi	.L108
2228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2017              		.loc 1 2228 9 discriminator 4 view .LVU559
 2018 00cc AE07     		lsls	r6, r5, #30
 2019 00ce 27D4     		bmi	.L118
2228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2020              		.loc 1 2228 9 discriminator 6 view .LVU560
 2021 00d0 6E07     		lsls	r6, r5, #29
 2022 00d2 27D4     		bmi	.L119
2228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2023              		.loc 1 2228 9 discriminator 8 view .LVU561
 2024 00d4 2E07     		lsls	r6, r5, #28
 2025 00d6 27D4     		bmi	.L120
2228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2026              		.loc 1 2228 9 discriminator 10 view .LVU562
 2027 00d8 EE06     		lsls	r6, r5, #27
 2028 00da 27D4     		bmi	.L121
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 179


2228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2029              		.loc 1 2228 9 discriminator 12 view .LVU563
 2030 00dc AE06     		lsls	r6, r5, #26
 2031 00de 27D4     		bmi	.L122
2228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2032              		.loc 1 2228 9 discriminator 14 view .LVU564
 2033 00e0 6E06     		lsls	r6, r5, #25
 2034 00e2 27D4     		bmi	.L123
2228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2035              		.loc 1 2228 9 discriminator 16 view .LVU565
 2036 00e4 2E06     		lsls	r6, r5, #24
 2037 00e6 27D4     		bmi	.L124
2228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2038              		.loc 1 2228 9 discriminator 18 view .LVU566
 2039 00e8 EE05     		lsls	r6, r5, #23
 2040 00ea 27D4     		bmi	.L125
2228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2041              		.loc 1 2228 9 discriminator 20 view .LVU567
 2042 00ec AE05     		lsls	r6, r5, #22
 2043 00ee 27D4     		bmi	.L126
2228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2044              		.loc 1 2228 9 discriminator 22 view .LVU568
 2045 00f0 6E05     		lsls	r6, r5, #21
 2046 00f2 27D4     		bmi	.L127
2228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2047              		.loc 1 2228 9 discriminator 24 view .LVU569
 2048 00f4 2E05     		lsls	r6, r5, #20
 2049 00f6 27D4     		bmi	.L128
2228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2050              		.loc 1 2228 9 discriminator 26 view .LVU570
 2051 00f8 EE04     		lsls	r6, r5, #19
 2052 00fa 27D4     		bmi	.L129
2228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2053              		.loc 1 2228 9 discriminator 28 view .LVU571
 2054 00fc AE04     		lsls	r6, r5, #18
 2055 00fe 27D4     		bmi	.L130
2228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2056              		.loc 1 2228 9 discriminator 30 view .LVU572
 2057 0100 6E04     		lsls	r6, r5, #17
 2058 0102 27D4     		bmi	.L131
2228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2059              		.loc 1 2228 9 discriminator 32 view .LVU573
 2060 0104 2E04     		lsls	r6, r5, #16
 2061 0106 27D4     		bmi	.L132
2228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2062              		.loc 1 2228 9 discriminator 34 view .LVU574
 2063 0108 EE03     		lsls	r6, r5, #15
 2064 010a 27D4     		bmi	.L133
2228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2065              		.loc 1 2228 9 discriminator 36 view .LVU575
 2066 010c AE03     		lsls	r6, r5, #14
 2067 010e 27D4     		bmi	.L134
2228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2068              		.loc 1 2228 9 discriminator 38 view .LVU576
 2069 0110 8027     		movs	r7, #128
 2070 0112 FF02     		lsls	r7, r7, #11
 2071 0114 2E00     		movs	r6, r5
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 180


 2072 0116 3E40     		ands	r6, r7
 2073 0118 3D42     		tst	r5, r7
 2074 011a A8D0     		beq	.L108
2228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 2075              		.loc 1 2228 9 view .LVU577
 2076 011c 1226     		movs	r6, #18
 2077 011e A6E7     		b	.L108
 2078              	.L118:
 2079 0120 0126     		movs	r6, #1
 2080 0122 A4E7     		b	.L108
 2081              	.L119:
 2082 0124 0226     		movs	r6, #2
 2083 0126 A2E7     		b	.L108
 2084              	.L120:
 2085 0128 0326     		movs	r6, #3
 2086 012a A0E7     		b	.L108
 2087              	.L121:
 2088 012c 0426     		movs	r6, #4
 2089 012e 9EE7     		b	.L108
 2090              	.L122:
 2091 0130 0526     		movs	r6, #5
 2092 0132 9CE7     		b	.L108
 2093              	.L123:
 2094 0134 0626     		movs	r6, #6
 2095 0136 9AE7     		b	.L108
 2096              	.L124:
 2097 0138 0726     		movs	r6, #7
 2098 013a 98E7     		b	.L108
 2099              	.L125:
 2100 013c 0826     		movs	r6, #8
 2101 013e 96E7     		b	.L108
 2102              	.L126:
 2103 0140 0926     		movs	r6, #9
 2104 0142 94E7     		b	.L108
 2105              	.L127:
 2106 0144 0A26     		movs	r6, #10
 2107 0146 92E7     		b	.L108
 2108              	.L128:
 2109 0148 0B26     		movs	r6, #11
 2110 014a 90E7     		b	.L108
 2111              	.L129:
 2112 014c 0C26     		movs	r6, #12
 2113 014e 8EE7     		b	.L108
 2114              	.L130:
 2115 0150 0D26     		movs	r6, #13
 2116 0152 8CE7     		b	.L108
 2117              	.L131:
 2118 0154 0E26     		movs	r6, #14
 2119 0156 8AE7     		b	.L108
 2120              	.L132:
 2121 0158 0F26     		movs	r6, #15
 2122 015a 88E7     		b	.L108
 2123              	.L133:
 2124 015c 1026     		movs	r6, #16
 2125 015e 86E7     		b	.L108
 2126              	.L134:
 2127 0160 1126     		movs	r6, #17
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 181


 2128 0162 84E7     		b	.L108
 2129              	.L140:
2253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2130              		.loc 1 2253 9 is_stmt 1 view .LVU578
 2131              	.LVL137:
 2132              	.LBB164:
 2133              	.LBI164:
2205:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2134              		.loc 2 2205 26 view .LVU579
 2135              	.LBB165:
2207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2136              		.loc 2 2207 3 view .LVU580
2207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2137              		.loc 2 2207 21 is_stmt 0 view .LVU581
 2138 0164 474A     		ldr	r2, .L148+8
 2139 0166 1168     		ldr	r1, [r2]
 2140              	.LVL138:
2207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2141              		.loc 2 2207 10 view .LVU582
 2142 0168 E022     		movs	r2, #224
 2143 016a 5204     		lsls	r2, r2, #17
 2144 016c 0A40     		ands	r2, r1
 2145              	.LVL139:
2207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2146              		.loc 2 2207 10 view .LVU583
 2147              	.LBE165:
 2148              	.LBE164:
2257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 2149              		.loc 1 2257 9 is_stmt 1 view .LVU584
2257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 2150              		.loc 1 2257 12 is_stmt 0 view .LVU585
 2151 016e 4648     		ldr	r0, .L148+12
 2152 0170 8342     		cmp	r3, r0
 2153 0172 07D0     		beq	.L141
 2154              	.L109:
2274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VBAT) == 0UL))
 2155              		.loc 1 2274 14 is_stmt 1 view .LVU586
2274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VBAT) == 0UL))
 2156              		.loc 1 2274 17 is_stmt 0 view .LVU587
 2157 0174 4548     		ldr	r0, .L148+16
 2158 0176 8342     		cmp	r3, r0
 2159 0178 22D0     		beq	.L142
 2160              	.L112:
2280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
 2161              		.loc 1 2280 14 is_stmt 1 view .LVU588
2280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
 2162              		.loc 1 2280 17 is_stmt 0 view .LVU589
 2163 017a 4548     		ldr	r0, .L148+20
 2164 017c 8342     		cmp	r3, r0
 2165 017e 2CD0     		beq	.L143
2169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2166              		.loc 1 2169 21 view .LVU590
 2167 0180 0020     		movs	r0, #0
 2168 0182 57E7     		b	.L102
 2169              	.L141:
2257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 2170              		.loc 1 2257 58 discriminator 1 view .LVU591
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 182


 2171 0184 0802     		lsls	r0, r1, #8
 2172 0186 F5D4     		bmi	.L109
2260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_chan
 2173              		.loc 1 2260 11 is_stmt 1 view .LVU592
 2174 0188 8023     		movs	r3, #128
 2175 018a 1B04     		lsls	r3, r3, #16
 2176 018c 1A43     		orrs	r2, r3
 2177              	.LVL140:
 2178              	.LBB166:
 2179              	.LBI166:
2111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2180              		.loc 2 2111 22 view .LVU593
 2181              	.LBB167:
2113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2182              		.loc 2 2113 3 view .LVU594
 2183 018e 3D49     		ldr	r1, .L148+8
 2184              	.LVL141:
2113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2185              		.loc 2 2113 3 is_stmt 0 view .LVU595
 2186 0190 0B68     		ldr	r3, [r1]
 2187 0192 4048     		ldr	r0, .L148+24
 2188 0194 0340     		ands	r3, r0
 2189 0196 1A43     		orrs	r2, r3
 2190              	.LVL142:
2113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2191              		.loc 2 2113 3 view .LVU596
 2192 0198 0A60     		str	r2, [r1]
 2193              	.LVL143:
2113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2194              		.loc 2 2113 3 view .LVU597
 2195              	.LBE167:
 2196              	.LBE166:
2268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 2197              		.loc 1 2268 11 is_stmt 1 view .LVU598
2268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 2198              		.loc 1 2268 91 is_stmt 0 view .LVU599
 2199 019a 3F4B     		ldr	r3, .L148+28
 2200 019c 1868     		ldr	r0, [r3]
 2201 019e 3F49     		ldr	r1, .L148+32
 2202 01a0 FFF7FEFF 		bl	__aeabi_uidiv
 2203              	.LVL144:
2268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 2204              		.loc 1 2268 71 view .LVU600
 2205 01a4 0130     		adds	r0, r0, #1
 2206 01a6 4300     		lsls	r3, r0, #1
 2207 01a8 1B18     		adds	r3, r3, r0
 2208 01aa 9B00     		lsls	r3, r3, #2
2268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 2209              		.loc 1 2268 27 view .LVU601
 2210 01ac 0193     		str	r3, [sp, #4]
2269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           {
 2211              		.loc 1 2269 11 is_stmt 1 view .LVU602
2269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           {
 2212              		.loc 1 2269 17 is_stmt 0 view .LVU603
 2213 01ae 02E0     		b	.L110
 2214              	.L111:
2271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 183


 2215              		.loc 1 2271 13 is_stmt 1 view .LVU604
2271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 2216              		.loc 1 2271 28 is_stmt 0 view .LVU605
 2217 01b0 019B     		ldr	r3, [sp, #4]
 2218 01b2 013B     		subs	r3, r3, #1
 2219 01b4 0193     		str	r3, [sp, #4]
 2220              	.L110:
2269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           {
 2221              		.loc 1 2269 17 is_stmt 1 view .LVU606
2269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           {
 2222              		.loc 1 2269 34 is_stmt 0 view .LVU607
 2223 01b6 019B     		ldr	r3, [sp, #4]
2269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           {
 2224              		.loc 1 2269 17 view .LVU608
 2225 01b8 002B     		cmp	r3, #0
 2226 01ba F9D1     		bne	.L111
2169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2227              		.loc 1 2169 21 view .LVU609
 2228 01bc 0020     		movs	r0, #0
 2229 01be 39E7     		b	.L102
 2230              	.LVL145:
 2231              	.L142:
2275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2232              		.loc 1 2275 18 view .LVU610
 2233 01c0 C801     		lsls	r0, r1, #7
 2234 01c2 DAD4     		bmi	.L112
2277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
 2235              		.loc 1 2277 11 is_stmt 1 view .LVU611
 2236 01c4 8023     		movs	r3, #128
 2237 01c6 5B04     		lsls	r3, r3, #17
 2238 01c8 1A43     		orrs	r2, r3
 2239              	.LVL146:
 2240              	.LBB168:
 2241              	.LBI168:
2111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2242              		.loc 2 2111 22 view .LVU612
 2243              	.LBB169:
2113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2244              		.loc 2 2113 3 view .LVU613
 2245 01ca 2E49     		ldr	r1, .L148+8
 2246              	.LVL147:
2113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2247              		.loc 2 2113 3 is_stmt 0 view .LVU614
 2248 01cc 0B68     		ldr	r3, [r1]
 2249 01ce 3148     		ldr	r0, .L148+24
 2250 01d0 0340     		ands	r3, r0
 2251 01d2 1A43     		orrs	r2, r3
 2252              	.LVL148:
2113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2253              		.loc 2 2113 3 view .LVU615
 2254 01d4 0A60     		str	r2, [r1]
 2255              	.LBE169:
 2256              	.LBE168:
2169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2257              		.loc 1 2169 21 view .LVU616
 2258 01d6 0020     		movs	r0, #0
 2259              	.LBB171:
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 184


 2260              	.LBB170:
2114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 2261              		.loc 2 2114 1 view .LVU617
 2262 01d8 2CE7     		b	.L102
 2263              	.LVL149:
 2264              	.L143:
2114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 2265              		.loc 2 2114 1 view .LVU618
 2266              	.LBE170:
 2267              	.LBE171:
2280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
 2268              		.loc 1 2280 60 discriminator 1 view .LVU619
 2269 01da 4B02     		lsls	r3, r1, #9
 2270 01dc 4AD4     		bmi	.L137
2283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel
 2271              		.loc 1 2283 11 is_stmt 1 view .LVU620
 2272 01de 8023     		movs	r3, #128
 2273 01e0 DB03     		lsls	r3, r3, #15
 2274 01e2 1A43     		orrs	r2, r3
 2275              	.LVL150:
 2276              	.LBB172:
 2277              	.LBI172:
2111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2278              		.loc 2 2111 22 view .LVU621
 2279              	.LBB173:
2113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2280              		.loc 2 2113 3 view .LVU622
 2281 01e4 2749     		ldr	r1, .L148+8
 2282              	.LVL151:
2113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2283              		.loc 2 2113 3 is_stmt 0 view .LVU623
 2284 01e6 0B68     		ldr	r3, [r1]
 2285 01e8 2A48     		ldr	r0, .L148+24
 2286 01ea 0340     		ands	r3, r0
 2287 01ec 1A43     		orrs	r2, r3
 2288              	.LVL152:
2113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2289              		.loc 2 2113 3 view .LVU624
 2290 01ee 0A60     		str	r2, [r1]
 2291              	.LBE173:
 2292              	.LBE172:
2169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2293              		.loc 1 2169 21 view .LVU625
 2294 01f0 0020     		movs	r0, #0
 2295              	.LBB175:
 2296              	.LBB174:
2114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 2297              		.loc 2 2114 1 view .LVU626
 2298 01f2 1FE7     		b	.L102
 2299              	.LVL153:
 2300              	.L103:
2114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 2301              		.loc 2 2114 1 view .LVU627
 2302              	.LBE174:
 2303              	.LBE175:
2299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 2304              		.loc 1 2299 7 is_stmt 1 view .LVU628
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 185


2299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 2305              		.loc 1 2299 10 is_stmt 0 view .LVU629
 2306 01f4 8023     		movs	r3, #128
 2307 01f6 1B06     		lsls	r3, r3, #24
 2308 01f8 9D42     		cmp	r5, r3
 2309 01fa 02D0     		beq	.L113
2299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 2310              		.loc 1 2299 65 discriminator 1 view .LVU630
 2311 01fc 1F4B     		ldr	r3, .L148
 2312 01fe 9D42     		cmp	r5, r3
 2313 0200 05D1     		bne	.L114
 2314              	.L113:
2304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 2315              		.loc 1 2304 9 is_stmt 1 view .LVU631
 2316              	.LVL154:
 2317              	.LBB176:
 2318              	.LBI176:
3486:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2319              		.loc 2 3486 22 view .LVU632
 2320              	.LBB177:
3490:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2321              		.loc 2 3490 3 view .LVU633
 2322 0202 826A     		ldr	r2, [r0, #40]
 2323 0204 0B68     		ldr	r3, [r1]
 2324 0206 5B03     		lsls	r3, r3, #13
 2325 0208 5B0B     		lsrs	r3, r3, #13
 2326 020a 9A43     		bics	r2, r3
 2327 020c 8262     		str	r2, [r0, #40]
 2328              	.LVL155:
 2329              	.L114:
3490:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2330              		.loc 2 3490 3 is_stmt 0 view .LVU634
 2331              	.LBE177:
 2332              	.LBE176:
2310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2333              		.loc 1 2310 7 is_stmt 1 view .LVU635
2310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2334              		.loc 1 2310 11 is_stmt 0 view .LVU636
 2335 020e 0B68     		ldr	r3, [r1]
2310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2336              		.loc 1 2310 10 view .LVU637
 2337 0210 002B     		cmp	r3, #0
 2338 0212 01DB     		blt	.L144
2169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2339              		.loc 1 2169 21 view .LVU638
 2340 0214 0020     		movs	r0, #0
 2341 0216 0DE7     		b	.L102
 2342              	.L144:
2312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2343              		.loc 1 2312 9 is_stmt 1 view .LVU639
 2344              	.LVL156:
 2345              	.LBB178:
 2346              	.LBI178:
2205:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2347              		.loc 2 2205 26 view .LVU640
 2348              	.LBB179:
2207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 186


 2349              		.loc 2 2207 3 view .LVU641
2207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2350              		.loc 2 2207 21 is_stmt 0 view .LVU642
 2351 0218 1A4A     		ldr	r2, .L148+8
 2352 021a 1268     		ldr	r2, [r2]
 2353              	.LVL157:
2207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2354              		.loc 2 2207 21 view .LVU643
 2355              	.LBE179:
 2356              	.LBE178:
2314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2357              		.loc 1 2314 9 is_stmt 1 view .LVU644
2314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2358              		.loc 1 2314 12 is_stmt 0 view .LVU645
 2359 021c 1A49     		ldr	r1, .L148+12
 2360              	.LVL158:
2314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2361              		.loc 1 2314 12 view .LVU646
 2362 021e 8B42     		cmp	r3, r1
 2363 0220 07D0     		beq	.L145
2319:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2364              		.loc 1 2319 14 is_stmt 1 view .LVU647
2319:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2365              		.loc 1 2319 17 is_stmt 0 view .LVU648
 2366 0222 1A49     		ldr	r1, .L148+16
 2367 0224 8B42     		cmp	r3, r1
 2368 0226 0FD0     		beq	.L146
2324:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2369              		.loc 1 2324 14 is_stmt 1 view .LVU649
2324:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2370              		.loc 1 2324 17 is_stmt 0 view .LVU650
 2371 0228 1949     		ldr	r1, .L148+20
 2372 022a 8B42     		cmp	r3, r1
 2373 022c 17D0     		beq	.L147
2169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2374              		.loc 1 2169 21 view .LVU651
 2375 022e 0020     		movs	r0, #0
 2376 0230 00E7     		b	.L102
 2377              	.L145:
2316:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                          ~LL_ADC_PATH_INTERNAL_TEMPSENSOR & tmp_config_internal_cha
 2378              		.loc 1 2316 11 is_stmt 1 view .LVU652
 2379 0232 A023     		movs	r3, #160
 2380 0234 5B04     		lsls	r3, r3, #17
 2381 0236 1A40     		ands	r2, r3
 2382              	.LVL159:
 2383              	.LBB180:
 2384              	.LBI180:
2111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2385              		.loc 2 2111 22 view .LVU653
 2386              	.LBB181:
2113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2387              		.loc 2 2113 3 view .LVU654
 2388 0238 1249     		ldr	r1, .L148+8
 2389 023a 0B68     		ldr	r3, [r1]
 2390 023c 1548     		ldr	r0, .L148+24
 2391 023e 0340     		ands	r3, r0
 2392 0240 1A43     		orrs	r2, r3
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 187


 2393              	.LVL160:
2113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2394              		.loc 2 2113 3 is_stmt 0 view .LVU655
 2395 0242 0A60     		str	r2, [r1]
 2396              	.LBE181:
 2397              	.LBE180:
2169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2398              		.loc 1 2169 21 view .LVU656
 2399 0244 0020     		movs	r0, #0
 2400              	.LBB183:
 2401              	.LBB182:
2114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 2402              		.loc 2 2114 1 view .LVU657
 2403 0246 F5E6     		b	.L102
 2404              	.LVL161:
 2405              	.L146:
2114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 2406              		.loc 2 2114 1 view .LVU658
 2407              	.LBE182:
 2408              	.LBE183:
2321:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                          ~LL_ADC_PATH_INTERNAL_VBAT & tmp_config_internal_channel);
 2409              		.loc 1 2321 11 is_stmt 1 view .LVU659
 2410 0248 C023     		movs	r3, #192
 2411 024a 1B04     		lsls	r3, r3, #16
 2412 024c 1A40     		ands	r2, r3
 2413              	.LVL162:
 2414              	.LBB184:
 2415              	.LBI184:
2111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2416              		.loc 2 2111 22 view .LVU660
 2417              	.LBB185:
2113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2418              		.loc 2 2113 3 view .LVU661
 2419 024e 0D49     		ldr	r1, .L148+8
 2420 0250 0B68     		ldr	r3, [r1]
 2421 0252 1048     		ldr	r0, .L148+24
 2422 0254 0340     		ands	r3, r0
 2423 0256 1A43     		orrs	r2, r3
 2424              	.LVL163:
2113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2425              		.loc 2 2113 3 is_stmt 0 view .LVU662
 2426 0258 0A60     		str	r2, [r1]
 2427              	.LBE185:
 2428              	.LBE184:
2169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2429              		.loc 1 2169 21 view .LVU663
 2430 025a 0020     		movs	r0, #0
 2431              	.LBB187:
 2432              	.LBB186:
2114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 2433              		.loc 2 2114 1 view .LVU664
 2434 025c EAE6     		b	.L102
 2435              	.LVL164:
 2436              	.L147:
2114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 2437              		.loc 2 2114 1 view .LVU665
 2438              	.LBE186:
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 188


 2439              	.LBE187:
2326:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                          ~LL_ADC_PATH_INTERNAL_VREFINT & tmp_config_internal_channe
 2440              		.loc 1 2326 11 is_stmt 1 view .LVU666
 2441 025e C023     		movs	r3, #192
 2442 0260 5B04     		lsls	r3, r3, #17
 2443 0262 1A40     		ands	r2, r3
 2444              	.LVL165:
 2445              	.LBB188:
 2446              	.LBI188:
2111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2447              		.loc 2 2111 22 view .LVU667
 2448              	.LBB189:
2113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2449              		.loc 2 2113 3 view .LVU668
 2450 0264 0749     		ldr	r1, .L148+8
 2451 0266 0B68     		ldr	r3, [r1]
 2452 0268 0A48     		ldr	r0, .L148+24
 2453 026a 0340     		ands	r3, r0
 2454 026c 1A43     		orrs	r2, r3
 2455              	.LVL166:
2113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2456              		.loc 2 2113 3 is_stmt 0 view .LVU669
 2457 026e 0A60     		str	r2, [r1]
 2458              	.LBE189:
 2459              	.LBE188:
2169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2460              		.loc 1 2169 21 view .LVU670
 2461 0270 0020     		movs	r0, #0
 2462              	.LBB191:
 2463              	.LBB190:
2114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 2464              		.loc 2 2114 1 view .LVU671
 2465 0272 DFE6     		b	.L102
 2466              	.LVL167:
 2467              	.L137:
2114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 2468              		.loc 2 2114 1 view .LVU672
 2469              	.LBE190:
 2470              	.LBE191:
2169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2471              		.loc 1 2169 21 view .LVU673
 2472 0274 0020     		movs	r0, #0
 2473 0276 DDE6     		b	.L102
 2474              	.LVL168:
 2475              	.L117:
2190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2476              		.loc 1 2190 3 view .LVU674
 2477 0278 0220     		movs	r0, #2
 2478              	.LVL169:
2190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2479              		.loc 1 2190 3 view .LVU675
 2480 027a DEE6     		b	.L100
 2481              	.L149:
 2482              		.align	2
 2483              	.L148:
 2484 027c 04000080 		.word	-2147483644
 2485 0280 00FFFF07 		.word	134217472
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 189


 2486 0284 08270140 		.word	1073817352
 2487 0288 001000B0 		.word	-1342173184
 2488 028c 004000B8 		.word	-1207943168
 2489 0290 002000B4 		.word	-1275060224
 2490 0294 FFFF3FFE 		.word	-29360129
 2491 0298 00000000 		.word	SystemCoreClock
 2492 029c 400D0300 		.word	200000
 2493              		.cfi_endproc
 2494              	.LFE458:
 2496              		.section	.text.HAL_ADC_GetState,"ax",%progbits
 2497              		.align	1
 2498              		.global	HAL_ADC_GetState
 2499              		.syntax unified
 2500              		.code	16
 2501              		.thumb_func
 2503              	HAL_ADC_GetState:
 2504              	.LVL170:
 2505              	.LFB460:
2612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
 2506              		.loc 1 2612 1 is_stmt 1 view -0
 2507              		.cfi_startproc
 2508              		@ args = 0, pretend = 0, frame = 0
 2509              		@ frame_needed = 0, uses_anonymous_args = 0
 2510              		@ link register save eliminated.
2614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2511              		.loc 1 2614 3 view .LVU677
2617:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 2512              		.loc 1 2617 3 view .LVU678
2617:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 2513              		.loc 1 2617 14 is_stmt 0 view .LVU679
 2514 0000 806D     		ldr	r0, [r0, #88]
 2515              	.LVL171:
2618:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2516              		.loc 1 2618 1 view .LVU680
 2517              		@ sp needed
 2518 0002 7047     		bx	lr
 2519              		.cfi_endproc
 2520              	.LFE460:
 2522              		.section	.text.HAL_ADC_GetError,"ax",%progbits
 2523              		.align	1
 2524              		.global	HAL_ADC_GetError
 2525              		.syntax unified
 2526              		.code	16
 2527              		.thumb_func
 2529              	HAL_ADC_GetError:
 2530              	.LVL172:
 2531              	.LFB461:
2626:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
 2532              		.loc 1 2626 1 is_stmt 1 view -0
 2533              		.cfi_startproc
 2534              		@ args = 0, pretend = 0, frame = 0
 2535              		@ frame_needed = 0, uses_anonymous_args = 0
 2536              		@ link register save eliminated.
2628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2537              		.loc 1 2628 3 view .LVU682
2630:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 2538              		.loc 1 2630 3 view .LVU683
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 190


2630:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 2539              		.loc 1 2630 14 is_stmt 0 view .LVU684
 2540 0000 C06D     		ldr	r0, [r0, #92]
 2541              	.LVL173:
2631:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2542              		.loc 1 2631 1 view .LVU685
 2543              		@ sp needed
 2544 0002 7047     		bx	lr
 2545              		.cfi_endproc
 2546              	.LFE461:
 2548              		.section	.text.ADC_ConversionStop,"ax",%progbits
 2549              		.align	1
 2550              		.global	ADC_ConversionStop
 2551              		.syntax unified
 2552              		.code	16
 2553              		.thumb_func
 2555              	ADC_ConversionStop:
 2556              	.LVL174:
 2557              	.LFB462:
2653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
 2558              		.loc 1 2653 1 is_stmt 1 view -0
 2559              		.cfi_startproc
 2560              		@ args = 0, pretend = 0, frame = 0
 2561              		@ frame_needed = 0, uses_anonymous_args = 0
2653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
 2562              		.loc 1 2653 1 is_stmt 0 view .LVU687
 2563 0000 70B5     		push	{r4, r5, r6, lr}
 2564              	.LCFI10:
 2565              		.cfi_def_cfa_offset 16
 2566              		.cfi_offset 4, -16
 2567              		.cfi_offset 5, -12
 2568              		.cfi_offset 6, -8
 2569              		.cfi_offset 14, -4
 2570 0002 0400     		movs	r4, r0
2654:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2571              		.loc 1 2654 3 is_stmt 1 view .LVU688
2657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2572              		.loc 1 2657 3 view .LVU689
2661:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 2573              		.loc 1 2661 3 view .LVU690
2661:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 2574              		.loc 1 2661 42 is_stmt 0 view .LVU691
 2575 0004 0368     		ldr	r3, [r0]
 2576              	.LVL175:
 2577              	.LBB192:
 2578              	.LBI192:
4761:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2579              		.loc 2 4761 26 is_stmt 1 view .LVU692
 2580              	.LBB193:
 2581              		.loc 2 4763 3 view .LVU693
 2582              		.loc 2 4763 12 is_stmt 0 view .LVU694
 2583 0006 9A68     		ldr	r2, [r3, #8]
 2584              		.loc 2 4763 74 view .LVU695
 2585 0008 5207     		lsls	r2, r2, #29
 2586 000a 24D5     		bpl	.L157
 2587              	.LVL176:
 2588              		.loc 2 4763 74 view .LVU696
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 191


 2589              	.LBE193:
 2590              	.LBE192:
2665:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 2591              		.loc 1 2665 5 is_stmt 1 view .LVU697
 2592              	.LBB194:
 2593              	.LBI194:
4645:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2594              		.loc 2 4645 26 view .LVU698
 2595              	.LBB195:
4647:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2596              		.loc 2 4647 3 view .LVU699
4647:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2597              		.loc 2 4647 12 is_stmt 0 view .LVU700
 2598 000c 9A68     		ldr	r2, [r3, #8]
4647:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2599              		.loc 2 4647 70 view .LVU701
 2600 000e 9207     		lsls	r2, r2, #30
 2601 0010 05D4     		bmi	.L154
 2602              	.LVL177:
4647:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2603              		.loc 2 4647 70 view .LVU702
 2604              	.LBE195:
 2605              	.LBE194:
2668:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 2606              		.loc 1 2668 7 is_stmt 1 view .LVU703
 2607              	.LBB196:
 2608              	.LBI196:
4745:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2609              		.loc 2 4745 22 view .LVU704
 2610              	.LBB197:
4750:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 2611              		.loc 2 4750 3 view .LVU705
 2612 0012 9A68     		ldr	r2, [r3, #8]
 2613 0014 1149     		ldr	r1, .L159
 2614 0016 0A40     		ands	r2, r1
 2615 0018 1021     		movs	r1, #16
 2616 001a 0A43     		orrs	r2, r1
 2617 001c 9A60     		str	r2, [r3, #8]
 2618              	.LVL178:
 2619              	.L154:
4750:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 2620              		.loc 2 4750 3 is_stmt 0 view .LVU706
 2621              	.LBE197:
 2622              	.LBE196:
2673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2623              		.loc 1 2673 5 is_stmt 1 view .LVU707
2673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2624              		.loc 1 2673 17 is_stmt 0 view .LVU708
 2625 001e FFF7FEFF 		bl	HAL_GetTick
 2626              	.LVL179:
2673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2627              		.loc 1 2673 17 view .LVU709
 2628 0022 0500     		movs	r5, r0
 2629              	.LVL180:
2675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 2630              		.loc 1 2675 5 is_stmt 1 view .LVU710
 2631              	.L155:
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 192


2675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 2632              		.loc 1 2675 11 view .LVU711
2675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 2633              		.loc 1 2675 17 is_stmt 0 view .LVU712
 2634 0024 2368     		ldr	r3, [r4]
2675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 2635              		.loc 1 2675 27 view .LVU713
 2636 0026 9B68     		ldr	r3, [r3, #8]
2675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 2637              		.loc 1 2675 11 view .LVU714
 2638 0028 5B07     		lsls	r3, r3, #29
 2639 002a 12D5     		bpl	.L158
2677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2640              		.loc 1 2677 7 is_stmt 1 view .LVU715
2677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2641              		.loc 1 2677 12 is_stmt 0 view .LVU716
 2642 002c FFF7FEFF 		bl	HAL_GetTick
 2643              	.LVL181:
2677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2644              		.loc 1 2677 26 view .LVU717
 2645 0030 401B     		subs	r0, r0, r5
2677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2646              		.loc 1 2677 10 view .LVU718
 2647 0032 0228     		cmp	r0, #2
 2648 0034 F6D9     		bls	.L155
2680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2649              		.loc 1 2680 9 is_stmt 1 view .LVU719
2680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2650              		.loc 1 2680 18 is_stmt 0 view .LVU720
 2651 0036 2368     		ldr	r3, [r4]
2680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2652              		.loc 1 2680 28 view .LVU721
 2653 0038 9B68     		ldr	r3, [r3, #8]
2680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2654              		.loc 1 2680 12 view .LVU722
 2655 003a 5B07     		lsls	r3, r3, #29
 2656 003c F2D5     		bpl	.L155
2683:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2657              		.loc 1 2683 11 is_stmt 1 view .LVU723
 2658 003e A36D     		ldr	r3, [r4, #88]
 2659 0040 1022     		movs	r2, #16
 2660 0042 1343     		orrs	r3, r2
 2661 0044 A365     		str	r3, [r4, #88]
2686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2662              		.loc 1 2686 11 view .LVU724
 2663 0046 E36D     		ldr	r3, [r4, #92]
 2664 0048 0F3A     		subs	r2, r2, #15
 2665 004a 1343     		orrs	r3, r2
 2666 004c E365     		str	r3, [r4, #92]
2688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 2667              		.loc 1 2688 11 view .LVU725
2688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 2668              		.loc 1 2688 18 is_stmt 0 view .LVU726
 2669 004e 0120     		movs	r0, #1
 2670 0050 02E0     		b	.L153
 2671              	.L158:
2696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 193


 2672              		.loc 1 2696 10 view .LVU727
 2673 0052 0020     		movs	r0, #0
 2674 0054 00E0     		b	.L153
 2675              	.LVL182:
 2676              	.L157:
2696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 2677              		.loc 1 2696 10 view .LVU728
 2678 0056 0020     		movs	r0, #0
 2679              	.LVL183:
 2680              	.L153:
2697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2681              		.loc 1 2697 1 view .LVU729
 2682              		@ sp needed
 2683              	.LVL184:
2697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2684              		.loc 1 2697 1 view .LVU730
 2685 0058 70BD     		pop	{r4, r5, r6, pc}
 2686              	.L160:
 2687 005a C046     		.align	2
 2688              	.L159:
 2689 005c E8FFFF7F 		.word	2147483624
 2690              		.cfi_endproc
 2691              	.LFE462:
 2693              		.section	.text.ADC_Enable,"ax",%progbits
 2694              		.align	1
 2695              		.global	ADC_Enable
 2696              		.syntax unified
 2697              		.code	16
 2698              		.thumb_func
 2700              	ADC_Enable:
 2701              	.LVL185:
 2702              	.LFB463:
2707:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
 2703              		.loc 1 2707 1 is_stmt 1 view -0
 2704              		.cfi_startproc
 2705              		@ args = 0, pretend = 0, frame = 8
 2706              		@ frame_needed = 0, uses_anonymous_args = 0
2707:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
 2707              		.loc 1 2707 1 is_stmt 0 view .LVU732
 2708 0000 30B5     		push	{r4, r5, lr}
 2709              	.LCFI11:
 2710              		.cfi_def_cfa_offset 12
 2711              		.cfi_offset 4, -12
 2712              		.cfi_offset 5, -8
 2713              		.cfi_offset 14, -4
 2714 0002 83B0     		sub	sp, sp, #12
 2715              	.LCFI12:
 2716              		.cfi_def_cfa_offset 24
 2717 0004 0400     		movs	r4, r0
2708:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 2718              		.loc 1 2708 3 is_stmt 1 view .LVU733
2709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2719              		.loc 1 2709 3 view .LVU734
2709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2720              		.loc 1 2709 17 is_stmt 0 view .LVU735
 2721 0006 0023     		movs	r3, #0
 2722 0008 0193     		str	r3, [sp, #4]
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 194


2715:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 2723              		.loc 1 2715 3 is_stmt 1 view .LVU736
2715:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 2724              		.loc 1 2715 28 is_stmt 0 view .LVU737
 2725 000a 0368     		ldr	r3, [r0]
 2726              	.LVL186:
 2727              	.LBB198:
 2728              	.LBI198:
4634:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2729              		.loc 2 4634 26 is_stmt 1 view .LVU738
 2730              	.LBB199:
4636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2731              		.loc 2 4636 3 view .LVU739
4636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2732              		.loc 2 4636 12 is_stmt 0 view .LVU740
 2733 000c 9A68     		ldr	r2, [r3, #8]
4636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2734              		.loc 2 4636 68 view .LVU741
 2735 000e D207     		lsls	r2, r2, #31
 2736 0010 4FD4     		bmi	.L170
 2737              	.LVL187:
4636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2738              		.loc 2 4636 68 view .LVU742
 2739              	.LBE199:
 2740              	.LBE198:
2718:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 2741              		.loc 1 2718 5 is_stmt 1 view .LVU743
2718:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 2742              		.loc 1 2718 24 is_stmt 0 view .LVU744
 2743 0012 9968     		ldr	r1, [r3, #8]
2718:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 2744              		.loc 1 2718 29 view .LVU745
 2745 0014 284A     		ldr	r2, .L175
2718:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 2746              		.loc 1 2718 8 view .LVU746
 2747 0016 1142     		tst	r1, r2
 2748 0018 11D1     		bne	.L172
2730:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2749              		.loc 1 2730 5 is_stmt 1 view .LVU747
 2750              	.LVL188:
 2751              	.LBB200:
 2752              	.LBI200:
4595:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2753              		.loc 2 4595 22 view .LVU748
 2754              	.LBB201:
4600:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 2755              		.loc 2 4600 3 view .LVU749
 2756 001a 9A68     		ldr	r2, [r3, #8]
 2757 001c 2749     		ldr	r1, .L175+4
 2758 001e 0A40     		ands	r2, r1
 2759 0020 0121     		movs	r1, #1
 2760 0022 0A43     		orrs	r2, r1
 2761 0024 9A60     		str	r2, [r3, #8]
 2762              	.LVL189:
4600:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 2763              		.loc 2 4600 3 is_stmt 0 view .LVU750
 2764              	.LBE201:
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 195


 2765              	.LBE200:
2732:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         != 0UL)
 2766              		.loc 1 2732 5 is_stmt 1 view .LVU751
 2767              	.LBB202:
 2768              	.LBI202:
2205:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2769              		.loc 2 2205 26 view .LVU752
 2770              	.LBB203:
2207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2771              		.loc 2 2207 3 view .LVU753
2207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2772              		.loc 2 2207 21 is_stmt 0 view .LVU754
 2773 0026 264B     		ldr	r3, .L175+8
 2774 0028 1B68     		ldr	r3, [r3]
 2775              	.LVL190:
2207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2776              		.loc 2 2207 21 view .LVU755
 2777              	.LBE203:
 2778              	.LBE202:
2732:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         != 0UL)
 2779              		.loc 1 2732 8 view .LVU756
 2780 002a 1B02     		lsls	r3, r3, #8
 2781 002c 17D5     		bpl	.L164
2740:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                          * ((SystemCoreClock / (100000UL * 2UL)) + 1UL));
 2782              		.loc 1 2740 7 is_stmt 1 view .LVU757
2741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       while (wait_loop_index != 0UL)
 2783              		.loc 1 2741 46 is_stmt 0 view .LVU758
 2784 002e 254B     		ldr	r3, .L175+12
 2785 0030 1868     		ldr	r0, [r3]
 2786              	.LVL191:
2741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       while (wait_loop_index != 0UL)
 2787              		.loc 1 2741 46 view .LVU759
 2788 0032 2549     		ldr	r1, .L175+16
 2789 0034 FFF7FEFF 		bl	__aeabi_uidiv
 2790              	.LVL192:
2741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       while (wait_loop_index != 0UL)
 2791              		.loc 1 2741 26 view .LVU760
 2792 0038 0130     		adds	r0, r0, #1
2740:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                          * ((SystemCoreClock / (100000UL * 2UL)) + 1UL));
 2793              		.loc 1 2740 23 view .LVU761
 2794 003a 0190     		str	r0, [sp, #4]
2742:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2795              		.loc 1 2742 7 is_stmt 1 view .LVU762
2742:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2796              		.loc 1 2742 13 is_stmt 0 view .LVU763
 2797 003c 0CE0     		b	.L165
 2798              	.LVL193:
 2799              	.L172:
2721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2800              		.loc 1 2721 7 is_stmt 1 view .LVU764
 2801 003e 836D     		ldr	r3, [r0, #88]
 2802 0040 1022     		movs	r2, #16
 2803 0042 1343     		orrs	r3, r2
 2804 0044 8365     		str	r3, [r0, #88]
2724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2805              		.loc 1 2724 7 view .LVU765
 2806 0046 C36D     		ldr	r3, [r0, #92]
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 196


 2807 0048 0F3A     		subs	r2, r2, #15
 2808 004a 1343     		orrs	r3, r2
 2809 004c C365     		str	r3, [r0, #92]
2726:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 2810              		.loc 1 2726 7 view .LVU766
2726:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 2811              		.loc 1 2726 14 is_stmt 0 view .LVU767
 2812 004e 0120     		movs	r0, #1
 2813              	.LVL194:
2726:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 2814              		.loc 1 2726 14 view .LVU768
 2815 0050 30E0     		b	.L162
 2816              	.L166:
2744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 2817              		.loc 1 2744 9 is_stmt 1 view .LVU769
2744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 2818              		.loc 1 2744 24 is_stmt 0 view .LVU770
 2819 0052 019B     		ldr	r3, [sp, #4]
 2820 0054 013B     		subs	r3, r3, #1
 2821 0056 0193     		str	r3, [sp, #4]
 2822              	.L165:
2742:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2823              		.loc 1 2742 13 is_stmt 1 view .LVU771
2742:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2824              		.loc 1 2742 30 is_stmt 0 view .LVU772
 2825 0058 019B     		ldr	r3, [sp, #4]
2742:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2826              		.loc 1 2742 13 view .LVU773
 2827 005a 002B     		cmp	r3, #0
 2828 005c F9D1     		bne	.L166
 2829              	.L164:
2750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 2830              		.loc 1 2750 5 is_stmt 1 view .LVU774
2750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 2831              		.loc 1 2750 19 is_stmt 0 view .LVU775
 2832 005e 637E     		ldrb	r3, [r4, #25]
2750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 2833              		.loc 1 2750 8 view .LVU776
 2834 0060 012B     		cmp	r3, #1
 2835 0062 01D1     		bne	.L173
2789:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 2836              		.loc 1 2789 10 view .LVU777
 2837 0064 0020     		movs	r0, #0
 2838 0066 25E0     		b	.L162
 2839              	.L173:
2753:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2840              		.loc 1 2753 7 is_stmt 1 view .LVU778
2753:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2841              		.loc 1 2753 19 is_stmt 0 view .LVU779
 2842 0068 FFF7FEFF 		bl	HAL_GetTick
 2843              	.LVL195:
 2844 006c 0500     		movs	r5, r0
 2845              	.LVL196:
2755:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2846              		.loc 1 2755 7 is_stmt 1 view .LVU780
 2847              	.L167:
2755:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 197


 2848              		.loc 1 2755 13 view .LVU781
2755:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2849              		.loc 1 2755 14 is_stmt 0 view .LVU782
 2850 006e 2368     		ldr	r3, [r4]
 2851 0070 1A68     		ldr	r2, [r3]
2755:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2852              		.loc 1 2755 13 view .LVU783
 2853 0072 D207     		lsls	r2, r2, #31
 2854 0074 1BD4     		bmi	.L174
2765:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2855              		.loc 1 2765 9 is_stmt 1 view .LVU784
 2856              	.LVL197:
 2857              	.LBB204:
 2858              	.LBI204:
4634:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2859              		.loc 2 4634 26 view .LVU785
 2860              	.LBB205:
4636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2861              		.loc 2 4636 3 view .LVU786
4636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2862              		.loc 2 4636 12 is_stmt 0 view .LVU787
 2863 0076 9A68     		ldr	r2, [r3, #8]
4636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2864              		.loc 2 4636 68 view .LVU788
 2865 0078 D207     		lsls	r2, r2, #31
 2866 007a 05D4     		bmi	.L168
 2867              	.LVL198:
4636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2868              		.loc 2 4636 68 view .LVU789
 2869              	.LBE205:
 2870              	.LBE204:
2767:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 2871              		.loc 1 2767 11 is_stmt 1 view .LVU790
 2872              	.LBB206:
 2873              	.LBI206:
4595:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2874              		.loc 2 4595 22 view .LVU791
 2875              	.LBB207:
4600:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 2876              		.loc 2 4600 3 view .LVU792
 2877 007c 9A68     		ldr	r2, [r3, #8]
 2878 007e 0F49     		ldr	r1, .L175+4
 2879 0080 0A40     		ands	r2, r1
 2880 0082 0121     		movs	r1, #1
 2881 0084 0A43     		orrs	r2, r1
 2882 0086 9A60     		str	r2, [r3, #8]
 2883              	.LVL199:
 2884              	.L168:
4600:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 2885              		.loc 2 4600 3 is_stmt 0 view .LVU793
 2886              	.LBE207:
 2887              	.LBE206:
2770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2888              		.loc 1 2770 9 is_stmt 1 view .LVU794
2770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2889              		.loc 1 2770 14 is_stmt 0 view .LVU795
 2890 0088 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 198


 2891              	.LVL200:
2770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2892              		.loc 1 2770 28 view .LVU796
 2893 008c 401B     		subs	r0, r0, r5
2770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2894              		.loc 1 2770 12 view .LVU797
 2895 008e 0228     		cmp	r0, #2
 2896 0090 EDD9     		bls	.L167
2773:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           {
 2897              		.loc 1 2773 11 is_stmt 1 view .LVU798
2773:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           {
 2898              		.loc 1 2773 15 is_stmt 0 view .LVU799
 2899 0092 2368     		ldr	r3, [r4]
 2900 0094 1B68     		ldr	r3, [r3]
2773:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           {
 2901              		.loc 1 2773 14 view .LVU800
 2902 0096 DB07     		lsls	r3, r3, #31
 2903 0098 E9D4     		bmi	.L167
2776:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2904              		.loc 1 2776 13 is_stmt 1 view .LVU801
 2905 009a A36D     		ldr	r3, [r4, #88]
 2906 009c 1022     		movs	r2, #16
 2907 009e 1343     		orrs	r3, r2
 2908 00a0 A365     		str	r3, [r4, #88]
2779:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2909              		.loc 1 2779 13 view .LVU802
 2910 00a2 E36D     		ldr	r3, [r4, #92]
 2911 00a4 0F3A     		subs	r2, r2, #15
 2912 00a6 1343     		orrs	r3, r2
 2913 00a8 E365     		str	r3, [r4, #92]
2781:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 2914              		.loc 1 2781 13 view .LVU803
2781:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 2915              		.loc 1 2781 20 is_stmt 0 view .LVU804
 2916 00aa 0120     		movs	r0, #1
 2917 00ac 02E0     		b	.L162
 2918              	.L174:
2789:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 2919              		.loc 1 2789 10 view .LVU805
 2920 00ae 0020     		movs	r0, #0
 2921 00b0 00E0     		b	.L162
 2922              	.LVL201:
 2923              	.L170:
2789:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 2924              		.loc 1 2789 10 view .LVU806
 2925 00b2 0020     		movs	r0, #0
 2926              	.LVL202:
 2927              	.L162:
2790:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2928              		.loc 1 2790 1 view .LVU807
 2929 00b4 03B0     		add	sp, sp, #12
 2930              		@ sp needed
 2931              	.LVL203:
2790:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2932              		.loc 1 2790 1 view .LVU808
 2933 00b6 30BD     		pop	{r4, r5, pc}
 2934              	.L176:
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 199


 2935              		.align	2
 2936              	.L175:
 2937 00b8 17000080 		.word	-2147483625
 2938 00bc E8FFFF7F 		.word	2147483624
 2939 00c0 08270140 		.word	1073817352
 2940 00c4 00000000 		.word	SystemCoreClock
 2941 00c8 400D0300 		.word	200000
 2942              		.cfi_endproc
 2943              	.LFE463:
 2945              		.section	.text.HAL_ADC_Start,"ax",%progbits
 2946              		.align	1
 2947              		.global	HAL_ADC_Start
 2948              		.syntax unified
 2949              		.code	16
 2950              		.thumb_func
 2952              	HAL_ADC_Start:
 2953              	.LVL204:
 2954              	.LFB444:
1147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 2955              		.loc 1 1147 1 is_stmt 1 view -0
 2956              		.cfi_startproc
 2957              		@ args = 0, pretend = 0, frame = 0
 2958              		@ frame_needed = 0, uses_anonymous_args = 0
1147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 2959              		.loc 1 1147 1 is_stmt 0 view .LVU810
 2960 0000 10B5     		push	{r4, lr}
 2961              	.LCFI13:
 2962              		.cfi_def_cfa_offset 8
 2963              		.cfi_offset 4, -8
 2964              		.cfi_offset 14, -4
 2965 0002 0400     		movs	r4, r0
1148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2966              		.loc 1 1148 3 is_stmt 1 view .LVU811
1151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2967              		.loc 1 1151 3 view .LVU812
1154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 2968              		.loc 1 1154 3 view .LVU813
1154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 2969              		.loc 1 1154 42 is_stmt 0 view .LVU814
 2970 0004 0368     		ldr	r3, [r0]
 2971              	.LVL205:
 2972              	.LBB208:
 2973              	.LBI208:
4761:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2974              		.loc 2 4761 26 is_stmt 1 view .LVU815
 2975              	.LBB209:
 2976              		.loc 2 4763 3 view .LVU816
 2977              		.loc 2 4763 12 is_stmt 0 view .LVU817
 2978 0006 9B68     		ldr	r3, [r3, #8]
 2979              	.LVL206:
 2980              		.loc 2 4763 74 view .LVU818
 2981 0008 5B07     		lsls	r3, r3, #29
 2982 000a 24D4     		bmi	.L180
 2983              	.LVL207:
 2984              		.loc 2 4763 74 view .LVU819
 2985              	.LBE209:
 2986              	.LBE208:
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 200


1156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2987              		.loc 1 1156 5 is_stmt 1 view .LVU820
1156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2988              		.loc 1 1156 5 view .LVU821
 2989 000c 5423     		movs	r3, #84
 2990 000e C35C     		ldrb	r3, [r0, r3]
 2991 0010 012B     		cmp	r3, #1
 2992 0012 22D0     		beq	.L181
1156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2993              		.loc 1 1156 5 discriminator 2 view .LVU822
 2994 0014 5423     		movs	r3, #84
 2995 0016 0122     		movs	r2, #1
 2996 0018 C254     		strb	r2, [r0, r3]
1156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2997              		.loc 1 1156 5 discriminator 2 view .LVU823
1159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2998              		.loc 1 1159 5 discriminator 2 view .LVU824
1159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2999              		.loc 1 1159 22 is_stmt 0 discriminator 2 view .LVU825
 3000 001a FFF7FEFF 		bl	ADC_Enable
 3001              	.LVL208:
1162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3002              		.loc 1 1162 5 is_stmt 1 discriminator 2 view .LVU826
1162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3003              		.loc 1 1162 8 is_stmt 0 discriminator 2 view .LVU827
 3004 001e 0028     		cmp	r0, #0
 3005 0020 15D1     		bne	.L179
1167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 3006              		.loc 1 1167 7 is_stmt 1 view .LVU828
 3007 0022 A36D     		ldr	r3, [r4, #88]
 3008 0024 0E4A     		ldr	r2, .L182
 3009 0026 1A40     		ands	r2, r3
 3010 0028 8023     		movs	r3, #128
 3011 002a 5B00     		lsls	r3, r3, #1
 3012 002c 1343     		orrs	r3, r2
 3013 002e A365     		str	r3, [r4, #88]
1173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3014              		.loc 1 1173 7 view .LVU829
 3015 0030 0023     		movs	r3, #0
 3016 0032 E365     		str	r3, [r4, #92]
1177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3017              		.loc 1 1177 7 view .LVU830
 3018 0034 2268     		ldr	r2, [r4]
 3019 0036 1C21     		movs	r1, #28
 3020 0038 1160     		str	r1, [r2]
1182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3021              		.loc 1 1182 7 view .LVU831
1182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3022              		.loc 1 1182 7 view .LVU832
 3023 003a 5422     		movs	r2, #84
 3024 003c A354     		strb	r3, [r4, r2]
1182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3025              		.loc 1 1182 7 view .LVU833
1189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3026              		.loc 1 1189 7 view .LVU834
 3027 003e 2268     		ldr	r2, [r4]
 3028              	.LVL209:
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 201


 3029              	.LBB210:
 3030              	.LBI210:
4725:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 3031              		.loc 2 4725 22 view .LVU835
 3032              	.LBB211:
4730:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3033              		.loc 2 4730 3 view .LVU836
 3034 0040 9368     		ldr	r3, [r2, #8]
 3035 0042 0849     		ldr	r1, .L182+4
 3036 0044 0B40     		ands	r3, r1
 3037 0046 0421     		movs	r1, #4
 3038 0048 0B43     		orrs	r3, r1
 3039 004a 9360     		str	r3, [r2, #8]
4733:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 3040              		.loc 2 4733 1 is_stmt 0 view .LVU837
 3041 004c 04E0     		b	.L178
 3042              	.LVL210:
 3043              	.L179:
4733:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 3044              		.loc 2 4733 1 view .LVU838
 3045              	.LBE211:
 3046              	.LBE210:
1193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3047              		.loc 1 1193 7 is_stmt 1 view .LVU839
1193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3048              		.loc 1 1193 7 view .LVU840
 3049 004e 5423     		movs	r3, #84
 3050 0050 0022     		movs	r2, #0
 3051 0052 E254     		strb	r2, [r4, r3]
 3052 0054 00E0     		b	.L178
 3053              	.LVL211:
 3054              	.L180:
1198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 3055              		.loc 1 1198 20 is_stmt 0 view .LVU841
 3056 0056 0220     		movs	r0, #2
 3057              	.LVL212:
 3058              	.L178:
1202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3059              		.loc 1 1202 1 view .LVU842
 3060              		@ sp needed
 3061              	.LVL213:
1202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3062              		.loc 1 1202 1 view .LVU843
 3063 0058 10BD     		pop	{r4, pc}
 3064              	.LVL214:
 3065              	.L181:
1156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3066              		.loc 1 1156 5 view .LVU844
 3067 005a 0220     		movs	r0, #2
 3068              	.LVL215:
1156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3069              		.loc 1 1156 5 view .LVU845
 3070 005c FCE7     		b	.L178
 3071              	.L183:
 3072 005e C046     		.align	2
 3073              	.L182:
 3074 0060 FEF0FFFF 		.word	-3842
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 202


 3075 0064 E8FFFF7F 		.word	2147483624
 3076              		.cfi_endproc
 3077              	.LFE444:
 3079              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 3080              		.align	1
 3081              		.global	HAL_ADC_Start_IT
 3082              		.syntax unified
 3083              		.code	16
 3084              		.thumb_func
 3086              	HAL_ADC_Start_IT:
 3087              	.LVL216:
 3088              	.LFB448:
1528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3089              		.loc 1 1528 1 is_stmt 1 view -0
 3090              		.cfi_startproc
 3091              		@ args = 0, pretend = 0, frame = 0
 3092              		@ frame_needed = 0, uses_anonymous_args = 0
1528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3093              		.loc 1 1528 1 is_stmt 0 view .LVU847
 3094 0000 10B5     		push	{r4, lr}
 3095              	.LCFI14:
 3096              		.cfi_def_cfa_offset 8
 3097              		.cfi_offset 4, -8
 3098              		.cfi_offset 14, -4
 3099 0002 0400     		movs	r4, r0
1529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3100              		.loc 1 1529 3 is_stmt 1 view .LVU848
1532:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3101              		.loc 1 1532 3 view .LVU849
1535:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3102              		.loc 1 1535 3 view .LVU850
1535:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3103              		.loc 1 1535 42 is_stmt 0 view .LVU851
 3104 0004 0368     		ldr	r3, [r0]
 3105              	.LVL217:
 3106              	.LBB212:
 3107              	.LBI212:
4761:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 3108              		.loc 2 4761 26 is_stmt 1 view .LVU852
 3109              	.LBB213:
 3110              		.loc 2 4763 3 view .LVU853
 3111              		.loc 2 4763 12 is_stmt 0 view .LVU854
 3112 0006 9B68     		ldr	r3, [r3, #8]
 3113              	.LVL218:
 3114              		.loc 2 4763 74 view .LVU855
 3115 0008 5B07     		lsls	r3, r3, #29
 3116 000a 3ED4     		bmi	.L190
 3117              	.LVL219:
 3118              		.loc 2 4763 74 view .LVU856
 3119              	.LBE213:
 3120              	.LBE212:
1537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3121              		.loc 1 1537 5 is_stmt 1 view .LVU857
1537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3122              		.loc 1 1537 5 view .LVU858
 3123 000c 5423     		movs	r3, #84
 3124 000e C35C     		ldrb	r3, [r0, r3]
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 203


 3125 0010 012B     		cmp	r3, #1
 3126 0012 3CD0     		beq	.L191
1537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3127              		.loc 1 1537 5 discriminator 2 view .LVU859
 3128 0014 5423     		movs	r3, #84
 3129 0016 0122     		movs	r2, #1
 3130 0018 C254     		strb	r2, [r0, r3]
1537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3131              		.loc 1 1537 5 discriminator 2 view .LVU860
1540:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3132              		.loc 1 1540 5 discriminator 2 view .LVU861
1540:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3133              		.loc 1 1540 22 is_stmt 0 discriminator 2 view .LVU862
 3134 001a FFF7FEFF 		bl	ADC_Enable
 3135              	.LVL220:
1543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3136              		.loc 1 1543 5 is_stmt 1 discriminator 2 view .LVU863
1543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3137              		.loc 1 1543 8 is_stmt 0 discriminator 2 view .LVU864
 3138 001e 0028     		cmp	r0, #0
 3139 0020 2FD1     		bne	.L186
1548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 3140              		.loc 1 1548 7 is_stmt 1 view .LVU865
 3141 0022 A36D     		ldr	r3, [r4, #88]
 3142 0024 1B4A     		ldr	r2, .L193
 3143 0026 1A40     		ands	r2, r3
 3144 0028 8023     		movs	r3, #128
 3145 002a 5B00     		lsls	r3, r3, #1
 3146 002c 1343     		orrs	r3, r2
 3147 002e A365     		str	r3, [r4, #88]
1555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3148              		.loc 1 1555 7 view .LVU866
 3149 0030 0023     		movs	r3, #0
 3150 0032 E365     		str	r3, [r4, #92]
1559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3151              		.loc 1 1559 7 view .LVU867
 3152 0034 2268     		ldr	r2, [r4]
 3153 0036 1C21     		movs	r1, #28
 3154 0038 1160     		str	r1, [r2]
1564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3155              		.loc 1 1564 7 view .LVU868
1564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3156              		.loc 1 1564 7 view .LVU869
 3157 003a 5422     		movs	r2, #84
 3158 003c A354     		strb	r3, [r4, r2]
1564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3159              		.loc 1 1564 7 view .LVU870
1567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3160              		.loc 1 1567 7 view .LVU871
 3161 003e 2268     		ldr	r2, [r4]
 3162 0040 5368     		ldr	r3, [r2, #4]
 3163 0042 8B43     		bics	r3, r1
 3164 0044 5360     		str	r3, [r2, #4]
1570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 3165              		.loc 1 1570 7 view .LVU872
 3166 0046 6369     		ldr	r3, [r4, #20]
 3167 0048 082B     		cmp	r3, #8
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 204


 3168 004a 14D0     		beq	.L192
1577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
 3169              		.loc 1 1577 11 view .LVU873
 3170 004c 2268     		ldr	r2, [r4]
 3171 004e 5368     		ldr	r3, [r2, #4]
 3172 0050 0421     		movs	r1, #4
 3173 0052 0B43     		orrs	r3, r1
 3174 0054 5360     		str	r3, [r2, #4]
1578:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 3175              		.loc 1 1578 11 view .LVU874
 3176              	.L188:
1585:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 3177              		.loc 1 1585 7 view .LVU875
1585:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 3178              		.loc 1 1585 10 is_stmt 0 view .LVU876
 3179 0056 236B     		ldr	r3, [r4, #48]
 3180 0058 002B     		cmp	r3, #0
 3181 005a 04D1     		bne	.L189
1587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 3182              		.loc 1 1587 9 is_stmt 1 view .LVU877
 3183 005c 2268     		ldr	r2, [r4]
 3184 005e 5368     		ldr	r3, [r2, #4]
 3185 0060 1021     		movs	r1, #16
 3186 0062 0B43     		orrs	r3, r1
 3187 0064 5360     		str	r3, [r2, #4]
 3188              	.L189:
1595:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3189              		.loc 1 1595 7 view .LVU878
 3190 0066 2268     		ldr	r2, [r4]
 3191              	.LVL221:
 3192              	.LBB214:
 3193              	.LBI214:
4725:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 3194              		.loc 2 4725 22 view .LVU879
 3195              	.LBB215:
4730:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3196              		.loc 2 4730 3 view .LVU880
 3197 0068 9368     		ldr	r3, [r2, #8]
 3198 006a 0B49     		ldr	r1, .L193+4
 3199 006c 0B40     		ands	r3, r1
 3200 006e 0421     		movs	r1, #4
 3201 0070 0B43     		orrs	r3, r1
 3202 0072 9360     		str	r3, [r2, #8]
4733:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 3203              		.loc 2 4733 1 is_stmt 0 view .LVU881
 3204 0074 0AE0     		b	.L185
 3205              	.LVL222:
 3206              	.L192:
4733:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 3207              		.loc 2 4733 1 view .LVU882
 3208              	.LBE215:
 3209              	.LBE214:
1573:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
 3210              		.loc 1 1573 11 is_stmt 1 view .LVU883
 3211 0076 2268     		ldr	r2, [r4]
 3212 0078 5368     		ldr	r3, [r2, #4]
 3213 007a 1439     		subs	r1, r1, #20
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 205


 3214 007c 0B43     		orrs	r3, r1
 3215 007e 5360     		str	r3, [r2, #4]
1574:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* case ADC_EOC_SINGLE_CONV */
 3216              		.loc 1 1574 11 view .LVU884
 3217 0080 E9E7     		b	.L188
 3218              	.L186:
1599:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3219              		.loc 1 1599 7 view .LVU885
1599:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3220              		.loc 1 1599 7 view .LVU886
 3221 0082 5423     		movs	r3, #84
 3222 0084 0022     		movs	r2, #0
 3223 0086 E254     		strb	r2, [r4, r3]
 3224 0088 00E0     		b	.L185
 3225              	.LVL223:
 3226              	.L190:
1605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 3227              		.loc 1 1605 20 is_stmt 0 view .LVU887
 3228 008a 0220     		movs	r0, #2
 3229              	.LVL224:
 3230              	.L185:
1609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3231              		.loc 1 1609 1 view .LVU888
 3232              		@ sp needed
 3233              	.LVL225:
1609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3234              		.loc 1 1609 1 view .LVU889
 3235 008c 10BD     		pop	{r4, pc}
 3236              	.LVL226:
 3237              	.L191:
1537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3238              		.loc 1 1537 5 view .LVU890
 3239 008e 0220     		movs	r0, #2
 3240              	.LVL227:
1537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3241              		.loc 1 1537 5 view .LVU891
 3242 0090 FCE7     		b	.L185
 3243              	.L194:
 3244 0092 C046     		.align	2
 3245              	.L193:
 3246 0094 FEF0FFFF 		.word	-3842
 3247 0098 E8FFFF7F 		.word	2147483624
 3248              		.cfi_endproc
 3249              	.LFE448:
 3251              		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 3252              		.align	1
 3253              		.global	HAL_ADC_Start_DMA
 3254              		.syntax unified
 3255              		.code	16
 3256              		.thumb_func
 3258              	HAL_ADC_Start_DMA:
 3259              	.LVL228:
 3260              	.LFB450:
1666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3261              		.loc 1 1666 1 is_stmt 1 view -0
 3262              		.cfi_startproc
 3263              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 206


 3264              		@ frame_needed = 0, uses_anonymous_args = 0
1666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3265              		.loc 1 1666 1 is_stmt 0 view .LVU893
 3266 0000 70B5     		push	{r4, r5, r6, lr}
 3267              	.LCFI15:
 3268              		.cfi_def_cfa_offset 16
 3269              		.cfi_offset 4, -16
 3270              		.cfi_offset 5, -12
 3271              		.cfi_offset 6, -8
 3272              		.cfi_offset 14, -4
 3273 0002 0400     		movs	r4, r0
 3274 0004 0D00     		movs	r5, r1
 3275 0006 1600     		movs	r6, r2
1667:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3276              		.loc 1 1667 3 is_stmt 1 view .LVU894
1670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3277              		.loc 1 1670 3 view .LVU895
1673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3278              		.loc 1 1673 3 view .LVU896
1673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3279              		.loc 1 1673 42 is_stmt 0 view .LVU897
 3280 0008 0368     		ldr	r3, [r0]
 3281              	.LVL229:
 3282              	.LBB216:
 3283              	.LBI216:
4761:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 3284              		.loc 2 4761 26 is_stmt 1 view .LVU898
 3285              	.LBB217:
 3286              		.loc 2 4763 3 view .LVU899
 3287              		.loc 2 4763 12 is_stmt 0 view .LVU900
 3288 000a 9A68     		ldr	r2, [r3, #8]
 3289              	.LVL230:
 3290              		.loc 2 4763 74 view .LVU901
 3291 000c 5207     		lsls	r2, r2, #29
 3292 000e 47D4     		bmi	.L199
 3293              	.LVL231:
 3294              		.loc 2 4763 74 view .LVU902
 3295              	.LBE217:
 3296              	.LBE216:
1675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3297              		.loc 1 1675 5 is_stmt 1 view .LVU903
1675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3298              		.loc 1 1675 5 view .LVU904
 3299 0010 5422     		movs	r2, #84
 3300 0012 825C     		ldrb	r2, [r0, r2]
 3301 0014 012A     		cmp	r2, #1
 3302 0016 45D0     		beq	.L200
1675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3303              		.loc 1 1675 5 discriminator 2 view .LVU905
 3304 0018 0122     		movs	r2, #1
 3305 001a 5421     		movs	r1, #84
 3306              	.LVL232:
1675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3307              		.loc 1 1675 5 is_stmt 0 discriminator 2 view .LVU906
 3308 001c 4254     		strb	r2, [r0, r1]
1675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3309              		.loc 1 1675 5 is_stmt 1 discriminator 2 view .LVU907
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 207


1680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3310              		.loc 1 1680 5 discriminator 2 view .LVU908
1680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3311              		.loc 1 1680 24 is_stmt 0 discriminator 2 view .LVU909
 3312 001e D968     		ldr	r1, [r3, #12]
1680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3313              		.loc 1 1680 8 discriminator 2 view .LVU910
 3314 0020 0A42     		tst	r2, r1
 3315 0022 0DD1     		bne	.L197
1682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 3316              		.loc 1 1682 7 is_stmt 1 view .LVU911
 3317              	.LVL233:
 3318              	.LBB218:
 3319              	.LBI218:
4634:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 3320              		.loc 2 4634 26 view .LVU912
 3321              	.LBB219:
4636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3322              		.loc 2 4636 3 view .LVU913
4636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3323              		.loc 2 4636 12 is_stmt 0 view .LVU914
 3324 0024 9A68     		ldr	r2, [r3, #8]
4636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3325              		.loc 2 4636 68 view .LVU915
 3326 0026 D207     		lsls	r2, r2, #31
 3327 0028 05D5     		bpl	.L198
 3328              	.LVL234:
4636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3329              		.loc 2 4636 68 view .LVU916
 3330              	.LBE219:
 3331              	.LBE218:
1685:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 3332              		.loc 1 1685 9 is_stmt 1 view .LVU917
 3333              	.LBB220:
 3334              	.LBI220:
4615:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 3335              		.loc 2 4615 22 view .LVU918
 3336              	.LBB221:
4620:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3337              		.loc 2 4620 3 view .LVU919
 3338 002a 9A68     		ldr	r2, [r3, #8]
 3339 002c 1E49     		ldr	r1, .L201
 3340 002e 0A40     		ands	r2, r1
 3341 0030 0221     		movs	r1, #2
 3342 0032 0A43     		orrs	r2, r1
 3343 0034 9A60     		str	r2, [r3, #8]
 3344              	.LVL235:
 3345              	.L198:
4620:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3346              		.loc 2 4620 3 is_stmt 0 view .LVU920
 3347              	.LBE221:
 3348              	.LBE220:
1689:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3349              		.loc 1 1689 7 is_stmt 1 view .LVU921
1689:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3350              		.loc 1 1689 11 is_stmt 0 view .LVU922
 3351 0036 2268     		ldr	r2, [r4]
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 208


1689:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3352              		.loc 1 1689 29 view .LVU923
 3353 0038 D368     		ldr	r3, [r2, #12]
 3354 003a 0121     		movs	r1, #1
 3355 003c 0B43     		orrs	r3, r1
 3356 003e D360     		str	r3, [r2, #12]
 3357              	.L197:
1693:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3358              		.loc 1 1693 5 is_stmt 1 view .LVU924
1693:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3359              		.loc 1 1693 22 is_stmt 0 view .LVU925
 3360 0040 2000     		movs	r0, r4
 3361              	.LVL236:
1693:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3362              		.loc 1 1693 22 view .LVU926
 3363 0042 FFF7FEFF 		bl	ADC_Enable
 3364              	.LVL237:
1696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3365              		.loc 1 1696 5 is_stmt 1 view .LVU927
1696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3366              		.loc 1 1696 8 is_stmt 0 view .LVU928
 3367 0046 0028     		cmp	r0, #0
 3368 0048 2BD1     		bne	.L196
1701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 3369              		.loc 1 1701 7 is_stmt 1 view .LVU929
 3370 004a A36D     		ldr	r3, [r4, #88]
 3371 004c 174A     		ldr	r2, .L201+4
 3372 004e 1A40     		ands	r2, r3
 3373 0050 8023     		movs	r3, #128
 3374 0052 5B00     		lsls	r3, r3, #1
 3375 0054 1343     		orrs	r3, r2
 3376 0056 A365     		str	r3, [r4, #88]
1707:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3377              		.loc 1 1707 7 view .LVU930
 3378 0058 0023     		movs	r3, #0
 3379 005a E365     		str	r3, [r4, #92]
1710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3380              		.loc 1 1710 7 view .LVU931
1710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3381              		.loc 1 1710 11 is_stmt 0 view .LVU932
 3382 005c 226D     		ldr	r2, [r4, #80]
1710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3383              		.loc 1 1710 42 view .LVU933
 3384 005e 1449     		ldr	r1, .L201+8
 3385 0060 D162     		str	r1, [r2, #44]
1713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3386              		.loc 1 1713 7 is_stmt 1 view .LVU934
1713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3387              		.loc 1 1713 11 is_stmt 0 view .LVU935
 3388 0062 226D     		ldr	r2, [r4, #80]
1713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3389              		.loc 1 1713 46 view .LVU936
 3390 0064 1349     		ldr	r1, .L201+12
 3391 0066 1163     		str	r1, [r2, #48]
1716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3392              		.loc 1 1716 7 is_stmt 1 view .LVU937
1716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 209


 3393              		.loc 1 1716 11 is_stmt 0 view .LVU938
 3394 0068 226D     		ldr	r2, [r4, #80]
1716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3395              		.loc 1 1716 43 view .LVU939
 3396 006a 1349     		ldr	r1, .L201+16
 3397 006c 5163     		str	r1, [r2, #52]
1725:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3398              		.loc 1 1725 7 is_stmt 1 view .LVU940
 3399 006e 2268     		ldr	r2, [r4]
 3400 0070 1C21     		movs	r1, #28
 3401 0072 1160     		str	r1, [r2]
1730:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3402              		.loc 1 1730 7 view .LVU941
1730:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3403              		.loc 1 1730 7 view .LVU942
 3404 0074 5422     		movs	r2, #84
 3405 0076 A354     		strb	r3, [r4, r2]
1730:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3406              		.loc 1 1730 7 view .LVU943
1733:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3407              		.loc 1 1733 7 view .LVU944
 3408 0078 2268     		ldr	r2, [r4]
 3409 007a 5368     		ldr	r3, [r2, #4]
 3410 007c 0C39     		subs	r1, r1, #12
 3411 007e 0B43     		orrs	r3, r1
 3412 0080 5360     		str	r3, [r2, #4]
1736:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3413              		.loc 1 1736 7 view .LVU945
1736:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3414              		.loc 1 1736 69 is_stmt 0 view .LVU946
 3415 0082 2168     		ldr	r1, [r4]
 3416 0084 4031     		adds	r1, r1, #64
1736:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3417              		.loc 1 1736 24 view .LVU947
 3418 0086 3300     		movs	r3, r6
 3419 0088 2A00     		movs	r2, r5
 3420 008a 206D     		ldr	r0, [r4, #80]
 3421              	.LVL238:
1736:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3422              		.loc 1 1736 24 view .LVU948
 3423 008c FFF7FEFF 		bl	HAL_DMA_Start_IT
 3424              	.LVL239:
1743:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3425              		.loc 1 1743 7 is_stmt 1 view .LVU949
 3426 0090 2268     		ldr	r2, [r4]
 3427              	.LVL240:
 3428              	.LBB222:
 3429              	.LBI222:
4725:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 3430              		.loc 2 4725 22 view .LVU950
 3431              	.LBB223:
4730:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3432              		.loc 2 4730 3 view .LVU951
 3433 0092 9368     		ldr	r3, [r2, #8]
 3434 0094 0449     		ldr	r1, .L201
 3435 0096 0B40     		ands	r3, r1
 3436 0098 0421     		movs	r1, #4
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 210


 3437 009a 0B43     		orrs	r3, r1
 3438 009c 9360     		str	r3, [r2, #8]
4733:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 3439              		.loc 2 4733 1 is_stmt 0 view .LVU952
 3440 009e 00E0     		b	.L196
 3441              	.LVL241:
 3442              	.L199:
4733:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 3443              		.loc 2 4733 1 view .LVU953
 3444              	.LBE223:
 3445              	.LBE222:
1748:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 3446              		.loc 1 1748 20 view .LVU954
 3447 00a0 0220     		movs	r0, #2
 3448              	.LVL242:
 3449              	.L196:
1752:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3450              		.loc 1 1752 1 view .LVU955
 3451              		@ sp needed
 3452              	.LVL243:
 3453              	.LVL244:
 3454              	.LVL245:
1752:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3455              		.loc 1 1752 1 view .LVU956
 3456 00a2 70BD     		pop	{r4, r5, r6, pc}
 3457              	.LVL246:
 3458              	.L200:
1675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3459              		.loc 1 1675 5 view .LVU957
 3460 00a4 0220     		movs	r0, #2
 3461              	.LVL247:
1675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3462              		.loc 1 1675 5 view .LVU958
 3463 00a6 FCE7     		b	.L196
 3464              	.L202:
 3465              		.align	2
 3466              	.L201:
 3467 00a8 E8FFFF7F 		.word	2147483624
 3468 00ac FEF0FFFF 		.word	-3842
 3469 00b0 00000000 		.word	ADC_DMAConvCplt
 3470 00b4 00000000 		.word	ADC_DMAHalfConvCplt
 3471 00b8 00000000 		.word	ADC_DMAError
 3472              		.cfi_endproc
 3473              	.LFE450:
 3475              		.section	.text.ADC_Disable,"ax",%progbits
 3476              		.align	1
 3477              		.global	ADC_Disable
 3478              		.syntax unified
 3479              		.code	16
 3480              		.thumb_func
 3482              	ADC_Disable:
 3483              	.LVL248:
 3484              	.LFB464:
2800:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
 3485              		.loc 1 2800 1 is_stmt 1 view -0
 3486              		.cfi_startproc
 3487              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 211


 3488              		@ frame_needed = 0, uses_anonymous_args = 0
2800:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
 3489              		.loc 1 2800 1 is_stmt 0 view .LVU960
 3490 0000 70B5     		push	{r4, r5, r6, lr}
 3491              	.LCFI16:
 3492              		.cfi_def_cfa_offset 16
 3493              		.cfi_offset 4, -16
 3494              		.cfi_offset 5, -12
 3495              		.cfi_offset 6, -8
 3496              		.cfi_offset 14, -4
 3497 0002 0400     		movs	r4, r0
2801:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   const uint32_t tmp_adc_is_disable_on_going = LL_ADC_IsDisableOngoing(hadc->Instance);
 3498              		.loc 1 2801 3 is_stmt 1 view .LVU961
2802:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3499              		.loc 1 2802 3 view .LVU962
2802:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3500              		.loc 1 2802 76 is_stmt 0 view .LVU963
 3501 0004 0368     		ldr	r3, [r0]
 3502              	.LVL249:
 3503              	.LBB224:
 3504              	.LBI224:
4645:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 3505              		.loc 2 4645 26 is_stmt 1 view .LVU964
 3506              	.LBB225:
4647:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3507              		.loc 2 4647 3 view .LVU965
4647:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3508              		.loc 2 4647 12 is_stmt 0 view .LVU966
 3509 0006 9A68     		ldr	r2, [r3, #8]
 3510 0008 0221     		movs	r1, #2
 3511 000a 0800     		movs	r0, r1
 3512              	.LVL250:
4647:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3513              		.loc 2 4647 12 view .LVU967
 3514 000c 1040     		ands	r0, r2
4647:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3515              		.loc 2 4647 70 view .LVU968
 3516 000e 1142     		tst	r1, r2
 3517 0010 00D0     		beq	.L204
 3518 0012 0120     		movs	r0, #1
 3519              	.L204:
 3520              	.LVL251:
4647:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3521              		.loc 2 4647 70 view .LVU969
 3522              	.LBE225:
 3523              	.LBE224:
2807:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
 3524              		.loc 1 2807 3 is_stmt 1 view .LVU970
 3525              	.LBB226:
 3526              	.LBI226:
4634:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 3527              		.loc 2 4634 26 view .LVU971
 3528              	.LBB227:
4636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3529              		.loc 2 4636 3 view .LVU972
4636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3530              		.loc 2 4636 12 is_stmt 0 view .LVU973
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 212


 3531 0014 9A68     		ldr	r2, [r3, #8]
4636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3532              		.loc 2 4636 68 view .LVU974
 3533 0016 D207     		lsls	r2, r2, #31
 3534 0018 35D5     		bpl	.L209
 3535              	.LVL252:
4636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3536              		.loc 2 4636 68 view .LVU975
 3537              	.LBE227:
 3538              	.LBE226:
2808:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      )
 3539              		.loc 1 2808 7 view .LVU976
 3540 001a 0028     		cmp	r0, #0
 3541 001c 35D1     		bne	.L210
2812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3542              		.loc 1 2812 5 is_stmt 1 view .LVU977
2812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3543              		.loc 1 2812 24 is_stmt 0 view .LVU978
 3544 001e 9968     		ldr	r1, [r3, #8]
2812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3545              		.loc 1 2812 29 view .LVU979
 3546 0020 0522     		movs	r2, #5
 3547 0022 0A40     		ands	r2, r1
2812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3548              		.loc 1 2812 8 view .LVU980
 3549 0024 012A     		cmp	r2, #1
 3550 0026 09D0     		beq	.L211
2821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3551              		.loc 1 2821 7 is_stmt 1 view .LVU981
 3552 0028 A36D     		ldr	r3, [r4, #88]
 3553 002a 1022     		movs	r2, #16
 3554 002c 1343     		orrs	r3, r2
 3555 002e A365     		str	r3, [r4, #88]
2824:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3556              		.loc 1 2824 7 view .LVU982
 3557 0030 E36D     		ldr	r3, [r4, #92]
 3558 0032 0F3A     		subs	r2, r2, #15
 3559 0034 1343     		orrs	r3, r2
 3560 0036 E365     		str	r3, [r4, #92]
2826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3561              		.loc 1 2826 7 view .LVU983
2826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3562              		.loc 1 2826 14 is_stmt 0 view .LVU984
 3563 0038 0120     		movs	r0, #1
 3564              	.LVL253:
2826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3565              		.loc 1 2826 14 view .LVU985
 3566 003a 25E0     		b	.L205
 3567              	.LVL254:
 3568              	.L211:
2815:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOSMP | ADC_FLAG_RDY));
 3569              		.loc 1 2815 7 is_stmt 1 view .LVU986
 3570              	.LBB228:
 3571              	.LBI228:
4615:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 3572              		.loc 2 4615 22 view .LVU987
 3573              	.LBB229:
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 213


4620:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3574              		.loc 2 4620 3 view .LVU988
 3575 003c 9A68     		ldr	r2, [r3, #8]
 3576 003e 1449     		ldr	r1, .L213
 3577 0040 0A40     		ands	r2, r1
 3578 0042 0221     		movs	r1, #2
 3579 0044 0A43     		orrs	r2, r1
 3580 0046 9A60     		str	r2, [r3, #8]
 3581              	.LVL255:
4620:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3582              		.loc 2 4620 3 is_stmt 0 view .LVU989
 3583              	.LBE229:
 3584              	.LBE228:
2816:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3585              		.loc 1 2816 7 is_stmt 1 view .LVU990
 3586 0048 2368     		ldr	r3, [r4]
 3587 004a 0322     		movs	r2, #3
 3588 004c 1A60     		str	r2, [r3]
2831:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3589              		.loc 1 2831 5 view .LVU991
2831:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3590              		.loc 1 2831 17 is_stmt 0 view .LVU992
 3591 004e FFF7FEFF 		bl	HAL_GetTick
 3592              	.LVL256:
2831:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3593              		.loc 1 2831 17 view .LVU993
 3594 0052 0500     		movs	r5, r0
 3595              	.LVL257:
2833:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3596              		.loc 1 2833 5 is_stmt 1 view .LVU994
 3597              	.L207:
2833:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3598              		.loc 1 2833 11 view .LVU995
2833:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3599              		.loc 1 2833 17 is_stmt 0 view .LVU996
 3600 0054 2368     		ldr	r3, [r4]
2833:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3601              		.loc 1 2833 27 view .LVU997
 3602 0056 9B68     		ldr	r3, [r3, #8]
2833:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3603              		.loc 1 2833 11 view .LVU998
 3604 0058 DB07     		lsls	r3, r3, #31
 3605 005a 12D5     		bpl	.L212
2835:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 3606              		.loc 1 2835 7 is_stmt 1 view .LVU999
2835:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 3607              		.loc 1 2835 12 is_stmt 0 view .LVU1000
 3608 005c FFF7FEFF 		bl	HAL_GetTick
 3609              	.LVL258:
2835:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 3610              		.loc 1 2835 26 view .LVU1001
 3611 0060 401B     		subs	r0, r0, r5
2835:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 3612              		.loc 1 2835 10 view .LVU1002
 3613 0062 0228     		cmp	r0, #2
 3614 0064 F6D9     		bls	.L207
2838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 214


 3615              		.loc 1 2838 9 is_stmt 1 view .LVU1003
2838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 3616              		.loc 1 2838 18 is_stmt 0 view .LVU1004
 3617 0066 2368     		ldr	r3, [r4]
2838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 3618              		.loc 1 2838 28 view .LVU1005
 3619 0068 9B68     		ldr	r3, [r3, #8]
2838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 3620              		.loc 1 2838 12 view .LVU1006
 3621 006a DB07     		lsls	r3, r3, #31
 3622 006c F2D5     		bpl	.L207
2841:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3623              		.loc 1 2841 11 is_stmt 1 view .LVU1007
 3624 006e A36D     		ldr	r3, [r4, #88]
 3625 0070 1022     		movs	r2, #16
 3626 0072 1343     		orrs	r3, r2
 3627 0074 A365     		str	r3, [r4, #88]
2844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3628              		.loc 1 2844 11 view .LVU1008
 3629 0076 E36D     		ldr	r3, [r4, #92]
 3630 0078 0F3A     		subs	r2, r2, #15
 3631 007a 1343     		orrs	r3, r2
 3632 007c E365     		str	r3, [r4, #92]
2846:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 3633              		.loc 1 2846 11 view .LVU1009
2846:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 3634              		.loc 1 2846 18 is_stmt 0 view .LVU1010
 3635 007e 0120     		movs	r0, #1
 3636 0080 02E0     		b	.L205
 3637              	.L212:
2853:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 3638              		.loc 1 2853 10 view .LVU1011
 3639 0082 0020     		movs	r0, #0
 3640 0084 00E0     		b	.L205
 3641              	.LVL259:
 3642              	.L209:
2853:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 3643              		.loc 1 2853 10 view .LVU1012
 3644 0086 0020     		movs	r0, #0
 3645              	.LVL260:
 3646              	.L205:
2854:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3647              		.loc 1 2854 1 view .LVU1013
 3648              		@ sp needed
 3649              	.LVL261:
2854:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3650              		.loc 1 2854 1 view .LVU1014
 3651 0088 70BD     		pop	{r4, r5, r6, pc}
 3652              	.LVL262:
 3653              	.L210:
2853:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 3654              		.loc 1 2853 10 view .LVU1015
 3655 008a 0020     		movs	r0, #0
 3656              	.LVL263:
2853:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 3657              		.loc 1 2853 10 view .LVU1016
 3658 008c FCE7     		b	.L205
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 215


 3659              	.L214:
 3660 008e C046     		.align	2
 3661              	.L213:
 3662 0090 E8FFFF7F 		.word	2147483624
 3663              		.cfi_endproc
 3664              	.LFE464:
 3666              		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 3667              		.align	1
 3668              		.global	HAL_ADC_DeInit
 3669              		.syntax unified
 3670              		.code	16
 3671              		.thumb_func
 3673              	HAL_ADC_DeInit:
 3674              	.LVL264:
 3675              	.LFB441:
 734:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3676              		.loc 1 734 1 is_stmt 1 view -0
 3677              		.cfi_startproc
 3678              		@ args = 0, pretend = 0, frame = 0
 3679              		@ frame_needed = 0, uses_anonymous_args = 0
 734:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3680              		.loc 1 734 1 is_stmt 0 view .LVU1018
 3681 0000 70B5     		push	{r4, r5, r6, lr}
 3682              	.LCFI17:
 3683              		.cfi_def_cfa_offset 16
 3684              		.cfi_offset 4, -16
 3685              		.cfi_offset 5, -12
 3686              		.cfi_offset 6, -8
 3687              		.cfi_offset 14, -4
 3688 0002 041E     		subs	r4, r0, #0
 735:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3689              		.loc 1 735 3 is_stmt 1 view .LVU1019
 738:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3690              		.loc 1 738 3 view .LVU1020
 738:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3691              		.loc 1 738 6 is_stmt 0 view .LVU1021
 3692 0004 4BD0     		beq	.L219
 744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3693              		.loc 1 744 3 is_stmt 1 view .LVU1022
 747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3694              		.loc 1 747 3 view .LVU1023
 3695 0006 836D     		ldr	r3, [r0, #88]
 3696 0008 0222     		movs	r2, #2
 3697 000a 1343     		orrs	r3, r2
 3698 000c 8365     		str	r3, [r0, #88]
 750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3699              		.loc 1 750 3 view .LVU1024
 750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3700              		.loc 1 750 20 is_stmt 0 view .LVU1025
 3701 000e FFF7FEFF 		bl	ADC_ConversionStop
 3702              	.LVL265:
 750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3703              		.loc 1 750 20 view .LVU1026
 3704 0012 051E     		subs	r5, r0, #0
 3705              	.LVL266:
 753:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3706              		.loc 1 753 3 is_stmt 1 view .LVU1027
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 216


 753:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3707              		.loc 1 753 6 is_stmt 0 view .LVU1028
 3708 0014 36D0     		beq	.L220
 3709              	.LVL267:
 3710              	.L217:
 777:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                               ADC_IT_AWD1  | ADC_IT_OVR  |
 3711              		.loc 1 777 3 is_stmt 1 view .LVU1029
 3712 0016 2268     		ldr	r2, [r4]
 3713 0018 5368     		ldr	r3, [r2, #4]
 3714 001a 2249     		ldr	r1, .L221
 3715 001c 0B40     		ands	r3, r1
 3716 001e 5360     		str	r3, [r2, #4]
 783:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                               ADC_FLAG_AWD1  | ADC_FLAG_OVR  |
 3717              		.loc 1 783 3 view .LVU1030
 3718 0020 2368     		ldr	r3, [r4]
 3719 0022 214A     		ldr	r2, .L221+4
 3720 0024 1A60     		str	r2, [r3]
 793:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                              ADC_CFGR1_CHSELRMOD | ADC_CFGR1_AUTOFF |
 3721              		.loc 1 793 3 view .LVU1031
 793:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                              ADC_CFGR1_CHSELRMOD | ADC_CFGR1_AUTOFF |
 3722              		.loc 1 793 7 is_stmt 0 view .LVU1032
 3723 0026 2268     		ldr	r2, [r4]
 793:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                              ADC_CFGR1_CHSELRMOD | ADC_CFGR1_AUTOFF |
 3724              		.loc 1 793 25 view .LVU1033
 3725 0028 D368     		ldr	r3, [r2, #12]
 3726 002a 2049     		ldr	r1, .L221+8
 3727 002c 0B40     		ands	r3, r1
 3728 002e D360     		str	r3, [r2, #12]
 800:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3729              		.loc 1 800 3 is_stmt 1 view .LVU1034
 800:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3730              		.loc 1 800 7 is_stmt 0 view .LVU1035
 3731 0030 2268     		ldr	r2, [r4]
 800:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3732              		.loc 1 800 24 view .LVU1036
 3733 0032 5369     		ldr	r3, [r2, #20]
 3734 0034 0721     		movs	r1, #7
 3735 0036 8B43     		bics	r3, r1
 3736 0038 5361     		str	r3, [r2, #20]
 803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3737              		.loc 1 803 3 is_stmt 1 view .LVU1037
 803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3738              		.loc 1 803 7 is_stmt 0 view .LVU1038
 3739 003a 2368     		ldr	r3, [r4]
 803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3740              		.loc 1 803 26 view .LVU1039
 3741 003c 9A6A     		ldr	r2, [r3, #40]
 3742 003e 0026     		movs	r6, #0
 3743 0040 9E62     		str	r6, [r3, #40]
 809:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->Instance->AWD2TR &= ~(ADC_AWD2TR_HT2 | ADC_AWD2TR_LT2);
 3744              		.loc 1 809 3 is_stmt 1 view .LVU1040
 809:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->Instance->AWD2TR &= ~(ADC_AWD2TR_HT2 | ADC_AWD2TR_LT2);
 3745              		.loc 1 809 7 is_stmt 0 view .LVU1041
 3746 0042 2168     		ldr	r1, [r4]
 809:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->Instance->AWD2TR &= ~(ADC_AWD2TR_HT2 | ADC_AWD2TR_LT2);
 3747              		.loc 1 809 26 view .LVU1042
 3748 0044 0B6A     		ldr	r3, [r1, #32]
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 217


 3749 0046 1A4A     		ldr	r2, .L221+12
 3750 0048 1340     		ands	r3, r2
 3751 004a 0B62     		str	r3, [r1, #32]
 810:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->Instance->AWD3TR &= ~(ADC_AWD3TR_HT3 | ADC_AWD3TR_LT3);
 3752              		.loc 1 810 3 is_stmt 1 view .LVU1043
 810:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->Instance->AWD3TR &= ~(ADC_AWD3TR_HT3 | ADC_AWD3TR_LT3);
 3753              		.loc 1 810 7 is_stmt 0 view .LVU1044
 3754 004c 2168     		ldr	r1, [r4]
 810:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->Instance->AWD3TR &= ~(ADC_AWD3TR_HT3 | ADC_AWD3TR_LT3);
 3755              		.loc 1 810 26 view .LVU1045
 3756 004e 4B6A     		ldr	r3, [r1, #36]
 3757 0050 1340     		ands	r3, r2
 3758 0052 4B62     		str	r3, [r1, #36]
 811:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3759              		.loc 1 811 3 is_stmt 1 view .LVU1046
 811:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3760              		.loc 1 811 7 is_stmt 0 view .LVU1047
 3761 0054 2168     		ldr	r1, [r4]
 811:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3762              		.loc 1 811 26 view .LVU1048
 3763 0056 CB6A     		ldr	r3, [r1, #44]
 3764 0058 1340     		ands	r3, r2
 3765 005a CB62     		str	r3, [r1, #44]
 818:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3766              		.loc 1 818 3 is_stmt 1 view .LVU1049
 818:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3767              		.loc 1 818 7 is_stmt 0 view .LVU1050
 3768 005c 2268     		ldr	r2, [r4]
 818:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3769              		.loc 1 818 25 view .LVU1051
 3770 005e 1369     		ldr	r3, [r2, #16]
 3771 0060 9B00     		lsls	r3, r3, #2
 3772 0062 9B08     		lsrs	r3, r3, #2
 3773 0064 1361     		str	r3, [r2, #16]
 821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3774              		.loc 1 821 3 is_stmt 1 view .LVU1052
 821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3775              		.loc 1 821 20 is_stmt 0 view .LVU1053
 3776 0066 134A     		ldr	r2, .L221+16
 3777 0068 1368     		ldr	r3, [r2]
 3778 006a 1349     		ldr	r1, .L221+20
 3779 006c 0B40     		ands	r3, r1
 3780 006e 1360     		str	r3, [r2]
 840:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 3781              		.loc 1 840 3 is_stmt 1 view .LVU1054
 3782 0070 2000     		movs	r0, r4
 3783 0072 FFF7FEFF 		bl	HAL_ADC_MspDeInit
 3784              	.LVL268:
 844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3785              		.loc 1 844 3 view .LVU1055
 844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3786              		.loc 1 844 39 is_stmt 0 view .LVU1056
 3787 0076 2666     		str	r6, [r4, #96]
 847:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3788              		.loc 1 847 3 is_stmt 1 view .LVU1057
 3789 0078 E665     		str	r6, [r4, #92]
 850:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 218


 3790              		.loc 1 850 3 view .LVU1058
 850:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3791              		.loc 1 850 15 is_stmt 0 view .LVU1059
 3792 007a A665     		str	r6, [r4, #88]
 852:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3793              		.loc 1 852 3 is_stmt 1 view .LVU1060
 852:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3794              		.loc 1 852 3 view .LVU1061
 3795 007c 5423     		movs	r3, #84
 3796 007e E654     		strb	r6, [r4, r3]
 852:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3797              		.loc 1 852 3 view .LVU1062
 854:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 3798              		.loc 1 854 3 view .LVU1063
 3799              	.LVL269:
 3800              	.L216:
 855:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3801              		.loc 1 855 1 is_stmt 0 view .LVU1064
 3802 0080 2800     		movs	r0, r5
 3803              		@ sp needed
 3804              	.LVL270:
 855:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3805              		.loc 1 855 1 view .LVU1065
 3806 0082 70BD     		pop	{r4, r5, r6, pc}
 3807              	.LVL271:
 3808              	.L220:
 756:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3809              		.loc 1 756 5 is_stmt 1 view .LVU1066
 756:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3810              		.loc 1 756 22 is_stmt 0 view .LVU1067
 3811 0084 2000     		movs	r0, r4
 3812              	.LVL272:
 756:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3813              		.loc 1 756 22 view .LVU1068
 3814 0086 FFF7FEFF 		bl	ADC_Disable
 3815              	.LVL273:
 3816 008a 051E     		subs	r5, r0, #0
 3817              	.LVL274:
 759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3818              		.loc 1 759 5 is_stmt 1 view .LVU1069
 759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3819              		.loc 1 759 8 is_stmt 0 view .LVU1070
 3820 008c 01D1     		bne	.L218
 762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3821              		.loc 1 762 7 is_stmt 1 view .LVU1071
 762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3822              		.loc 1 762 19 is_stmt 0 view .LVU1072
 3823 008e 0123     		movs	r3, #1
 3824 0090 A365     		str	r3, [r4, #88]
 3825              	.L218:
 766:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 3826              		.loc 1 766 5 is_stmt 1 view .LVU1073
 3827 0092 2268     		ldr	r2, [r4]
 3828              	.LVL275:
 3829              	.LBB230:
 3830              	.LBI230:
4563:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 219


 3831              		.loc 2 4563 22 view .LVU1074
 3832              	.LBB231:
4565:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3833              		.loc 2 4565 3 view .LVU1075
 3834 0094 9368     		ldr	r3, [r2, #8]
 3835 0096 0949     		ldr	r1, .L221+24
 3836 0098 0B40     		ands	r3, r1
 3837 009a 9360     		str	r3, [r2, #8]
4566:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 3838              		.loc 2 4566 1 is_stmt 0 view .LVU1076
 3839 009c BBE7     		b	.L217
 3840              	.LVL276:
 3841              	.L219:
4566:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 3842              		.loc 2 4566 1 view .LVU1077
 3843              	.LBE231:
 3844              	.LBE230:
 740:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 3845              		.loc 1 740 12 view .LVU1078
 3846 009e 0125     		movs	r5, #1
 3847 00a0 EEE7     		b	.L216
 3848              	.L222:
 3849 00a2 C046     		.align	2
 3850              	.L221:
 3851 00a4 60FCFFFF 		.word	-928
 3852 00a8 9F030000 		.word	927
 3853 00ac 00021E83 		.word	-2095185408
 3854 00b0 00F000F0 		.word	-268374016
 3855 00b4 08270140 		.word	1073817352
 3856 00b8 FFFF03FE 		.word	-33292289
 3857 00bc E8FFFF6F 		.word	1879048168
 3858              		.cfi_endproc
 3859              	.LFE441:
 3861              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 3862              		.align	1
 3863              		.global	HAL_ADC_Stop
 3864              		.syntax unified
 3865              		.code	16
 3866              		.thumb_func
 3868              	HAL_ADC_Stop:
 3869              	.LVL277:
 3870              	.LFB445:
1214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3871              		.loc 1 1214 1 is_stmt 1 view -0
 3872              		.cfi_startproc
 3873              		@ args = 0, pretend = 0, frame = 0
 3874              		@ frame_needed = 0, uses_anonymous_args = 0
1214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3875              		.loc 1 1214 1 is_stmt 0 view .LVU1080
 3876 0000 10B5     		push	{r4, lr}
 3877              	.LCFI18:
 3878              		.cfi_def_cfa_offset 8
 3879              		.cfi_offset 4, -8
 3880              		.cfi_offset 14, -4
 3881 0002 0400     		movs	r4, r0
1215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3882              		.loc 1 1215 3 is_stmt 1 view .LVU1081
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 220


1218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3883              		.loc 1 1218 3 view .LVU1082
1220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3884              		.loc 1 1220 3 view .LVU1083
1220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3885              		.loc 1 1220 3 view .LVU1084
 3886 0004 5423     		movs	r3, #84
 3887 0006 C35C     		ldrb	r3, [r0, r3]
 3888 0008 012B     		cmp	r3, #1
 3889 000a 17D0     		beq	.L226
1220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3890              		.loc 1 1220 3 discriminator 2 view .LVU1085
 3891 000c 5423     		movs	r3, #84
 3892 000e 0122     		movs	r2, #1
 3893 0010 C254     		strb	r2, [r0, r3]
1220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3894              		.loc 1 1220 3 discriminator 2 view .LVU1086
1223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3895              		.loc 1 1223 3 discriminator 2 view .LVU1087
1223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3896              		.loc 1 1223 20 is_stmt 0 discriminator 2 view .LVU1088
 3897 0012 FFF7FEFF 		bl	ADC_ConversionStop
 3898              	.LVL278:
1226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3899              		.loc 1 1226 3 is_stmt 1 discriminator 2 view .LVU1089
1226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3900              		.loc 1 1226 6 is_stmt 0 discriminator 2 view .LVU1090
 3901 0016 0028     		cmp	r0, #0
 3902 0018 03D0     		beq	.L227
 3903              	.LVL279:
 3904              	.L225:
1241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3905              		.loc 1 1241 3 is_stmt 1 view .LVU1091
1241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3906              		.loc 1 1241 3 view .LVU1092
 3907 001a 5423     		movs	r3, #84
 3908 001c 0022     		movs	r2, #0
 3909 001e E254     		strb	r2, [r4, r3]
1241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3910              		.loc 1 1241 3 view .LVU1093
1243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 3911              		.loc 1 1243 3 view .LVU1094
 3912              	.LVL280:
 3913              	.L224:
1244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3914              		.loc 1 1244 1 is_stmt 0 view .LVU1095
 3915              		@ sp needed
 3916              	.LVL281:
1244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3917              		.loc 1 1244 1 view .LVU1096
 3918 0020 10BD     		pop	{r4, pc}
 3919              	.LVL282:
 3920              	.L227:
1229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3921              		.loc 1 1229 5 is_stmt 1 view .LVU1097
1229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3922              		.loc 1 1229 22 is_stmt 0 view .LVU1098
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 221


 3923 0022 2000     		movs	r0, r4
 3924              	.LVL283:
1229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3925              		.loc 1 1229 22 view .LVU1099
 3926 0024 FFF7FEFF 		bl	ADC_Disable
 3927              	.LVL284:
1232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3928              		.loc 1 1232 5 is_stmt 1 view .LVU1100
1232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3929              		.loc 1 1232 8 is_stmt 0 view .LVU1101
 3930 0028 0028     		cmp	r0, #0
 3931 002a F6D1     		bne	.L225
1235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
 3932              		.loc 1 1235 7 is_stmt 1 view .LVU1102
 3933 002c A36D     		ldr	r3, [r4, #88]
 3934 002e 044A     		ldr	r2, .L228
 3935 0030 1340     		ands	r3, r2
 3936 0032 0432     		adds	r2, r2, #4
 3937 0034 FF32     		adds	r2, r2, #255
 3938 0036 1343     		orrs	r3, r2
 3939 0038 A365     		str	r3, [r4, #88]
 3940 003a EEE7     		b	.L225
 3941              	.LVL285:
 3942              	.L226:
1220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3943              		.loc 1 1220 3 is_stmt 0 view .LVU1103
 3944 003c 0220     		movs	r0, #2
 3945              	.LVL286:
1220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3946              		.loc 1 1220 3 view .LVU1104
 3947 003e EFE7     		b	.L224
 3948              	.L229:
 3949              		.align	2
 3950              	.L228:
 3951 0040 FEFEFFFF 		.word	-258
 3952              		.cfi_endproc
 3953              	.LFE445:
 3955              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 3956              		.align	1
 3957              		.global	HAL_ADC_Stop_IT
 3958              		.syntax unified
 3959              		.code	16
 3960              		.thumb_func
 3962              	HAL_ADC_Stop_IT:
 3963              	.LVL287:
 3964              	.LFB449:
1619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3965              		.loc 1 1619 1 is_stmt 1 view -0
 3966              		.cfi_startproc
 3967              		@ args = 0, pretend = 0, frame = 0
 3968              		@ frame_needed = 0, uses_anonymous_args = 0
1619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3969              		.loc 1 1619 1 is_stmt 0 view .LVU1106
 3970 0000 10B5     		push	{r4, lr}
 3971              	.LCFI19:
 3972              		.cfi_def_cfa_offset 8
 3973              		.cfi_offset 4, -8
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 222


 3974              		.cfi_offset 14, -4
 3975 0002 0400     		movs	r4, r0
1620:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3976              		.loc 1 1620 3 is_stmt 1 view .LVU1107
1623:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3977              		.loc 1 1623 3 view .LVU1108
1625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3978              		.loc 1 1625 3 view .LVU1109
1625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3979              		.loc 1 1625 3 view .LVU1110
 3980 0004 5423     		movs	r3, #84
 3981 0006 C35C     		ldrb	r3, [r0, r3]
 3982 0008 012B     		cmp	r3, #1
 3983 000a 1CD0     		beq	.L233
1625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3984              		.loc 1 1625 3 discriminator 2 view .LVU1111
 3985 000c 5423     		movs	r3, #84
 3986 000e 0122     		movs	r2, #1
 3987 0010 C254     		strb	r2, [r0, r3]
1625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3988              		.loc 1 1625 3 discriminator 2 view .LVU1112
1628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3989              		.loc 1 1628 3 discriminator 2 view .LVU1113
1628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3990              		.loc 1 1628 20 is_stmt 0 discriminator 2 view .LVU1114
 3991 0012 FFF7FEFF 		bl	ADC_ConversionStop
 3992              	.LVL288:
1631:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3993              		.loc 1 1631 3 is_stmt 1 discriminator 2 view .LVU1115
1631:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3994              		.loc 1 1631 6 is_stmt 0 discriminator 2 view .LVU1116
 3995 0016 0028     		cmp	r0, #0
 3996 0018 03D0     		beq	.L234
 3997              	.LVL289:
 3998              	.L232:
1650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3999              		.loc 1 1650 3 is_stmt 1 view .LVU1117
1650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4000              		.loc 1 1650 3 view .LVU1118
 4001 001a 5423     		movs	r3, #84
 4002 001c 0022     		movs	r2, #0
 4003 001e E254     		strb	r2, [r4, r3]
1650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4004              		.loc 1 1650 3 view .LVU1119
1652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 4005              		.loc 1 1652 3 view .LVU1120
 4006              	.LVL290:
 4007              	.L231:
1653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4008              		.loc 1 1653 1 is_stmt 0 view .LVU1121
 4009              		@ sp needed
 4010              	.LVL291:
1653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4011              		.loc 1 1653 1 view .LVU1122
 4012 0020 10BD     		pop	{r4, pc}
 4013              	.LVL292:
 4014              	.L234:
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 223


1635:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4015              		.loc 1 1635 5 is_stmt 1 view .LVU1123
 4016 0022 2268     		ldr	r2, [r4]
 4017 0024 5368     		ldr	r3, [r2, #4]
 4018 0026 1C21     		movs	r1, #28
 4019 0028 8B43     		bics	r3, r1
 4020 002a 5360     		str	r3, [r2, #4]
1638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4021              		.loc 1 1638 5 view .LVU1124
1638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4022              		.loc 1 1638 22 is_stmt 0 view .LVU1125
 4023 002c 2000     		movs	r0, r4
 4024              	.LVL293:
1638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4025              		.loc 1 1638 22 view .LVU1126
 4026 002e FFF7FEFF 		bl	ADC_Disable
 4027              	.LVL294:
1641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4028              		.loc 1 1641 5 is_stmt 1 view .LVU1127
1641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4029              		.loc 1 1641 8 is_stmt 0 view .LVU1128
 4030 0032 0028     		cmp	r0, #0
 4031 0034 F1D1     		bne	.L232
1644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
 4032              		.loc 1 1644 7 is_stmt 1 view .LVU1129
 4033 0036 A36D     		ldr	r3, [r4, #88]
 4034 0038 044A     		ldr	r2, .L235
 4035 003a 1340     		ands	r3, r2
 4036 003c 0432     		adds	r2, r2, #4
 4037 003e FF32     		adds	r2, r2, #255
 4038 0040 1343     		orrs	r3, r2
 4039 0042 A365     		str	r3, [r4, #88]
 4040 0044 E9E7     		b	.L232
 4041              	.LVL295:
 4042              	.L233:
1625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4043              		.loc 1 1625 3 is_stmt 0 view .LVU1130
 4044 0046 0220     		movs	r0, #2
 4045              	.LVL296:
1625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4046              		.loc 1 1625 3 view .LVU1131
 4047 0048 EAE7     		b	.L231
 4048              	.L236:
 4049 004a C046     		.align	2
 4050              	.L235:
 4051 004c FEFEFFFF 		.word	-258
 4052              		.cfi_endproc
 4053              	.LFE449:
 4055              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 4056              		.align	1
 4057              		.global	HAL_ADC_Stop_DMA
 4058              		.syntax unified
 4059              		.code	16
 4060              		.thumb_func
 4062              	HAL_ADC_Stop_DMA:
 4063              	.LVL297:
 4064              	.LFB451:
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 224


1762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4065              		.loc 1 1762 1 is_stmt 1 view -0
 4066              		.cfi_startproc
 4067              		@ args = 0, pretend = 0, frame = 0
 4068              		@ frame_needed = 0, uses_anonymous_args = 0
1762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4069              		.loc 1 1762 1 is_stmt 0 view .LVU1133
 4070 0000 70B5     		push	{r4, r5, r6, lr}
 4071              	.LCFI20:
 4072              		.cfi_def_cfa_offset 16
 4073              		.cfi_offset 4, -16
 4074              		.cfi_offset 5, -12
 4075              		.cfi_offset 6, -8
 4076              		.cfi_offset 14, -4
 4077 0002 0400     		movs	r4, r0
1763:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4078              		.loc 1 1763 3 is_stmt 1 view .LVU1134
1766:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4079              		.loc 1 1766 3 view .LVU1135
1768:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4080              		.loc 1 1768 3 view .LVU1136
1768:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4081              		.loc 1 1768 3 view .LVU1137
 4082 0004 5423     		movs	r3, #84
 4083 0006 C35C     		ldrb	r3, [r0, r3]
 4084 0008 012B     		cmp	r3, #1
 4085 000a 36D0     		beq	.L244
1768:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4086              		.loc 1 1768 3 discriminator 2 view .LVU1138
 4087 000c 5423     		movs	r3, #84
 4088 000e 0122     		movs	r2, #1
 4089 0010 C254     		strb	r2, [r0, r3]
1768:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4090              		.loc 1 1768 3 discriminator 2 view .LVU1139
1771:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4091              		.loc 1 1771 3 discriminator 2 view .LVU1140
1771:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4092              		.loc 1 1771 20 is_stmt 0 discriminator 2 view .LVU1141
 4093 0012 FFF7FEFF 		bl	ADC_ConversionStop
 4094              	.LVL298:
1771:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4095              		.loc 1 1771 20 discriminator 2 view .LVU1142
 4096 0016 051E     		subs	r5, r0, #0
 4097              	.LVL299:
1774:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 4098              		.loc 1 1774 3 is_stmt 1 discriminator 2 view .LVU1143
1774:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 4099              		.loc 1 1774 6 is_stmt 0 discriminator 2 view .LVU1144
 4100 0018 1DD1     		bne	.L239
1778:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4101              		.loc 1 1778 5 is_stmt 1 view .LVU1145
1778:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4102              		.loc 1 1778 13 is_stmt 0 view .LVU1146
 4103 001a 206D     		ldr	r0, [r4, #80]
 4104              	.LVL300:
1778:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4105              		.loc 1 1778 25 view .LVU1147
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 225


 4106 001c 2523     		movs	r3, #37
 4107 001e C35C     		ldrb	r3, [r0, r3]
1778:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4108              		.loc 1 1778 8 view .LVU1148
 4109 0020 022B     		cmp	r3, #2
 4110 0022 1DD0     		beq	.L245
 4111              	.LVL301:
 4112              	.L240:
1791:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4113              		.loc 1 1791 5 is_stmt 1 view .LVU1149
 4114 0024 2268     		ldr	r2, [r4]
 4115 0026 5368     		ldr	r3, [r2, #4]
 4116 0028 1021     		movs	r1, #16
 4117 002a 8B43     		bics	r3, r1
 4118 002c 5360     		str	r3, [r2, #4]
1796:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4119              		.loc 1 1796 5 view .LVU1150
1796:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4120              		.loc 1 1796 8 is_stmt 0 view .LVU1151
 4121 002e 002D     		cmp	r5, #0
 4122 0030 1FD1     		bne	.L241
1798:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 4123              		.loc 1 1798 7 is_stmt 1 view .LVU1152
1798:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 4124              		.loc 1 1798 24 is_stmt 0 view .LVU1153
 4125 0032 2000     		movs	r0, r4
 4126 0034 FFF7FEFF 		bl	ADC_Disable
 4127              	.LVL302:
 4128 0038 0500     		movs	r5, r0
 4129              	.LVL303:
 4130              	.L242:
1806:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4131              		.loc 1 1806 5 is_stmt 1 view .LVU1154
1806:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4132              		.loc 1 1806 8 is_stmt 0 view .LVU1155
 4133 003a 002D     		cmp	r5, #0
 4134 003c 06D1     		bne	.L243
1809:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
 4135              		.loc 1 1809 7 is_stmt 1 view .LVU1156
 4136 003e A36D     		ldr	r3, [r4, #88]
 4137 0040 0F4A     		ldr	r2, .L246
 4138 0042 1340     		ands	r3, r2
 4139 0044 0432     		adds	r2, r2, #4
 4140 0046 FF32     		adds	r2, r2, #255
 4141 0048 1343     		orrs	r3, r2
 4142 004a A365     		str	r3, [r4, #88]
 4143              	.L243:
1815:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 4144              		.loc 1 1815 5 view .LVU1157
 4145 004c 2268     		ldr	r2, [r4]
 4146 004e D368     		ldr	r3, [r2, #12]
 4147 0050 0121     		movs	r1, #1
 4148 0052 8B43     		bics	r3, r1
 4149 0054 D360     		str	r3, [r2, #12]
 4150              	.LVL304:
 4151              	.L239:
1818:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 226


 4152              		.loc 1 1818 3 view .LVU1158
1818:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4153              		.loc 1 1818 3 view .LVU1159
 4154 0056 5423     		movs	r3, #84
 4155 0058 0022     		movs	r2, #0
 4156 005a E254     		strb	r2, [r4, r3]
1818:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4157              		.loc 1 1818 3 view .LVU1160
1820:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 4158              		.loc 1 1820 3 view .LVU1161
 4159              	.LVL305:
 4160              	.L238:
1821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4161              		.loc 1 1821 1 is_stmt 0 view .LVU1162
 4162 005c 2800     		movs	r0, r5
 4163              		@ sp needed
 4164              	.LVL306:
1821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4165              		.loc 1 1821 1 view .LVU1163
 4166 005e 70BD     		pop	{r4, r5, r6, pc}
 4167              	.LVL307:
 4168              	.L245:
1780:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4169              		.loc 1 1780 7 is_stmt 1 view .LVU1164
1780:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4170              		.loc 1 1780 24 is_stmt 0 view .LVU1165
 4171 0060 FFF7FEFF 		bl	HAL_DMA_Abort
 4172              	.LVL308:
 4173 0064 051E     		subs	r5, r0, #0
 4174              	.LVL309:
1783:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4175              		.loc 1 1783 7 is_stmt 1 view .LVU1166
1783:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4176              		.loc 1 1783 10 is_stmt 0 view .LVU1167
 4177 0066 DDD0     		beq	.L240
1786:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 4178              		.loc 1 1786 9 is_stmt 1 view .LVU1168
 4179 0068 A36D     		ldr	r3, [r4, #88]
 4180 006a 4022     		movs	r2, #64
 4181 006c 1343     		orrs	r3, r2
 4182 006e A365     		str	r3, [r4, #88]
 4183 0070 D8E7     		b	.L240
 4184              	.LVL310:
 4185              	.L241:
1802:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 4186              		.loc 1 1802 7 view .LVU1169
1802:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 4187              		.loc 1 1802 13 is_stmt 0 view .LVU1170
 4188 0072 2000     		movs	r0, r4
 4189 0074 FFF7FEFF 		bl	ADC_Disable
 4190              	.LVL311:
 4191 0078 DFE7     		b	.L242
 4192              	.LVL312:
 4193              	.L244:
1768:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4194              		.loc 1 1768 3 view .LVU1171
 4195 007a 0225     		movs	r5, #2
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 227


 4196 007c EEE7     		b	.L238
 4197              	.L247:
 4198 007e C046     		.align	2
 4199              	.L246:
 4200 0080 FEFEFFFF 		.word	-258
 4201              		.cfi_endproc
 4202              	.LFE451:
 4204              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 4205              		.align	1
 4206              		.global	HAL_ADC_AnalogWDGConfig
 4207              		.syntax unified
 4208              		.code	16
 4209              		.thumb_func
 4211              	HAL_ADC_AnalogWDGConfig:
 4212              	.LVL313:
 4213              	.LFB459:
2376:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 4214              		.loc 1 2376 1 is_stmt 1 view -0
 4215              		.cfi_startproc
 4216              		@ args = 0, pretend = 0, frame = 0
 4217              		@ frame_needed = 0, uses_anonymous_args = 0
2376:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 4218              		.loc 1 2376 1 is_stmt 0 view .LVU1173
 4219 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4220              	.LCFI21:
 4221              		.cfi_def_cfa_offset 24
 4222              		.cfi_offset 3, -24
 4223              		.cfi_offset 4, -20
 4224              		.cfi_offset 5, -16
 4225              		.cfi_offset 6, -12
 4226              		.cfi_offset 7, -8
 4227              		.cfi_offset 14, -4
 4228 0002 0400     		movs	r4, r0
 4229 0004 0D00     		movs	r5, r1
2377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_awd_high_threshold_shifted;
 4230              		.loc 1 2377 3 is_stmt 1 view .LVU1174
 4231              	.LVL314:
2378:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_awd_low_threshold_shifted;
 4232              		.loc 1 2378 3 view .LVU1175
2379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t backup_setting_adc_enable_state = 0UL;
 4233              		.loc 1 2379 3 view .LVU1176
2380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4234              		.loc 1 2380 3 view .LVU1177
2383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(pAnalogWDGConfig->WatchdogNumber));
 4235              		.loc 1 2383 3 view .LVU1178
2384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(pAnalogWDGConfig->WatchdogMode));
 4236              		.loc 1 2384 3 view .LVU1179
2385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(pAnalogWDGConfig->ITMode));
 4237              		.loc 1 2385 3 view .LVU1180
2386:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4238              		.loc 1 2386 3 view .LVU1181
2388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 4239              		.loc 1 2388 3 view .LVU1182
2390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 4240              		.loc 1 2390 5 view .LVU1183
2394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 4241              		.loc 1 2394 3 view .LVU1184
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 228


2405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), pAnalogWDGConfig->LowThreshold));
 4242              		.loc 1 2405 5 view .LVU1185
2406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 4243              		.loc 1 2406 5 view .LVU1186
2409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4244              		.loc 1 2409 3 view .LVU1187
2409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4245              		.loc 1 2409 3 view .LVU1188
 4246 0006 5423     		movs	r3, #84
 4247 0008 C35C     		ldrb	r3, [r0, r3]
 4248 000a 012B     		cmp	r3, #1
 4249 000c 00D1     		bne	.LCB4104
 4250 000e CEE1     		b	.L275	@long jump
 4251              	.LCB4104:
2409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4252              		.loc 1 2409 3 discriminator 2 view .LVU1189
 4253 0010 5423     		movs	r3, #84
 4254 0012 0122     		movs	r2, #1
 4255 0014 C254     		strb	r2, [r0, r3]
2409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4256              		.loc 1 2409 3 discriminator 2 view .LVU1190
2415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 4257              		.loc 1 2415 3 discriminator 2 view .LVU1191
2415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 4258              		.loc 1 2415 42 is_stmt 0 discriminator 2 view .LVU1192
 4259 0016 0368     		ldr	r3, [r0]
 4260              	.LVL315:
 4261              	.LBB266:
 4262              	.LBI266:
4761:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 4263              		.loc 2 4761 26 is_stmt 1 discriminator 2 view .LVU1193
 4264              	.LBB267:
 4265              		.loc 2 4763 3 discriminator 2 view .LVU1194
 4266              		.loc 2 4763 12 is_stmt 0 discriminator 2 view .LVU1195
 4267 0018 9A68     		ldr	r2, [r3, #8]
 4268              		.loc 2 4763 74 discriminator 2 view .LVU1196
 4269 001a 5207     		lsls	r2, r2, #29
 4270 001c 00D5     		bpl	.LCB4121
 4271 001e 99E1     		b	.L276	@long jump
 4272              	.LCB4121:
 4273              	.LVL316:
 4274              		.loc 2 4763 74 discriminator 2 view .LVU1197
 4275              	.LBE267:
 4276              	.LBE266:
2418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4277              		.loc 1 2418 5 is_stmt 1 view .LVU1198
2418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4278              		.loc 1 2418 25 is_stmt 0 view .LVU1199
 4279 0020 0A68     		ldr	r2, [r1]
2418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4280              		.loc 1 2418 8 view .LVU1200
 4281 0022 AB49     		ldr	r1, .L326
 4282              	.LVL317:
2418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4283              		.loc 1 2418 8 view .LVU1201
 4284 0024 8A42     		cmp	r2, r1
 4285 0026 1CD0     		beq	.L316
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 229


2478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4286              		.loc 1 2478 7 is_stmt 1 view .LVU1202
2478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4287              		.loc 1 2478 31 is_stmt 0 view .LVU1203
 4288 0028 6968     		ldr	r1, [r5, #4]
2478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4289              		.loc 1 2478 7 view .LVU1204
 4290 002a 8020     		movs	r0, #128
 4291              	.LVL318:
2478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4292              		.loc 1 2478 7 view .LVU1205
 4293 002c 0004     		lsls	r0, r0, #16
 4294 002e 8142     		cmp	r1, r0
 4295 0030 00D1     		bne	.LCB4137
 4296 0032 24E1     		b	.L258	@long jump
 4297              	.LCB4137:
 4298 0034 C020     		movs	r0, #192
 4299 0036 0004     		lsls	r0, r0, #16
 4300 0038 8142     		cmp	r1, r0
 4301 003a 00D0     		beq	.LCB4141
 4302 003c 58E1     		b	.L259	@long jump
 4303              	.LCB4141:
2483:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           {
 4304              		.loc 1 2483 11 is_stmt 1 view .LVU1206
2483:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           {
 4305              		.loc 1 2483 14 is_stmt 0 view .LVU1207
 4306 003e A549     		ldr	r1, .L326+4
 4307 0040 8A42     		cmp	r2, r1
 4308 0042 5CD0     		beq	.L317
2489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4309              		.loc 1 2489 13 is_stmt 1 view .LVU1208
 4310 0044 A422     		movs	r2, #164
 4311 0046 9958     		ldr	r1, [r3, r2]
 4312 0048 AA68     		ldr	r2, [r5, #8]
 4313 004a 5003     		lsls	r0, r2, #13
 4314 004c 00D0     		beq	.LCB4153
 4315 004e BDE0     		b	.L264	@long jump
 4316              	.LCB4153:
2489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4317              		.loc 1 2489 13 is_stmt 0 discriminator 1 view .LVU1209
 4318 0050 920E     		lsrs	r2, r2, #26
 4319 0052 1F30     		adds	r0, r0, #31
 4320 0054 1040     		ands	r0, r2
 4321 0056 0122     		movs	r2, #1
 4322 0058 8240     		lsls	r2, r2, r0
 4323              	.L265:
2489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4324              		.loc 1 2489 13 discriminator 80 view .LVU1210
 4325 005a 0A43     		orrs	r2, r1
 4326 005c A421     		movs	r1, #164
 4327 005e 5A50     		str	r2, [r3, r1]
 4328 0060 1EE1     		b	.L263
 4329              	.LVL319:
 4330              	.L316:
2422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4331              		.loc 1 2422 7 is_stmt 1 view .LVU1211
 4332              	.LBB268:
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 230


 4333              	.LBI268:
4634:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 4334              		.loc 2 4634 26 view .LVU1212
 4335              	.LBB269:
4636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 4336              		.loc 2 4636 3 view .LVU1213
4636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 4337              		.loc 2 4636 12 is_stmt 0 view .LVU1214
 4338 0062 9B68     		ldr	r3, [r3, #8]
 4339              	.LVL320:
4636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 4340              		.loc 2 4636 12 view .LVU1215
 4341 0064 0122     		movs	r2, #1
 4342 0066 1100     		movs	r1, r2
 4343 0068 1940     		ands	r1, r3
4636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 4344              		.loc 2 4636 68 view .LVU1216
 4345 006a 1A42     		tst	r2, r3
 4346 006c 2AD0     		beq	.L277
 4347              	.LVL321:
4636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 4348              		.loc 2 4636 68 view .LVU1217
 4349              	.LBE269:
 4350              	.LBE268:
2424:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         tmp_hal_status = ADC_Disable(hadc);
 4351              		.loc 1 2424 9 is_stmt 1 view .LVU1218
2425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 4352              		.loc 1 2425 9 view .LVU1219
2425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 4353              		.loc 1 2425 26 is_stmt 0 view .LVU1220
 4354 006e FFF7FEFF 		bl	ADC_Disable
 4355              	.LVL322:
2424:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         tmp_hal_status = ADC_Disable(hadc);
 4356              		.loc 1 2424 41 view .LVU1221
 4357 0072 0121     		movs	r1, #1
 4358              	.LVL323:
 4359              	.L252:
2431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4360              		.loc 1 2431 7 is_stmt 1 view .LVU1222
2431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4361              		.loc 1 2431 31 is_stmt 0 view .LVU1223
 4362 0074 6B68     		ldr	r3, [r5, #4]
2431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4363              		.loc 1 2431 7 view .LVU1224
 4364 0076 8022     		movs	r2, #128
 4365 0078 1204     		lsls	r2, r2, #16
 4366 007a 9342     		cmp	r3, r2
 4367 007c 24D0     		beq	.L253
 4368 007e C022     		movs	r2, #192
 4369 0080 1204     		lsls	r2, r2, #16
 4370 0082 9342     		cmp	r3, r2
 4371 0084 29D1     		bne	.L254
2434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                           __LL_ADC_ANALOGWD_CHANNEL_GROUP(pAnalogWDGConfig->Channel
 4372              		.loc 1 2434 11 is_stmt 1 view .LVU1225
 4373 0086 2768     		ldr	r7, [r4]
 4374              	.LVL324:
 4375              	.LBB270:
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 231


 4376              	.LBI270:
3988:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 4377              		.loc 2 3988 22 view .LVU1226
 4378              	.LBB271:
3994:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 4379              		.loc 2 3994 3 view .LVU1227
3996:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   {
 4380              		.loc 2 3996 3 view .LVU1228
3998:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   }
 4381              		.loc 2 3998 5 view .LVU1229
4006:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4382              		.loc 2 4006 3 view .LVU1230
 4383 0088 FB68     		ldr	r3, [r7, #12]
 4384 008a 934A     		ldr	r2, .L326+8
 4385 008c 1340     		ands	r3, r2
 4386 008e F826     		movs	r6, #248
 4387 0090 F605     		lsls	r6, r6, #23
 4388 0092 AA68     		ldr	r2, [r5, #8]
 4389 0094 1640     		ands	r6, r2
 4390 0096 C022     		movs	r2, #192
 4391 0098 1204     		lsls	r2, r2, #16
 4392 009a 3243     		orrs	r2, r6
 4393 009c 1343     		orrs	r3, r2
 4394 009e FB60     		str	r3, [r7, #12]
 4395              	.LVL325:
 4396              	.L255:
4006:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4397              		.loc 2 4006 3 is_stmt 0 view .LVU1231
 4398              	.LBE271:
 4399              	.LBE270:
2448:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4400              		.loc 1 2448 7 is_stmt 1 view .LVU1232
2448:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4401              		.loc 1 2448 10 is_stmt 0 view .LVU1233
 4402 00a0 0129     		cmp	r1, #1
 4403 00a2 20D0     		beq	.L318
 4404              	.LVL326:
 4405              	.L256:
2457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4406              		.loc 1 2457 7 is_stmt 1 view .LVU1234
 4407 00a4 A36D     		ldr	r3, [r4, #88]
 4408 00a6 8D4A     		ldr	r2, .L326+12
 4409 00a8 1340     		ands	r3, r2
 4410 00aa A365     		str	r3, [r4, #88]
2463:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4411              		.loc 1 2463 7 view .LVU1235
 4412 00ac 2368     		ldr	r3, [r4]
 4413              	.LVL327:
 4414              	.LBB272:
 4415              	.LBI272:
4764:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4765:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4766:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4767:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular command of conversion stop state
4768:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_IsStopConversionOngoing
4769:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4770:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group regular.
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 232


4771:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4772:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsStopConversionOngoing(const ADC_TypeDef *ADCx)
4773:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4774:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTP) == (ADC_CR_ADSTP)) ? 1UL : 0UL);
4775:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4776:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4777:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4778:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
4779:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
4780:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         all oversampling increased data width (for devices
4781:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         with feature oversampling).
4782:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData32
4783:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4784:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
4785:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4786:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadConversionData32(const ADC_TypeDef *ADCx)
4787:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4788:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
4789:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4790:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4791:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4792:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
4793:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC resolution 12 bits.
4794:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
4795:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         can increase data width, function for extended range
4796:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
4797:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData12
4798:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4799:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
4800:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4801:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData12(const ADC_TypeDef *ADCx)
4802:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4803:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_DATA) & 0x00000FFFUL);
4804:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4805:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4806:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4807:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
4808:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC resolution 10 bits.
4809:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
4810:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         can increase data width, function for extended range
4811:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
4812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData10
4813:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4814:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
4815:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4816:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData10(const ADC_TypeDef *ADCx)
4817:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4818:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_DATA) & 0x000003FFUL);
4819:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4820:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4821:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4822:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
4823:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC resolution 8 bits.
4824:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
4825:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         can increase data width, function for extended range
4826:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
4827:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData8
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 233


4828:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4829:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
4830:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4831:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData8(const ADC_TypeDef *ADCx)
4832:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4833:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_DATA) & 0x000000FFUL);
4834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4835:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4836:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4837:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
4838:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC resolution 6 bits.
4839:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
4840:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         can increase data width, function for extended range
4841:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
4842:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData6
4843:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4844:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
4845:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4846:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData6(const ADC_TypeDef *ADCx)
4847:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4848:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_DATA) & 0x0000003FUL);
4849:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4850:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4851:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4852:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
4853:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4854:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4855:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_FLAG_Management ADC flag management
4856:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
4857:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4858:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4859:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4860:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get flag ADC ready.
4861:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
4862:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
4863:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
4864:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_IsActiveFlag_ADRDY
4865:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4866:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4867:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4868:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_ADRDY(const ADC_TypeDef *ADCx)
4869:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4870:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_ADRDY) == (LL_ADC_FLAG_ADRDY)) ? 1UL : 0UL);
4871:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4872:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4873:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4874:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get flag ADC channel configuration ready.
4875:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer
4876:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
4877:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
4878:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Otherwise, performing some actions (configuration update,
4879:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC conversion start, ... ) will be ignored.
4880:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Functions requiring wait for CCRDY flag are:
4881:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
4882:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks()
4883:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerChannels()
4884:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerChAdd()
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 234


4885:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerChRem()
4886:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerScanDirection()
4887:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerConfigurable()
4888:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Duration of ADC channel configuration ready: CCRDY handshake
4889:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         requires 1APB + 2 ADC + 3 APB cycles after the channel configuration
4890:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         has been changed.
4891:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      CCRDY          LL_ADC_IsActiveFlag_CCRDY
4892:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4893:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4894:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4895:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_CCRDY(const ADC_TypeDef *ADCx)
4896:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4897:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_CCRDY) == (LL_ADC_FLAG_CCRDY)) ? 1UL : 0UL);
4898:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4899:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4900:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4901:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of unitary conversion.
4902:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_IsActiveFlag_EOC
4903:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4904:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4905:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4906:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOC(const ADC_TypeDef *ADCx)
4907:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4908:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, ADC_ISR_EOC) == (ADC_ISR_EOC)) ? 1UL : 0UL);
4909:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4910:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4911:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4912:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sequence conversions.
4913:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_IsActiveFlag_EOS
4914:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4915:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4916:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4917:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOS(const ADC_TypeDef *ADCx)
4918:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4919:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOS) == (LL_ADC_FLAG_EOS)) ? 1UL : 0UL);
4920:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4921:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4922:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4923:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get flag ADC group regular overrun.
4924:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_IsActiveFlag_OVR
4925:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4926:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4927:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4928:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_OVR(const ADC_TypeDef *ADCx)
4929:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4930:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_OVR) == (LL_ADC_FLAG_OVR)) ? 1UL : 0UL);
4931:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4932:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4933:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4934:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sampling phase.
4935:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_IsActiveFlag_EOSMP
4936:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4937:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4938:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4939:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOSMP(const ADC_TypeDef *ADCx)
4940:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4941:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOSMP) == (LL_ADC_FLAG_EOSMP)) ? 1UL : 0UL);
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 235


4942:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4943:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4944:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4945:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 1 flag
4946:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_IsActiveFlag_AWD1
4947:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4948:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4949:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4950:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD1(const ADC_TypeDef *ADCx)
4951:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4952:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD1) == (LL_ADC_FLAG_AWD1)) ? 1UL : 0UL);
4953:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4954:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4955:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4956:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 2.
4957:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_IsActiveFlag_AWD2
4958:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4959:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4960:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4961:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD2(const ADC_TypeDef *ADCx)
4962:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4963:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD2) == (LL_ADC_FLAG_AWD2)) ? 1UL : 0UL);
4964:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4965:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4966:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4967:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 3.
4968:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_IsActiveFlag_AWD3
4969:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4970:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4971:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4972:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD3(const ADC_TypeDef *ADCx)
4973:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4974:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD3) == (LL_ADC_FLAG_AWD3)) ? 1UL : 0UL);
4975:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4976:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4977:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4978:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get flag ADC end of calibration.
4979:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      EOCAL          LL_ADC_IsActiveFlag_EOCAL
4980:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4981:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4982:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4983:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOCAL(const ADC_TypeDef *ADCx)
4984:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4985:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOCAL) == (LL_ADC_FLAG_EOCAL)) ? 1UL : 0UL);
4986:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4987:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4988:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4989:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Clear flag ADC ready.
4990:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
4991:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
4992:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
4993:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_ClearFlag_ADRDY
4994:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4995:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4996:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4997:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_ADRDY(ADC_TypeDef *ADCx)
4998:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 236


4999:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_ADRDY);
5000:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5001:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5002:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5003:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Clear flag ADC channel configuration ready.
5004:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      CCRDY          LL_ADC_ClearFlag_CCRDY
5005:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5006:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
5007:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5008:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_CCRDY(ADC_TypeDef *ADCx)
5009:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5010:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_CCRDY);
5011:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5012:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5013:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5014:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of unitary conversion.
5015:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_ClearFlag_EOC
5016:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5017:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5018:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5019:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOC(ADC_TypeDef *ADCx)
5020:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5021:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOC);
5022:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5023:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5024:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5025:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sequence conversions.
5026:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_ClearFlag_EOS
5027:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5028:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5029:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5030:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOS(ADC_TypeDef *ADCx)
5031:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5032:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOS);
5033:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5034:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5035:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5036:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Clear flag ADC group regular overrun.
5037:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_ClearFlag_OVR
5038:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5039:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5040:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5041:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_OVR(ADC_TypeDef *ADCx)
5042:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5043:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_OVR);
5044:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5045:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5046:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5047:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sampling phase.
5048:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_ClearFlag_EOSMP
5049:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5050:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5051:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5052:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOSMP(ADC_TypeDef *ADCx)
5053:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5054:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOSMP);
5055:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 237


5056:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5057:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5058:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 1.
5059:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_ClearFlag_AWD1
5060:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5061:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5062:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5063:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD1(ADC_TypeDef *ADCx)
 4416              		.loc 2 5063 22 view .LVU1236
 4417              	.LBB273:
5064:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5065:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD1);
 4418              		.loc 2 5065 3 view .LVU1237
 4419 00ae 8022     		movs	r2, #128
 4420 00b0 1A60     		str	r2, [r3]
 4421              	.LVL328:
 4422              		.loc 2 5065 3 is_stmt 0 view .LVU1238
 4423              	.LBE273:
 4424              	.LBE272:
2466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4425              		.loc 1 2466 7 is_stmt 1 view .LVU1239
2466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4426              		.loc 1 2466 27 is_stmt 0 view .LVU1240
 4427 00b2 2B7B     		ldrb	r3, [r5, #12]
2466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4428              		.loc 1 2466 10 view .LVU1241
 4429 00b4 012B     		cmp	r3, #1
 4430 00b6 1CD0     		beq	.L319
2472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 4431              		.loc 1 2472 9 is_stmt 1 view .LVU1242
 4432 00b8 2268     		ldr	r2, [r4]
 4433              	.LVL329:
 4434              	.LBB274:
 4435              	.LBI274:
5066:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5067:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5068:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5069:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 2.
5070:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_ClearFlag_AWD2
5071:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5072:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5073:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5074:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD2(ADC_TypeDef *ADCx)
5075:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5076:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD2);
5077:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5078:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5079:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5080:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 3.
5081:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_ClearFlag_AWD3
5082:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5083:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5084:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5085:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD3(ADC_TypeDef *ADCx)
5086:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5087:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD3);
5088:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 238


5089:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5090:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5091:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Clear flag ADC end of calibration.
5092:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      EOCAL          LL_ADC_ClearFlag_EOCAL
5093:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5094:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5095:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5096:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOCAL(ADC_TypeDef *ADCx)
5097:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5098:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOCAL);
5099:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5100:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5101:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5102:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
5103:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5104:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5105:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_IT_Management ADC IT management
5106:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
5107:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5108:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5109:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5110:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Enable ADC ready.
5111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_EnableIT_ADRDY
5112:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5115:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_ADRDY(ADC_TypeDef *ADCx)
5116:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5117:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
5118:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5119:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5120:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5121:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Enable interruption ADC channel configuration ready.
5122:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      CCRDYIE        LL_ADC_EnableIT_CCRDY
5123:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5124:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
5125:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5126:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_CCRDY(ADC_TypeDef *ADCx)
5127:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5128:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_FLAG_CCRDY);
5129:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5130:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5132:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of unitary conversion.
5133:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_EnableIT_EOC
5134:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5135:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5136:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5137:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOC(ADC_TypeDef *ADCx)
5138:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5139:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOC);
5140:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5141:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5142:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5143:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sequence conversions.
5144:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_EnableIT_EOS
5145:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 239


5146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5147:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5148:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOS(ADC_TypeDef *ADCx)
5149:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5150:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOS);
5151:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5152:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5153:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5154:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Enable ADC group regular interruption overrun.
5155:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_EnableIT_OVR
5156:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5157:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5158:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5159:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_OVR(ADC_TypeDef *ADCx)
5160:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5161:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_OVR);
5162:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5163:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5164:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5165:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sampling.
5166:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_EnableIT_EOSMP
5167:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5168:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5169:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5170:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOSMP(ADC_TypeDef *ADCx)
5171:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5172:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
5173:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5174:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5175:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5176:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 1.
5177:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_EnableIT_AWD1
5178:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5179:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5180:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5181:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD1(ADC_TypeDef *ADCx)
5182:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5183:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD1);
5184:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5185:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5186:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5187:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 2.
5188:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_EnableIT_AWD2
5189:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5190:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5191:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5192:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD2(ADC_TypeDef *ADCx)
5193:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5194:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD2);
5195:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5196:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5197:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5198:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 3.
5199:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_EnableIT_AWD3
5200:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5201:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5202:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 240


5203:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD3(ADC_TypeDef *ADCx)
5204:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5205:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD3);
5206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5208:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5209:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Enable interruption ADC end of calibration.
5210:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      EOCALIE        LL_ADC_EnableIT_EOCAL
5211:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5212:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5213:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5214:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOCAL(ADC_TypeDef *ADCx)
5215:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5216:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOCAL);
5217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5218:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5219:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5220:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Disable interruption ADC ready.
5221:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_DisableIT_ADRDY
5222:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5223:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5224:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5225:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_ADRDY(ADC_TypeDef *ADCx)
5226:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
5228:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5229:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5230:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5231:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Disable interruption ADC channel configuration ready.
5232:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      CCRDYIE        LL_ADC_DisableIT_CCRDY
5233:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5234:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
5235:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5236:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_CCRDY(ADC_TypeDef *ADCx)
5237:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5238:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_FLAG_CCRDY);
5239:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5240:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5241:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5242:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of unitary conversion.
5243:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_DisableIT_EOC
5244:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5245:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5246:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5247:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOC(ADC_TypeDef *ADCx)
5248:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5249:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOC);
5250:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5251:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5252:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5253:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sequence conversions.
5254:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_DisableIT_EOS
5255:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5256:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5257:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5258:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOS(ADC_TypeDef *ADCx)
5259:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 241


5260:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOS);
5261:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5262:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5263:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5264:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular overrun.
5265:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_DisableIT_OVR
5266:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5267:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5268:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5269:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_OVR(ADC_TypeDef *ADCx)
5270:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5271:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_OVR);
5272:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5273:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5274:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5275:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sampling.
5276:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_DisableIT_EOSMP
5277:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5278:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5279:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5280:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOSMP(ADC_TypeDef *ADCx)
5281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5282:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
5283:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5284:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5285:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5286:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 1.
5287:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_DisableIT_AWD1
5288:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5289:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5290:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5291:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD1(ADC_TypeDef *ADCx)
 4436              		.loc 2 5291 22 view .LVU1243
 4437              	.LBB275:
5292:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5293:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD1);
 4438              		.loc 2 5293 3 view .LVU1244
 4439 00ba 5368     		ldr	r3, [r2, #4]
 4440 00bc 8021     		movs	r1, #128
 4441 00be 8B43     		bics	r3, r1
 4442 00c0 5360     		str	r3, [r2, #4]
5294:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 4443              		.loc 2 5294 1 is_stmt 0 view .LVU1245
 4444 00c2 48E1     		b	.L250
 4445              	.LVL330:
 4446              	.L277:
 4447              		.loc 2 5294 1 view .LVU1246
 4448              	.LBE275:
 4449              	.LBE274:
2377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_awd_high_threshold_shifted;
 4450              		.loc 1 2377 21 view .LVU1247
 4451 00c4 0020     		movs	r0, #0
 4452              	.LVL331:
2377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_awd_high_threshold_shifted;
 4453              		.loc 1 2377 21 view .LVU1248
 4454 00c6 D5E7     		b	.L252
 4455              	.LVL332:
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 242


 4456              	.L253:
2440:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
 4457              		.loc 1 2440 11 is_stmt 1 view .LVU1249
 4458 00c8 2668     		ldr	r6, [r4]
 4459              	.LVL333:
 4460              	.LBB276:
 4461              	.LBI276:
3988:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 4462              		.loc 2 3988 22 view .LVU1250
 4463              	.LBB277:
3994:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 4464              		.loc 2 3994 3 view .LVU1251
3996:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   {
 4465              		.loc 2 3996 3 view .LVU1252
3998:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   }
 4466              		.loc 2 3998 5 view .LVU1253
4006:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4467              		.loc 2 4006 3 view .LVU1254
 4468 00ca F368     		ldr	r3, [r6, #12]
 4469 00cc 824A     		ldr	r2, .L326+8
 4470 00ce 1A40     		ands	r2, r3
 4471 00d0 8023     		movs	r3, #128
 4472 00d2 1B04     		lsls	r3, r3, #16
 4473 00d4 1343     		orrs	r3, r2
 4474 00d6 F360     		str	r3, [r6, #12]
4009:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 4475              		.loc 2 4009 1 is_stmt 0 view .LVU1255
 4476 00d8 E2E7     		b	.L255
 4477              	.LVL334:
 4478              	.L254:
4009:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 4479              		.loc 2 4009 1 view .LVU1256
 4480              	.LBE277:
 4481              	.LBE276:
2444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
 4482              		.loc 1 2444 11 is_stmt 1 view .LVU1257
 4483 00da 2268     		ldr	r2, [r4]
 4484              	.LVL335:
 4485              	.LBB278:
 4486              	.LBI278:
3988:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 4487              		.loc 2 3988 22 view .LVU1258
 4488              	.LBB279:
3994:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 4489              		.loc 2 3994 3 view .LVU1259
3996:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   {
 4490              		.loc 2 3996 3 view .LVU1260
3998:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   }
 4491              		.loc 2 3998 5 view .LVU1261
4006:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4492              		.loc 2 4006 3 view .LVU1262
 4493 00dc D368     		ldr	r3, [r2, #12]
 4494 00de 7E4E     		ldr	r6, .L326+8
 4495 00e0 3340     		ands	r3, r6
 4496 00e2 D360     		str	r3, [r2, #12]
4009:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 4497              		.loc 2 4009 1 is_stmt 0 view .LVU1263
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 243


 4498 00e4 DCE7     		b	.L255
 4499              	.LVL336:
 4500              	.L318:
4009:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 4501              		.loc 2 4009 1 view .LVU1264
 4502              	.LBE279:
 4503              	.LBE278:
2450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 4504              		.loc 1 2450 9 is_stmt 1 view .LVU1265
2450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 4505              		.loc 1 2450 12 is_stmt 0 view .LVU1266
 4506 00e6 0028     		cmp	r0, #0
 4507 00e8 DCD1     		bne	.L256
2452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 4508              		.loc 1 2452 11 is_stmt 1 view .LVU1267
2452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 4509              		.loc 1 2452 28 is_stmt 0 view .LVU1268
 4510 00ea 2000     		movs	r0, r4
 4511              	.LVL337:
2452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 4512              		.loc 1 2452 28 view .LVU1269
 4513 00ec FFF7FEFF 		bl	ADC_Enable
 4514              	.LVL338:
2452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 4515              		.loc 1 2452 28 view .LVU1270
 4516 00f0 D8E7     		b	.L256
 4517              	.L319:
2468:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 4518              		.loc 1 2468 9 is_stmt 1 view .LVU1271
 4519 00f2 2268     		ldr	r2, [r4]
 4520              	.LVL339:
 4521              	.LBB280:
 4522              	.LBI280:
5181:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 4523              		.loc 2 5181 22 view .LVU1272
 4524              	.LBB281:
5183:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 4525              		.loc 2 5183 3 view .LVU1273
 4526 00f4 5368     		ldr	r3, [r2, #4]
 4527 00f6 8021     		movs	r1, #128
 4528 00f8 0B43     		orrs	r3, r1
 4529 00fa 5360     		str	r3, [r2, #4]
5184:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 4530              		.loc 2 5184 1 is_stmt 0 view .LVU1274
 4531 00fc 2BE1     		b	.L250
 4532              	.LVL340:
 4533              	.L317:
5184:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 4534              		.loc 2 5184 1 view .LVU1275
 4535              	.LBE281:
 4536              	.LBE280:
2485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4537              		.loc 1 2485 13 is_stmt 1 view .LVU1276
 4538 00fe A022     		movs	r2, #160
 4539 0100 9958     		ldr	r1, [r3, r2]
 4540 0102 AA68     		ldr	r2, [r5, #8]
 4541 0104 5003     		lsls	r0, r2, #13
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 244


 4542 0106 08D1     		bne	.L261
2485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4543              		.loc 1 2485 13 is_stmt 0 discriminator 1 view .LVU1277
 4544 0108 920E     		lsrs	r2, r2, #26
 4545 010a 1F30     		adds	r0, r0, #31
 4546 010c 1040     		ands	r0, r2
 4547 010e 0122     		movs	r2, #1
 4548 0110 8240     		lsls	r2, r2, r0
 4549              	.L262:
2485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4550              		.loc 1 2485 13 discriminator 80 view .LVU1278
 4551 0112 0A43     		orrs	r2, r1
 4552 0114 A021     		movs	r1, #160
 4553 0116 5A50     		str	r2, [r3, r1]
 4554 0118 C2E0     		b	.L263
 4555              	.L261:
2485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4556              		.loc 1 2485 13 discriminator 2 view .LVU1279
 4557 011a D007     		lsls	r0, r2, #31
 4558 011c 26D4     		bmi	.L278
2485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4559              		.loc 1 2485 13 discriminator 4 view .LVU1280
 4560 011e 9007     		lsls	r0, r2, #30
 4561 0120 26D4     		bmi	.L279
2485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4562              		.loc 1 2485 13 discriminator 6 view .LVU1281
 4563 0122 5007     		lsls	r0, r2, #29
 4564 0124 26D4     		bmi	.L280
2485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4565              		.loc 1 2485 13 discriminator 8 view .LVU1282
 4566 0126 1007     		lsls	r0, r2, #28
 4567 0128 26D4     		bmi	.L281
2485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4568              		.loc 1 2485 13 discriminator 10 view .LVU1283
 4569 012a D006     		lsls	r0, r2, #27
 4570 012c 26D4     		bmi	.L282
2485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4571              		.loc 1 2485 13 discriminator 12 view .LVU1284
 4572 012e 9006     		lsls	r0, r2, #26
 4573 0130 26D4     		bmi	.L283
2485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4574              		.loc 1 2485 13 discriminator 14 view .LVU1285
 4575 0132 5006     		lsls	r0, r2, #25
 4576 0134 26D4     		bmi	.L284
2485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4577              		.loc 1 2485 13 discriminator 16 view .LVU1286
 4578 0136 1006     		lsls	r0, r2, #24
 4579 0138 26D4     		bmi	.L285
2485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4580              		.loc 1 2485 13 discriminator 18 view .LVU1287
 4581 013a D005     		lsls	r0, r2, #23
 4582 013c 26D4     		bmi	.L286
2485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4583              		.loc 1 2485 13 discriminator 20 view .LVU1288
 4584 013e 9005     		lsls	r0, r2, #22
 4585 0140 27D4     		bmi	.L287
2485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 245


 4586              		.loc 1 2485 13 discriminator 22 view .LVU1289
 4587 0142 5005     		lsls	r0, r2, #21
 4588 0144 28D4     		bmi	.L288
2485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4589              		.loc 1 2485 13 discriminator 24 view .LVU1290
 4590 0146 1005     		lsls	r0, r2, #20
 4591 0148 29D4     		bmi	.L289
2485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4592              		.loc 1 2485 13 discriminator 26 view .LVU1291
 4593 014a D004     		lsls	r0, r2, #19
 4594 014c 2AD4     		bmi	.L290
2485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4595              		.loc 1 2485 13 discriminator 28 view .LVU1292
 4596 014e 9004     		lsls	r0, r2, #18
 4597 0150 2BD4     		bmi	.L291
2485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4598              		.loc 1 2485 13 discriminator 30 view .LVU1293
 4599 0152 5004     		lsls	r0, r2, #17
 4600 0154 2CD4     		bmi	.L292
2485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4601              		.loc 1 2485 13 discriminator 32 view .LVU1294
 4602 0156 1004     		lsls	r0, r2, #16
 4603 0158 2DD4     		bmi	.L293
2485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4604              		.loc 1 2485 13 discriminator 34 view .LVU1295
 4605 015a D003     		lsls	r0, r2, #15
 4606 015c 2ED4     		bmi	.L294
2485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4607              		.loc 1 2485 13 discriminator 36 view .LVU1296
 4608 015e 9003     		lsls	r0, r2, #14
 4609 0160 2FD4     		bmi	.L295
2485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4610              		.loc 1 2485 13 discriminator 38 view .LVU1297
 4611 0162 5203     		lsls	r2, r2, #13
 4612 0164 30D5     		bpl	.L296
2485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4613              		.loc 1 2485 13 view .LVU1298
 4614 0166 8022     		movs	r2, #128
 4615 0168 D202     		lsls	r2, r2, #11
 4616 016a D2E7     		b	.L262
 4617              	.L278:
 4618 016c 0122     		movs	r2, #1
 4619 016e D0E7     		b	.L262
 4620              	.L279:
 4621 0170 0222     		movs	r2, #2
 4622 0172 CEE7     		b	.L262
 4623              	.L280:
 4624 0174 0422     		movs	r2, #4
 4625 0176 CCE7     		b	.L262
 4626              	.L281:
 4627 0178 0822     		movs	r2, #8
 4628 017a CAE7     		b	.L262
 4629              	.L282:
 4630 017c 1022     		movs	r2, #16
 4631 017e C8E7     		b	.L262
 4632              	.L283:
 4633 0180 2022     		movs	r2, #32
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 246


 4634 0182 C6E7     		b	.L262
 4635              	.L284:
 4636 0184 4022     		movs	r2, #64
 4637 0186 C4E7     		b	.L262
 4638              	.L285:
 4639 0188 8022     		movs	r2, #128
 4640 018a C2E7     		b	.L262
 4641              	.L286:
 4642 018c 8022     		movs	r2, #128
 4643 018e 5200     		lsls	r2, r2, #1
 4644 0190 BFE7     		b	.L262
 4645              	.L287:
 4646 0192 8022     		movs	r2, #128
 4647 0194 9200     		lsls	r2, r2, #2
 4648 0196 BCE7     		b	.L262
 4649              	.L288:
 4650 0198 8022     		movs	r2, #128
 4651 019a D200     		lsls	r2, r2, #3
 4652 019c B9E7     		b	.L262
 4653              	.L289:
 4654 019e 8022     		movs	r2, #128
 4655 01a0 1201     		lsls	r2, r2, #4
 4656 01a2 B6E7     		b	.L262
 4657              	.L290:
 4658 01a4 8022     		movs	r2, #128
 4659 01a6 5201     		lsls	r2, r2, #5
 4660 01a8 B3E7     		b	.L262
 4661              	.L291:
 4662 01aa 8022     		movs	r2, #128
 4663 01ac 9201     		lsls	r2, r2, #6
 4664 01ae B0E7     		b	.L262
 4665              	.L292:
 4666 01b0 8022     		movs	r2, #128
 4667 01b2 D201     		lsls	r2, r2, #7
 4668 01b4 ADE7     		b	.L262
 4669              	.L293:
 4670 01b6 8022     		movs	r2, #128
 4671 01b8 1202     		lsls	r2, r2, #8
 4672 01ba AAE7     		b	.L262
 4673              	.L294:
 4674 01bc 8022     		movs	r2, #128
 4675 01be 5202     		lsls	r2, r2, #9
 4676 01c0 A7E7     		b	.L262
 4677              	.L295:
 4678 01c2 8022     		movs	r2, #128
 4679 01c4 9202     		lsls	r2, r2, #10
 4680 01c6 A4E7     		b	.L262
 4681              	.L296:
 4682 01c8 0122     		movs	r2, #1
 4683 01ca A2E7     		b	.L262
 4684              	.L264:
2489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4685              		.loc 1 2489 13 discriminator 2 view .LVU1299
 4686 01cc D007     		lsls	r0, r2, #31
 4687 01ce 26D4     		bmi	.L297
2489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4688              		.loc 1 2489 13 discriminator 4 view .LVU1300
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 247


 4689 01d0 9007     		lsls	r0, r2, #30
 4690 01d2 26D4     		bmi	.L298
2489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4691              		.loc 1 2489 13 discriminator 6 view .LVU1301
 4692 01d4 5007     		lsls	r0, r2, #29
 4693 01d6 26D4     		bmi	.L299
2489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4694              		.loc 1 2489 13 discriminator 8 view .LVU1302
 4695 01d8 1007     		lsls	r0, r2, #28
 4696 01da 26D4     		bmi	.L300
2489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4697              		.loc 1 2489 13 discriminator 10 view .LVU1303
 4698 01dc D006     		lsls	r0, r2, #27
 4699 01de 26D4     		bmi	.L301
2489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4700              		.loc 1 2489 13 discriminator 12 view .LVU1304
 4701 01e0 9006     		lsls	r0, r2, #26
 4702 01e2 26D4     		bmi	.L302
2489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4703              		.loc 1 2489 13 discriminator 14 view .LVU1305
 4704 01e4 5006     		lsls	r0, r2, #25
 4705 01e6 26D4     		bmi	.L303
2489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4706              		.loc 1 2489 13 discriminator 16 view .LVU1306
 4707 01e8 1006     		lsls	r0, r2, #24
 4708 01ea 26D4     		bmi	.L304
2489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4709              		.loc 1 2489 13 discriminator 18 view .LVU1307
 4710 01ec D005     		lsls	r0, r2, #23
 4711 01ee 26D4     		bmi	.L305
2489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4712              		.loc 1 2489 13 discriminator 20 view .LVU1308
 4713 01f0 9005     		lsls	r0, r2, #22
 4714 01f2 27D4     		bmi	.L306
2489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4715              		.loc 1 2489 13 discriminator 22 view .LVU1309
 4716 01f4 5005     		lsls	r0, r2, #21
 4717 01f6 28D4     		bmi	.L307
2489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4718              		.loc 1 2489 13 discriminator 24 view .LVU1310
 4719 01f8 1005     		lsls	r0, r2, #20
 4720 01fa 29D4     		bmi	.L308
2489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4721              		.loc 1 2489 13 discriminator 26 view .LVU1311
 4722 01fc D004     		lsls	r0, r2, #19
 4723 01fe 2AD4     		bmi	.L309
2489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4724              		.loc 1 2489 13 discriminator 28 view .LVU1312
 4725 0200 9004     		lsls	r0, r2, #18
 4726 0202 2BD4     		bmi	.L310
2489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4727              		.loc 1 2489 13 discriminator 30 view .LVU1313
 4728 0204 5004     		lsls	r0, r2, #17
 4729 0206 2CD4     		bmi	.L311
2489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4730              		.loc 1 2489 13 discriminator 32 view .LVU1314
 4731 0208 1004     		lsls	r0, r2, #16
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 248


 4732 020a 2DD4     		bmi	.L312
2489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4733              		.loc 1 2489 13 discriminator 34 view .LVU1315
 4734 020c D003     		lsls	r0, r2, #15
 4735 020e 2ED4     		bmi	.L313
2489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4736              		.loc 1 2489 13 discriminator 36 view .LVU1316
 4737 0210 9003     		lsls	r0, r2, #14
 4738 0212 2FD4     		bmi	.L314
2489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4739              		.loc 1 2489 13 discriminator 38 view .LVU1317
 4740 0214 5203     		lsls	r2, r2, #13
 4741 0216 30D5     		bpl	.L315
2489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 4742              		.loc 1 2489 13 view .LVU1318
 4743 0218 8022     		movs	r2, #128
 4744 021a D202     		lsls	r2, r2, #11
 4745 021c 1DE7     		b	.L265
 4746              	.L297:
 4747 021e 0122     		movs	r2, #1
 4748 0220 1BE7     		b	.L265
 4749              	.L298:
 4750 0222 0222     		movs	r2, #2
 4751 0224 19E7     		b	.L265
 4752              	.L299:
 4753 0226 0422     		movs	r2, #4
 4754 0228 17E7     		b	.L265
 4755              	.L300:
 4756 022a 0822     		movs	r2, #8
 4757 022c 15E7     		b	.L265
 4758              	.L301:
 4759 022e 1022     		movs	r2, #16
 4760 0230 13E7     		b	.L265
 4761              	.L302:
 4762 0232 2022     		movs	r2, #32
 4763 0234 11E7     		b	.L265
 4764              	.L303:
 4765 0236 4022     		movs	r2, #64
 4766 0238 0FE7     		b	.L265
 4767              	.L304:
 4768 023a 8022     		movs	r2, #128
 4769 023c 0DE7     		b	.L265
 4770              	.L305:
 4771 023e 8022     		movs	r2, #128
 4772 0240 5200     		lsls	r2, r2, #1
 4773 0242 0AE7     		b	.L265
 4774              	.L306:
 4775 0244 8022     		movs	r2, #128
 4776 0246 9200     		lsls	r2, r2, #2
 4777 0248 07E7     		b	.L265
 4778              	.L307:
 4779 024a 8022     		movs	r2, #128
 4780 024c D200     		lsls	r2, r2, #3
 4781 024e 04E7     		b	.L265
 4782              	.L308:
 4783 0250 8022     		movs	r2, #128
 4784 0252 1201     		lsls	r2, r2, #4
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 249


 4785 0254 01E7     		b	.L265
 4786              	.L309:
 4787 0256 8022     		movs	r2, #128
 4788 0258 5201     		lsls	r2, r2, #5
 4789 025a FEE6     		b	.L265
 4790              	.L310:
 4791 025c 8022     		movs	r2, #128
 4792 025e 9201     		lsls	r2, r2, #6
 4793 0260 FBE6     		b	.L265
 4794              	.L311:
 4795 0262 8022     		movs	r2, #128
 4796 0264 D201     		lsls	r2, r2, #7
 4797 0266 F8E6     		b	.L265
 4798              	.L312:
 4799 0268 8022     		movs	r2, #128
 4800 026a 1202     		lsls	r2, r2, #8
 4801 026c F5E6     		b	.L265
 4802              	.L313:
 4803 026e 8022     		movs	r2, #128
 4804 0270 5202     		lsls	r2, r2, #9
 4805 0272 F2E6     		b	.L265
 4806              	.L314:
 4807 0274 8022     		movs	r2, #128
 4808 0276 9202     		lsls	r2, r2, #10
 4809 0278 EFE6     		b	.L265
 4810              	.L315:
 4811 027a 0122     		movs	r2, #1
 4812 027c EDE6     		b	.L265
 4813              	.L258:
2494:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                           pAnalogWDGConfig->WatchdogNumber,
 4814              		.loc 1 2494 11 is_stmt 1 view .LVU1319
 4815              	.LVL341:
 4816              	.LBB282:
 4817              	.LBI282:
3988:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 4818              		.loc 2 3988 22 view .LVU1320
 4819              	.LBB283:
3994:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 4820              		.loc 2 3994 3 view .LVU1321
3996:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   {
 4821              		.loc 2 3996 3 view .LVU1322
3996:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   {
 4822              		.loc 2 3996 6 is_stmt 0 view .LVU1323
 4823 027e 1449     		ldr	r1, .L326
 4824 0280 8A42     		cmp	r2, r1
 4825 0282 23D0     		beq	.L320
4002:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                 ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK)) >> (ADC_AWD_CRX_REGOFFSET_BIT
 4826              		.loc 2 4002 5 is_stmt 1 view .LVU1324
4002:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                 ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK)) >> (ADC_AWD_CRX_REGOFFSET_BIT
 4827              		.loc 2 4002 12 is_stmt 0 view .LVU1325
 4828 0284 A033     		adds	r3, r3, #160
 4829              	.LVL342:
4002:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                 ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK)) >> (ADC_AWD_CRX_REGOFFSET_BIT
 4830              		.loc 2 4002 12 view .LVU1326
 4831 0286 500D     		lsrs	r0, r2, #21
 4832 0288 8000     		lsls	r0, r0, #2
 4833 028a 0421     		movs	r1, #4
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 250


 4834 028c 0140     		ands	r1, r0
 4835 028e 5B18     		adds	r3, r3, r1
 4836              	.LVL343:
 4837              	.L267:
4006:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4838              		.loc 2 4006 3 is_stmt 1 view .LVU1327
 4839 0290 1968     		ldr	r1, [r3]
 4840 0292 1348     		ldr	r0, .L326+16
 4841 0294 1040     		ands	r0, r2
 4842 0296 8143     		bics	r1, r0
 4843 0298 1248     		ldr	r0, .L326+20
 4844 029a 0240     		ands	r2, r0
 4845              	.LVL344:
4006:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4846              		.loc 2 4006 3 is_stmt 0 view .LVU1328
 4847 029c 0A43     		orrs	r2, r1
 4848 029e 1A60     		str	r2, [r3]
 4849              	.LVL345:
 4850              	.L263:
4006:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4851              		.loc 2 4006 3 view .LVU1329
 4852              	.LBE283:
 4853              	.LBE282:
2504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4854              		.loc 1 2504 7 is_stmt 1 view .LVU1330
2504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4855              		.loc 1 2504 10 is_stmt 0 view .LVU1331
 4856 02a0 0C4B     		ldr	r3, .L326+4
 4857 02a2 2A68     		ldr	r2, [r5]
 4858 02a4 9A42     		cmp	r2, r3
 4859 02a6 34D0     		beq	.L321
2529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4860              		.loc 1 2529 9 is_stmt 1 view .LVU1332
 4861 02a8 A36D     		ldr	r3, [r4, #88]
 4862 02aa 0F4A     		ldr	r2, .L326+24
 4863 02ac 1340     		ands	r3, r2
 4864 02ae A365     		str	r3, [r4, #88]
2535:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4865              		.loc 1 2535 9 view .LVU1333
 4866 02b0 2368     		ldr	r3, [r4]
 4867              	.LVL346:
 4868              	.LBB285:
 4869              	.LBI285:
5085:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 4870              		.loc 2 5085 22 view .LVU1334
 4871              	.LBB286:
5087:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 4872              		.loc 2 5087 3 view .LVU1335
 4873 02b2 8022     		movs	r2, #128
 4874 02b4 9200     		lsls	r2, r2, #2
 4875 02b6 1A60     		str	r2, [r3]
 4876              	.LVL347:
5087:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 4877              		.loc 2 5087 3 is_stmt 0 view .LVU1336
 4878              	.LBE286:
 4879              	.LBE285:
2538:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 251


 4880              		.loc 1 2538 9 is_stmt 1 view .LVU1337
2538:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 4881              		.loc 1 2538 29 is_stmt 0 view .LVU1338
 4882 02b8 2B7B     		ldrb	r3, [r5, #12]
2538:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 4883              		.loc 1 2538 12 view .LVU1339
 4884 02ba 012B     		cmp	r3, #1
 4885 02bc 42D0     		beq	.L322
2544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 4886              		.loc 1 2544 11 is_stmt 1 view .LVU1340
 4887 02be 2268     		ldr	r2, [r4]
 4888              	.LVL348:
 4889              	.LBB287:
 4890              	.LBI287:
5295:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5296:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 2.
5298:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_DisableIT_AWD2
5299:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5300:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5301:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5302:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD2(ADC_TypeDef *ADCx)
5303:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5304:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD2);
5305:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
5306:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
5307:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
5308:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 3.
5309:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_DisableIT_AWD3
5310:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
5311:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
5312:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
5313:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD3(ADC_TypeDef *ADCx)
 4891              		.loc 2 5313 22 view .LVU1341
 4892              	.LBB288:
5314:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
5315:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD3);
 4893              		.loc 2 5315 3 view .LVU1342
 4894 02c0 5368     		ldr	r3, [r2, #4]
 4895 02c2 0A49     		ldr	r1, .L326+28
 4896 02c4 0B40     		ands	r3, r1
 4897 02c6 5360     		str	r3, [r2, #4]
 4898              	.LBE288:
 4899              	.LBE287:
2377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_awd_high_threshold_shifted;
 4900              		.loc 1 2377 21 is_stmt 0 view .LVU1343
 4901 02c8 0020     		movs	r0, #0
 4902              	.LBB290:
 4903              	.LBB289:
5316:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 4904              		.loc 2 5316 1 view .LVU1344
 4905 02ca 44E0     		b	.L250
 4906              	.LVL349:
 4907              	.L320:
 4908              		.loc 2 5316 1 view .LVU1345
 4909              	.LBE289:
 4910              	.LBE290:
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 252


 4911              	.LBB291:
 4912              	.LBB284:
3998:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   }
 4913              		.loc 2 3998 5 is_stmt 1 view .LVU1346
3998:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   }
 4914              		.loc 2 3998 10 is_stmt 0 view .LVU1347
 4915 02cc 0C33     		adds	r3, r3, #12
 4916              	.LVL350:
3998:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   }
 4917              		.loc 2 3998 10 view .LVU1348
 4918 02ce DFE7     		b	.L267
 4919              	.L327:
 4920              		.align	2
 4921              	.L326:
 4922 02d0 0000C07C 		.word	2092957696
 4923 02d4 FFFF1700 		.word	1572863
 4924 02d8 FFFF3F83 		.word	-2092957697
 4925 02dc FFFFFEFF 		.word	-65537
 4926 02e0 FFFFC77C 		.word	2093481983
 4927 02e4 FFFF8700 		.word	8912895
 4928 02e8 FFFFFBFF 		.word	-262145
 4929 02ec FFFDFFFF 		.word	-513
 4930              	.LVL351:
 4931              	.L259:
3998:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   }
 4932              		.loc 2 3998 10 view .LVU1349
 4933              	.LBE284:
 4934              	.LBE291:
2500:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
 4935              		.loc 1 2500 11 is_stmt 1 view .LVU1350
 4936              	.LBB292:
 4937              	.LBI292:
3988:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 4938              		.loc 2 3988 22 view .LVU1351
 4939              	.LBB293:
3994:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 4940              		.loc 2 3994 3 view .LVU1352
3996:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   {
 4941              		.loc 2 3996 3 view .LVU1353
3996:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   {
 4942              		.loc 2 3996 6 is_stmt 0 view .LVU1354
 4943 02f0 3049     		ldr	r1, .L328
 4944 02f2 8A42     		cmp	r2, r1
 4945 02f4 0BD0     		beq	.L323
4002:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                 ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK)) >> (ADC_AWD_CRX_REGOFFSET_BIT
 4946              		.loc 2 4002 5 is_stmt 1 view .LVU1355
4002:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                 ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK)) >> (ADC_AWD_CRX_REGOFFSET_BIT
 4947              		.loc 2 4002 12 is_stmt 0 view .LVU1356
 4948 02f6 A033     		adds	r3, r3, #160
 4949              	.LVL352:
4002:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                 ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK)) >> (ADC_AWD_CRX_REGOFFSET_BIT
 4950              		.loc 2 4002 12 view .LVU1357
 4951 02f8 500D     		lsrs	r0, r2, #21
 4952 02fa 8000     		lsls	r0, r0, #2
 4953 02fc 0421     		movs	r1, #4
 4954 02fe 0140     		ands	r1, r0
 4955 0300 5B18     		adds	r3, r3, r1
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 253


 4956              	.LVL353:
 4957              	.L269:
4006:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4958              		.loc 2 4006 3 is_stmt 1 view .LVU1358
 4959 0302 1968     		ldr	r1, [r3]
 4960 0304 2C48     		ldr	r0, .L328+4
 4961 0306 0240     		ands	r2, r0
 4962              	.LVL354:
4006:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4963              		.loc 2 4006 3 is_stmt 0 view .LVU1359
 4964 0308 9143     		bics	r1, r2
 4965 030a 1960     		str	r1, [r3]
 4966              	.LVL355:
4009:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 4967              		.loc 2 4009 1 view .LVU1360
 4968 030c C8E7     		b	.L263
 4969              	.LVL356:
 4970              	.L323:
3998:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   }
 4971              		.loc 2 3998 5 is_stmt 1 view .LVU1361
3998:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   }
 4972              		.loc 2 3998 10 is_stmt 0 view .LVU1362
 4973 030e 0C33     		adds	r3, r3, #12
 4974              	.LVL357:
3998:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   }
 4975              		.loc 2 3998 10 view .LVU1363
 4976 0310 F7E7     		b	.L269
 4977              	.LVL358:
 4978              	.L321:
3998:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   }
 4979              		.loc 2 3998 10 view .LVU1364
 4980              	.LBE293:
 4981              	.LBE292:
2507:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4982              		.loc 1 2507 9 is_stmt 1 view .LVU1365
 4983 0312 A36D     		ldr	r3, [r4, #88]
 4984 0314 294A     		ldr	r2, .L328+8
 4985 0316 1340     		ands	r3, r2
 4986 0318 A365     		str	r3, [r4, #88]
2513:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4987              		.loc 1 2513 9 view .LVU1366
 4988 031a 2368     		ldr	r3, [r4]
 4989              	.LVL359:
 4990              	.LBB294:
 4991              	.LBI294:
5074:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 4992              		.loc 2 5074 22 view .LVU1367
 4993              	.LBB295:
5076:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 4994              		.loc 2 5076 3 view .LVU1368
 4995 031c 8022     		movs	r2, #128
 4996 031e 5200     		lsls	r2, r2, #1
 4997 0320 1A60     		str	r2, [r3]
 4998              	.LVL360:
5076:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 4999              		.loc 2 5076 3 is_stmt 0 view .LVU1369
 5000              	.LBE295:
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 254


 5001              	.LBE294:
2516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 5002              		.loc 1 2516 9 is_stmt 1 view .LVU1370
2516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 5003              		.loc 1 2516 29 is_stmt 0 view .LVU1371
 5004 0322 2B7B     		ldrb	r3, [r5, #12]
2516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 5005              		.loc 1 2516 12 view .LVU1372
 5006 0324 012B     		cmp	r3, #1
 5007 0326 06D0     		beq	.L324
2522:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 5008              		.loc 1 2522 11 is_stmt 1 view .LVU1373
 5009 0328 2268     		ldr	r2, [r4]
 5010              	.LVL361:
 5011              	.LBB296:
 5012              	.LBI296:
5302:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 5013              		.loc 2 5302 22 view .LVU1374
 5014              	.LBB297:
5304:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 5015              		.loc 2 5304 3 view .LVU1375
 5016 032a 5368     		ldr	r3, [r2, #4]
 5017 032c 2449     		ldr	r1, .L328+12
 5018 032e 0B40     		ands	r3, r1
 5019 0330 5360     		str	r3, [r2, #4]
 5020              	.LBE297:
 5021              	.LBE296:
2377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_awd_high_threshold_shifted;
 5022              		.loc 1 2377 21 is_stmt 0 view .LVU1376
 5023 0332 0020     		movs	r0, #0
 5024              	.LBB299:
 5025              	.LBB298:
5305:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 5026              		.loc 2 5305 1 view .LVU1377
 5027 0334 0FE0     		b	.L250
 5028              	.LVL362:
 5029              	.L324:
5305:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 5030              		.loc 2 5305 1 view .LVU1378
 5031              	.LBE298:
 5032              	.LBE299:
2518:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 5033              		.loc 1 2518 11 is_stmt 1 view .LVU1379
 5034 0336 2268     		ldr	r2, [r4]
 5035              	.LVL363:
 5036              	.LBB300:
 5037              	.LBI300:
5192:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 5038              		.loc 2 5192 22 view .LVU1380
 5039              	.LBB301:
5194:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 5040              		.loc 2 5194 3 view .LVU1381
 5041 0338 5168     		ldr	r1, [r2, #4]
 5042 033a FF33     		adds	r3, r3, #255
 5043 033c 0B43     		orrs	r3, r1
 5044 033e 5360     		str	r3, [r2, #4]
 5045              	.LBE301:
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 255


 5046              	.LBE300:
2377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_awd_high_threshold_shifted;
 5047              		.loc 1 2377 21 is_stmt 0 view .LVU1382
 5048 0340 0020     		movs	r0, #0
 5049              	.LBB303:
 5050              	.LBB302:
5195:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 5051              		.loc 2 5195 1 view .LVU1383
 5052 0342 08E0     		b	.L250
 5053              	.LVL364:
 5054              	.L322:
5195:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 5055              		.loc 2 5195 1 view .LVU1384
 5056              	.LBE302:
 5057              	.LBE303:
2540:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 5058              		.loc 1 2540 11 is_stmt 1 view .LVU1385
 5059 0344 2268     		ldr	r2, [r4]
 5060              	.LVL365:
 5061              	.LBB304:
 5062              	.LBI304:
5203:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 5063              		.loc 2 5203 22 view .LVU1386
 5064              	.LBB305:
5205:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 5065              		.loc 2 5205 3 view .LVU1387
 5066 0346 5168     		ldr	r1, [r2, #4]
 5067 0348 8023     		movs	r3, #128
 5068 034a 9B00     		lsls	r3, r3, #2
 5069 034c 0B43     		orrs	r3, r1
 5070 034e 5360     		str	r3, [r2, #4]
 5071              	.LBE305:
 5072              	.LBE304:
2377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_awd_high_threshold_shifted;
 5073              		.loc 1 2377 21 is_stmt 0 view .LVU1388
 5074 0350 0020     		movs	r0, #0
 5075              	.LBB307:
 5076              	.LBB306:
5206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 5077              		.loc 2 5206 1 view .LVU1389
 5078 0352 00E0     		b	.L250
 5079              	.LVL366:
 5080              	.L276:
5206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 5081              		.loc 2 5206 1 view .LVU1390
 5082              	.LBE306:
 5083              	.LBE307:
2377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_awd_high_threshold_shifted;
 5084              		.loc 1 2377 21 view .LVU1391
 5085 0354 0020     		movs	r0, #0
 5086              	.LVL367:
 5087              	.L250:
2552:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 5088              		.loc 1 2552 3 is_stmt 1 view .LVU1392
2552:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 5089              		.loc 1 2552 23 is_stmt 0 view .LVU1393
 5090 0356 2968     		ldr	r1, [r5]
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 256


2552:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 5091              		.loc 1 2552 6 view .LVU1394
 5092 0358 164B     		ldr	r3, .L328
 5093 035a 9942     		cmp	r1, r3
 5094 035c 17D0     		beq	.L325
2566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_awd_low_threshold_shifted  = pAnalogWDGConfig->LowThreshold;
 5095              		.loc 1 2566 5 is_stmt 1 view .LVU1395
2566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_awd_low_threshold_shifted  = pAnalogWDGConfig->LowThreshold;
 5096              		.loc 1 2566 36 is_stmt 0 view .LVU1396
 5097 035e 2E69     		ldr	r6, [r5, #16]
 5098              	.LVL368:
2567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 5099              		.loc 1 2567 5 is_stmt 1 view .LVU1397
2567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 5100              		.loc 1 2567 36 is_stmt 0 view .LVU1398
 5101 0360 6F69     		ldr	r7, [r5, #20]
 5102              	.LVL369:
 5103              	.L274:
2571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                                   tmp_awd_low_threshold_shifted);
 5104              		.loc 1 2571 3 is_stmt 1 view .LVU1399
 5105              	.LBB308:
 5106              	.LBI308:
4208:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
 5107              		.loc 2 4208 22 view .LVU1400
 5108              	.LBB309:
4216:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK))
 5109              		.loc 2 4216 3 view .LVU1401
4216:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK))
 5110              		.loc 2 4216 25 is_stmt 0 view .LVU1402
 5111 0362 2568     		ldr	r5, [r4]
 5112 0364 2035     		adds	r5, r5, #32
 5113 0366 0A0D     		lsrs	r2, r1, #20
 5114 0368 0323     		movs	r3, #3
 5115 036a 1340     		ands	r3, r2
 5116 036c 490D     		lsrs	r1, r1, #21
 5117              	.LVL370:
4216:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK))
 5118              		.loc 2 4216 25 view .LVU1403
 5119 036e 0122     		movs	r2, #1
 5120 0370 1140     		ands	r1, r2
 5121 0372 5B18     		adds	r3, r3, r1
 5122 0374 9B00     		lsls	r3, r3, #2
 5123 0376 EB18     		adds	r3, r5, r3
 5124              	.LVL371:
4223:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_AWD1TR_HT1 | ADC_AWD1TR_LT1,
 5125              		.loc 2 4223 3 is_stmt 1 view .LVU1404
 5126 0378 1A68     		ldr	r2, [r3]
 5127 037a 1249     		ldr	r1, .L328+16
 5128 037c 0A40     		ands	r2, r1
 5129 037e 3604     		lsls	r6, r6, #16
 5130              	.LVL372:
4223:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_AWD1TR_HT1 | ADC_AWD1TR_LT1,
 5131              		.loc 2 4223 3 is_stmt 0 view .LVU1405
 5132 0380 3743     		orrs	r7, r6
 5133              	.LVL373:
4223:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_AWD1TR_HT1 | ADC_AWD1TR_LT1,
 5134              		.loc 2 4223 3 view .LVU1406
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 257


 5135 0382 3A43     		orrs	r2, r7
 5136 0384 1A60     		str	r2, [r3]
 5137              	.LVL374:
4223:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_AWD1TR_HT1 | ADC_AWD1TR_LT1,
 5138              		.loc 2 4223 3 view .LVU1407
 5139              	.LBE309:
 5140              	.LBE308:
2574:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 5141              		.loc 1 2574 3 is_stmt 1 view .LVU1408
2574:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 5142              		.loc 1 2574 3 view .LVU1409
 5143 0386 5423     		movs	r3, #84
 5144 0388 0022     		movs	r2, #0
 5145 038a E254     		strb	r2, [r4, r3]
2574:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 5146              		.loc 1 2574 3 view .LVU1410
2576:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 5147              		.loc 1 2576 3 view .LVU1411
 5148              	.LVL375:
 5149              	.L249:
2577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 5150              		.loc 1 2577 1 is_stmt 0 view .LVU1412
 5151              		@ sp needed
 5152              	.LVL376:
2577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 5153              		.loc 1 2577 1 view .LVU1413
 5154 038c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5155              	.LVL377:
 5156              	.L325:
2557:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_awd_low_threshold_shifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, pAnalogWDGConfig->Low
 5157              		.loc 1 2557 5 is_stmt 1 view .LVU1414
2557:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_awd_low_threshold_shifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, pAnalogWDGConfig->Low
 5158              		.loc 1 2557 38 is_stmt 0 view .LVU1415
 5159 038e 2768     		ldr	r7, [r4]
 5160 0390 FB68     		ldr	r3, [r7, #12]
 5161 0392 DB08     		lsrs	r3, r3, #3
 5162 0394 0322     		movs	r2, #3
 5163 0396 1340     		ands	r3, r2
 5164 0398 5B00     		lsls	r3, r3, #1
2557:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_awd_low_threshold_shifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, pAnalogWDGConfig->Low
 5165              		.loc 1 2557 36 view .LVU1416
 5166 039a 2E69     		ldr	r6, [r5, #16]
 5167 039c 9E40     		lsls	r6, r6, r3
 5168              	.LVL378:
2558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 5169              		.loc 1 2558 5 is_stmt 1 view .LVU1417
2558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 5170              		.loc 1 2558 38 is_stmt 0 view .LVU1418
 5171 039e 6D69     		ldr	r5, [r5, #20]
 5172              	.LVL379:
2558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 5173              		.loc 1 2558 38 view .LVU1419
 5174 03a0 FB68     		ldr	r3, [r7, #12]
 5175 03a2 DB08     		lsrs	r3, r3, #3
 5176 03a4 1A40     		ands	r2, r3
 5177 03a6 5200     		lsls	r2, r2, #1
2558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 258


 5178              		.loc 1 2558 36 view .LVU1420
 5179 03a8 9540     		lsls	r5, r5, r2
 5180 03aa 2F00     		movs	r7, r5
 5181              	.LVL380:
2558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 5182              		.loc 1 2558 36 view .LVU1421
 5183 03ac D9E7     		b	.L274
 5184              	.LVL381:
 5185              	.L275:
2409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 5186              		.loc 1 2409 3 view .LVU1422
 5187 03ae 0220     		movs	r0, #2
 5188              	.LVL382:
2409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 5189              		.loc 1 2409 3 view .LVU1423
 5190 03b0 ECE7     		b	.L249
 5191              	.L329:
 5192 03b2 C046     		.align	2
 5193              	.L328:
 5194 03b4 0000C07C 		.word	2092957696
 5195 03b8 FFFFC77C 		.word	2093481983
 5196 03bc FFFFFDFF 		.word	-131073
 5197 03c0 FFFEFFFF 		.word	-257
 5198 03c4 00F000F0 		.word	-268374016
 5199              		.cfi_endproc
 5200              	.LFE459:
 5202              		.text
 5203              	.Letext0:
 5204              		.file 3 "c:\\dev\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\machine\\_default
 5205              		.file 4 "c:\\dev\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 5206              		.file 5 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g070xx.h"
 5207              		.file 6 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g0xx.h"
 5208              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 5209              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_dma.h"
 5210              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_adc.h"
 5211              		.file 10 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/system_stm32g0xx.h"
 5212              		.file 11 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h"
 5213              		.file 12 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
 5214              		.file 13 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_adc_ex.h"
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 259


DEFINED SYMBOLS
                            *ABS*:00000000 stm32g0xx_hal_adc.c
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:18     .text.HAL_ADC_MspInit:00000000 $t
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:24     .text.HAL_ADC_MspInit:00000000 HAL_ADC_MspInit
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:42     .text.HAL_ADC_Init:00000000 $t
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:48     .text.HAL_ADC_Init:00000000 HAL_ADC_Init
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:634    .text.HAL_ADC_Init:00000224 $d
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:646    .text.HAL_ADC_MspDeInit:00000000 $t
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:652    .text.HAL_ADC_MspDeInit:00000000 HAL_ADC_MspDeInit
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:668    .text.HAL_ADC_PollForConversion:00000000 $t
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:674    .text.HAL_ADC_PollForConversion:00000000 HAL_ADC_PollForConversion
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:889    .text.HAL_ADC_PollForConversion:000000bc $d
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:894    .text.HAL_ADC_PollForEvent:00000000 $t
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:900    .text.HAL_ADC_PollForEvent:00000000 HAL_ADC_PollForEvent
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:1096   .text.HAL_ADC_GetValue:00000000 $t
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:1102   .text.HAL_ADC_GetValue:00000000 HAL_ADC_GetValue
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:1124   .text.HAL_ADC_ConvCpltCallback:00000000 $t
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:1130   .text.HAL_ADC_ConvCpltCallback:00000000 HAL_ADC_ConvCpltCallback
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:1146   .text.HAL_ADC_ConvHalfCpltCallback:00000000 $t
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:1152   .text.HAL_ADC_ConvHalfCpltCallback:00000000 HAL_ADC_ConvHalfCpltCallback
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:1168   .text.ADC_DMAHalfConvCplt:00000000 $t
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:1173   .text.ADC_DMAHalfConvCplt:00000000 ADC_DMAHalfConvCplt
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:1200   .text.HAL_ADC_LevelOutOfWindowCallback:00000000 $t
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:1206   .text.HAL_ADC_LevelOutOfWindowCallback:00000000 HAL_ADC_LevelOutOfWindowCallback
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:1222   .text.HAL_ADC_ErrorCallback:00000000 $t
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:1228   .text.HAL_ADC_ErrorCallback:00000000 HAL_ADC_ErrorCallback
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:1244   .text.ADC_DMAError:00000000 $t
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:1249   .text.ADC_DMAError:00000000 ADC_DMAError
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:1286   .text.ADC_DMAConvCplt:00000000 $t
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:1291   .text.ADC_DMAConvCplt:00000000 ADC_DMAConvCplt
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:1437   .text.ADC_DMAConvCplt:0000007c $d
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:1442   .text.HAL_ADC_IRQHandler:00000000 $t
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:1448   .text.HAL_ADC_IRQHandler:00000000 HAL_ADC_IRQHandler
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:1778   .text.HAL_ADC_IRQHandler:00000154 $d
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:1783   .text.HAL_ADC_ConfigChannel:00000000 $t
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:1789   .text.HAL_ADC_ConfigChannel:00000000 HAL_ADC_ConfigChannel
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:2484   .text.HAL_ADC_ConfigChannel:0000027c $d
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:2497   .text.HAL_ADC_GetState:00000000 $t
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:2503   .text.HAL_ADC_GetState:00000000 HAL_ADC_GetState
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:2523   .text.HAL_ADC_GetError:00000000 $t
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:2529   .text.HAL_ADC_GetError:00000000 HAL_ADC_GetError
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:2549   .text.ADC_ConversionStop:00000000 $t
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:2555   .text.ADC_ConversionStop:00000000 ADC_ConversionStop
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:2689   .text.ADC_ConversionStop:0000005c $d
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:2694   .text.ADC_Enable:00000000 $t
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:2700   .text.ADC_Enable:00000000 ADC_Enable
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:2937   .text.ADC_Enable:000000b8 $d
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:2946   .text.HAL_ADC_Start:00000000 $t
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:2952   .text.HAL_ADC_Start:00000000 HAL_ADC_Start
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:3074   .text.HAL_ADC_Start:00000060 $d
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:3080   .text.HAL_ADC_Start_IT:00000000 $t
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:3086   .text.HAL_ADC_Start_IT:00000000 HAL_ADC_Start_IT
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:3246   .text.HAL_ADC_Start_IT:00000094 $d
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:3252   .text.HAL_ADC_Start_DMA:00000000 $t
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:3258   .text.HAL_ADC_Start_DMA:00000000 HAL_ADC_Start_DMA
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:3467   .text.HAL_ADC_Start_DMA:000000a8 $d
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:3476   .text.ADC_Disable:00000000 $t
ARM GAS  C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s 			page 260


C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:3482   .text.ADC_Disable:00000000 ADC_Disable
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:3662   .text.ADC_Disable:00000090 $d
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:3667   .text.HAL_ADC_DeInit:00000000 $t
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:3673   .text.HAL_ADC_DeInit:00000000 HAL_ADC_DeInit
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:3851   .text.HAL_ADC_DeInit:000000a4 $d
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:3862   .text.HAL_ADC_Stop:00000000 $t
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:3868   .text.HAL_ADC_Stop:00000000 HAL_ADC_Stop
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:3951   .text.HAL_ADC_Stop:00000040 $d
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:3956   .text.HAL_ADC_Stop_IT:00000000 $t
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:3962   .text.HAL_ADC_Stop_IT:00000000 HAL_ADC_Stop_IT
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:4051   .text.HAL_ADC_Stop_IT:0000004c $d
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:4056   .text.HAL_ADC_Stop_DMA:00000000 $t
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:4062   .text.HAL_ADC_Stop_DMA:00000000 HAL_ADC_Stop_DMA
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:4200   .text.HAL_ADC_Stop_DMA:00000080 $d
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:4205   .text.HAL_ADC_AnalogWDGConfig:00000000 $t
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:4211   .text.HAL_ADC_AnalogWDGConfig:00000000 HAL_ADC_AnalogWDGConfig
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:4922   .text.HAL_ADC_AnalogWDGConfig:000002d0 $d
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:4943   .text.HAL_ADC_AnalogWDGConfig:000002f0 $t
C:\Users\tugru\AppData\Local\Temp\ccFmcKQs.s:5194   .text.HAL_ADC_AnalogWDGConfig:000003b4 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
SystemCoreClock
HAL_GetTick
HAL_ADCEx_EndOfSamplingCallback
HAL_ADCEx_LevelOutOfWindow2Callback
HAL_ADCEx_LevelOutOfWindow3Callback
HAL_ADCEx_ChannelConfigReadyCallback
HAL_DMA_Start_IT
HAL_DMA_Abort
